//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Inventori.Contractor.Forms.Reports {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : System.Data.DataSet {
        
        private ITEM_GUDANG_STOKDataTable tableITEM_GUDANG_STOK;
        
        private M_ACCOUNTDataTable tableM_ACCOUNT;
        
        private M_BANKDataTable tableM_BANK;
        
        private M_COMMISSIONDataTable tableM_COMMISSION;
        
        private M_COMMISSION_SHAREDataTable tableM_COMMISSION_SHARE;
        
        private M_CUSTOMERDataTable tableM_CUSTOMER;
        
        private M_CUSTOMER_GROUPDataTable tableM_CUSTOMER_GROUP;
        
        private M_DEPDataTable tableM_DEP;
        
        private M_DESKDataTable tableM_DESK;
        
        private M_DISCOUNTDataTable tableM_DISCOUNT;
        
        private M_EMPLOYEEDataTable tableM_EMPLOYEE;
        
        private M_GROUPDataTable tableM_GROUP;
        
        private M_GUDANGDataTable tableM_GUDANG;
        
        private M_ITEMDataTable tableM_ITEM;
        
        private M_ITEM_TYPEDataTable tableM_ITEM_TYPE;
        
        private M_LOCATIONDataTable tableM_LOCATION;
        
        private M_MENUDataTable tableM_MENU;
        
        private M_PACKETDataTable tableM_PACKET;
        
        private M_PACKET_ITEMDataTable tableM_PACKET_ITEM;
        
        private M_ROOMDataTable tableM_ROOM;
        
        private M_SETTINGDataTable tableM_SETTING;
        
        private M_SUB_ACCOUNTDataTable tableM_SUB_ACCOUNT;
        
        private M_SUPPLIERDataTable tableM_SUPPLIER;
        
        private M_SUPPLIER_ACCOUNTDataTable tableM_SUPPLIER_ACCOUNT;
        
        private M_USERDataTable tableM_USER;
        
        private T_APOTEK_SETTINGDataTable tableT_APOTEK_SETTING;
        
        private T_BILLIARD_SETTINGDataTable tableT_BILLIARD_SETTING;
        
        private T_CAFE_SETTINGDataTable tableT_CAFE_SETTING;
        
        private T_COMMISSIONDataTable tableT_COMMISSION;
        
        private T_CONTRACTOR_SETTINGDataTable tableT_CONTRACTOR_SETTING;
        
        private T_DEFAULT_ACCOUNTDataTable tableT_DEFAULT_ACCOUNT;
        
        private T_DESKDataTable tableT_DESK;
        
        private T_GIRODataTable tableT_GIRO;
        
        private T_GROSIR_SETTINGDataTable tableT_GROSIR_SETTING;
        
        private T_JOURNALDataTable tableT_JOURNAL;
        
        private T_LOGDataTable tableT_LOG;
        
        private T_MENU_USERDataTable tableT_MENU_USER;
        
        private T_MOTOR_SETTINGDataTable tableT_MOTOR_SETTING;
        
        private T_PI_HUTANGDataTable tableT_PI_HUTANG;
        
        private T_REFERENCEDataTable tableT_REFERENCE;
        
        private T_REKAP_COMMISSIONDataTable tableT_REKAP_COMMISSION;
        
        private T_REKAP_SUB_ACCOUNTDataTable tableT_REKAP_SUB_ACCOUNT;
        
        private T_REKAP_TRANSACTIONDataTable tableT_REKAP_TRANSACTION;
        
        private T_STOK_CARDDataTable tableT_STOK_CARD;
        
        private T_TRANSACTIONDataTable tableT_TRANSACTION;
        
        private T_TRANSACTION_SERVICEDataTable tableT_TRANSACTION_SERVICE;
        
        private T_TRANSACTION_DETAILDataTable tableT_TRANSACTION_DETAIL;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ITEM_GUDANG_STOK"] != null)) {
                    base.Tables.Add(new ITEM_GUDANG_STOKDataTable(ds.Tables["ITEM_GUDANG_STOK"]));
                }
                if ((ds.Tables["M_ACCOUNT"] != null)) {
                    base.Tables.Add(new M_ACCOUNTDataTable(ds.Tables["M_ACCOUNT"]));
                }
                if ((ds.Tables["M_BANK"] != null)) {
                    base.Tables.Add(new M_BANKDataTable(ds.Tables["M_BANK"]));
                }
                if ((ds.Tables["M_COMMISSION"] != null)) {
                    base.Tables.Add(new M_COMMISSIONDataTable(ds.Tables["M_COMMISSION"]));
                }
                if ((ds.Tables["M_COMMISSION_SHARE"] != null)) {
                    base.Tables.Add(new M_COMMISSION_SHAREDataTable(ds.Tables["M_COMMISSION_SHARE"]));
                }
                if ((ds.Tables["M_CUSTOMER"] != null)) {
                    base.Tables.Add(new M_CUSTOMERDataTable(ds.Tables["M_CUSTOMER"]));
                }
                if ((ds.Tables["M_CUSTOMER_GROUP"] != null)) {
                    base.Tables.Add(new M_CUSTOMER_GROUPDataTable(ds.Tables["M_CUSTOMER_GROUP"]));
                }
                if ((ds.Tables["M_DEP"] != null)) {
                    base.Tables.Add(new M_DEPDataTable(ds.Tables["M_DEP"]));
                }
                if ((ds.Tables["M_DESK"] != null)) {
                    base.Tables.Add(new M_DESKDataTable(ds.Tables["M_DESK"]));
                }
                if ((ds.Tables["M_DISCOUNT"] != null)) {
                    base.Tables.Add(new M_DISCOUNTDataTable(ds.Tables["M_DISCOUNT"]));
                }
                if ((ds.Tables["M_EMPLOYEE"] != null)) {
                    base.Tables.Add(new M_EMPLOYEEDataTable(ds.Tables["M_EMPLOYEE"]));
                }
                if ((ds.Tables["M_GROUP"] != null)) {
                    base.Tables.Add(new M_GROUPDataTable(ds.Tables["M_GROUP"]));
                }
                if ((ds.Tables["M_GUDANG"] != null)) {
                    base.Tables.Add(new M_GUDANGDataTable(ds.Tables["M_GUDANG"]));
                }
                if ((ds.Tables["M_ITEM"] != null)) {
                    base.Tables.Add(new M_ITEMDataTable(ds.Tables["M_ITEM"]));
                }
                if ((ds.Tables["M_ITEM_TYPE"] != null)) {
                    base.Tables.Add(new M_ITEM_TYPEDataTable(ds.Tables["M_ITEM_TYPE"]));
                }
                if ((ds.Tables["M_LOCATION"] != null)) {
                    base.Tables.Add(new M_LOCATIONDataTable(ds.Tables["M_LOCATION"]));
                }
                if ((ds.Tables["M_MENU"] != null)) {
                    base.Tables.Add(new M_MENUDataTable(ds.Tables["M_MENU"]));
                }
                if ((ds.Tables["M_PACKET"] != null)) {
                    base.Tables.Add(new M_PACKETDataTable(ds.Tables["M_PACKET"]));
                }
                if ((ds.Tables["M_PACKET_ITEM"] != null)) {
                    base.Tables.Add(new M_PACKET_ITEMDataTable(ds.Tables["M_PACKET_ITEM"]));
                }
                if ((ds.Tables["M_ROOM"] != null)) {
                    base.Tables.Add(new M_ROOMDataTable(ds.Tables["M_ROOM"]));
                }
                if ((ds.Tables["M_SETTING"] != null)) {
                    base.Tables.Add(new M_SETTINGDataTable(ds.Tables["M_SETTING"]));
                }
                if ((ds.Tables["M_SUB_ACCOUNT"] != null)) {
                    base.Tables.Add(new M_SUB_ACCOUNTDataTable(ds.Tables["M_SUB_ACCOUNT"]));
                }
                if ((ds.Tables["M_SUPPLIER"] != null)) {
                    base.Tables.Add(new M_SUPPLIERDataTable(ds.Tables["M_SUPPLIER"]));
                }
                if ((ds.Tables["M_SUPPLIER_ACCOUNT"] != null)) {
                    base.Tables.Add(new M_SUPPLIER_ACCOUNTDataTable(ds.Tables["M_SUPPLIER_ACCOUNT"]));
                }
                if ((ds.Tables["M_USER"] != null)) {
                    base.Tables.Add(new M_USERDataTable(ds.Tables["M_USER"]));
                }
                if ((ds.Tables["T_APOTEK_SETTING"] != null)) {
                    base.Tables.Add(new T_APOTEK_SETTINGDataTable(ds.Tables["T_APOTEK_SETTING"]));
                }
                if ((ds.Tables["T_BILLIARD_SETTING"] != null)) {
                    base.Tables.Add(new T_BILLIARD_SETTINGDataTable(ds.Tables["T_BILLIARD_SETTING"]));
                }
                if ((ds.Tables["T_CAFE_SETTING"] != null)) {
                    base.Tables.Add(new T_CAFE_SETTINGDataTable(ds.Tables["T_CAFE_SETTING"]));
                }
                if ((ds.Tables["T_COMMISSION"] != null)) {
                    base.Tables.Add(new T_COMMISSIONDataTable(ds.Tables["T_COMMISSION"]));
                }
                if ((ds.Tables["T_CONTRACTOR_SETTING"] != null)) {
                    base.Tables.Add(new T_CONTRACTOR_SETTINGDataTable(ds.Tables["T_CONTRACTOR_SETTING"]));
                }
                if ((ds.Tables["T_DEFAULT_ACCOUNT"] != null)) {
                    base.Tables.Add(new T_DEFAULT_ACCOUNTDataTable(ds.Tables["T_DEFAULT_ACCOUNT"]));
                }
                if ((ds.Tables["T_DESK"] != null)) {
                    base.Tables.Add(new T_DESKDataTable(ds.Tables["T_DESK"]));
                }
                if ((ds.Tables["T_GIRO"] != null)) {
                    base.Tables.Add(new T_GIRODataTable(ds.Tables["T_GIRO"]));
                }
                if ((ds.Tables["T_GROSIR_SETTING"] != null)) {
                    base.Tables.Add(new T_GROSIR_SETTINGDataTable(ds.Tables["T_GROSIR_SETTING"]));
                }
                if ((ds.Tables["T_JOURNAL"] != null)) {
                    base.Tables.Add(new T_JOURNALDataTable(ds.Tables["T_JOURNAL"]));
                }
                if ((ds.Tables["T_LOG"] != null)) {
                    base.Tables.Add(new T_LOGDataTable(ds.Tables["T_LOG"]));
                }
                if ((ds.Tables["T_MENU_USER"] != null)) {
                    base.Tables.Add(new T_MENU_USERDataTable(ds.Tables["T_MENU_USER"]));
                }
                if ((ds.Tables["T_MOTOR_SETTING"] != null)) {
                    base.Tables.Add(new T_MOTOR_SETTINGDataTable(ds.Tables["T_MOTOR_SETTING"]));
                }
                if ((ds.Tables["T_PI_HUTANG"] != null)) {
                    base.Tables.Add(new T_PI_HUTANGDataTable(ds.Tables["T_PI_HUTANG"]));
                }
                if ((ds.Tables["T_REFERENCE"] != null)) {
                    base.Tables.Add(new T_REFERENCEDataTable(ds.Tables["T_REFERENCE"]));
                }
                if ((ds.Tables["T_REKAP_COMMISSION"] != null)) {
                    base.Tables.Add(new T_REKAP_COMMISSIONDataTable(ds.Tables["T_REKAP_COMMISSION"]));
                }
                if ((ds.Tables["T_REKAP_SUB_ACCOUNT"] != null)) {
                    base.Tables.Add(new T_REKAP_SUB_ACCOUNTDataTable(ds.Tables["T_REKAP_SUB_ACCOUNT"]));
                }
                if ((ds.Tables["T_REKAP_TRANSACTION"] != null)) {
                    base.Tables.Add(new T_REKAP_TRANSACTIONDataTable(ds.Tables["T_REKAP_TRANSACTION"]));
                }
                if ((ds.Tables["T_STOK_CARD"] != null)) {
                    base.Tables.Add(new T_STOK_CARDDataTable(ds.Tables["T_STOK_CARD"]));
                }
                if ((ds.Tables["T_TRANSACTION"] != null)) {
                    base.Tables.Add(new T_TRANSACTIONDataTable(ds.Tables["T_TRANSACTION"]));
                }
                if ((ds.Tables["T_TRANSACTION_SERVICE"] != null)) {
                    base.Tables.Add(new T_TRANSACTION_SERVICEDataTable(ds.Tables["T_TRANSACTION_SERVICE"]));
                }
                if ((ds.Tables["T_TRANSACTION_DETAIL"] != null)) {
                    base.Tables.Add(new T_TRANSACTION_DETAILDataTable(ds.Tables["T_TRANSACTION_DETAIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ITEM_GUDANG_STOKDataTable ITEM_GUDANG_STOK {
            get {
                return this.tableITEM_GUDANG_STOK;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_ACCOUNTDataTable M_ACCOUNT {
            get {
                return this.tableM_ACCOUNT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_BANKDataTable M_BANK {
            get {
                return this.tableM_BANK;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_COMMISSIONDataTable M_COMMISSION {
            get {
                return this.tableM_COMMISSION;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_COMMISSION_SHAREDataTable M_COMMISSION_SHARE {
            get {
                return this.tableM_COMMISSION_SHARE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_CUSTOMERDataTable M_CUSTOMER {
            get {
                return this.tableM_CUSTOMER;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_CUSTOMER_GROUPDataTable M_CUSTOMER_GROUP {
            get {
                return this.tableM_CUSTOMER_GROUP;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_DEPDataTable M_DEP {
            get {
                return this.tableM_DEP;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_DESKDataTable M_DESK {
            get {
                return this.tableM_DESK;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_DISCOUNTDataTable M_DISCOUNT {
            get {
                return this.tableM_DISCOUNT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_EMPLOYEEDataTable M_EMPLOYEE {
            get {
                return this.tableM_EMPLOYEE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_GROUPDataTable M_GROUP {
            get {
                return this.tableM_GROUP;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_GUDANGDataTable M_GUDANG {
            get {
                return this.tableM_GUDANG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_ITEMDataTable M_ITEM {
            get {
                return this.tableM_ITEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_ITEM_TYPEDataTable M_ITEM_TYPE {
            get {
                return this.tableM_ITEM_TYPE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_LOCATIONDataTable M_LOCATION {
            get {
                return this.tableM_LOCATION;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_MENUDataTable M_MENU {
            get {
                return this.tableM_MENU;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_PACKETDataTable M_PACKET {
            get {
                return this.tableM_PACKET;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_PACKET_ITEMDataTable M_PACKET_ITEM {
            get {
                return this.tableM_PACKET_ITEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_ROOMDataTable M_ROOM {
            get {
                return this.tableM_ROOM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_SETTINGDataTable M_SETTING {
            get {
                return this.tableM_SETTING;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_SUB_ACCOUNTDataTable M_SUB_ACCOUNT {
            get {
                return this.tableM_SUB_ACCOUNT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_SUPPLIERDataTable M_SUPPLIER {
            get {
                return this.tableM_SUPPLIER;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_SUPPLIER_ACCOUNTDataTable M_SUPPLIER_ACCOUNT {
            get {
                return this.tableM_SUPPLIER_ACCOUNT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public M_USERDataTable M_USER {
            get {
                return this.tableM_USER;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_APOTEK_SETTINGDataTable T_APOTEK_SETTING {
            get {
                return this.tableT_APOTEK_SETTING;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_BILLIARD_SETTINGDataTable T_BILLIARD_SETTING {
            get {
                return this.tableT_BILLIARD_SETTING;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_CAFE_SETTINGDataTable T_CAFE_SETTING {
            get {
                return this.tableT_CAFE_SETTING;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_COMMISSIONDataTable T_COMMISSION {
            get {
                return this.tableT_COMMISSION;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_CONTRACTOR_SETTINGDataTable T_CONTRACTOR_SETTING {
            get {
                return this.tableT_CONTRACTOR_SETTING;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DEFAULT_ACCOUNTDataTable T_DEFAULT_ACCOUNT {
            get {
                return this.tableT_DEFAULT_ACCOUNT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DESKDataTable T_DESK {
            get {
                return this.tableT_DESK;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_GIRODataTable T_GIRO {
            get {
                return this.tableT_GIRO;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_GROSIR_SETTINGDataTable T_GROSIR_SETTING {
            get {
                return this.tableT_GROSIR_SETTING;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_JOURNALDataTable T_JOURNAL {
            get {
                return this.tableT_JOURNAL;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_LOGDataTable T_LOG {
            get {
                return this.tableT_LOG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_MENU_USERDataTable T_MENU_USER {
            get {
                return this.tableT_MENU_USER;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_MOTOR_SETTINGDataTable T_MOTOR_SETTING {
            get {
                return this.tableT_MOTOR_SETTING;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PI_HUTANGDataTable T_PI_HUTANG {
            get {
                return this.tableT_PI_HUTANG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_REFERENCEDataTable T_REFERENCE {
            get {
                return this.tableT_REFERENCE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_REKAP_COMMISSIONDataTable T_REKAP_COMMISSION {
            get {
                return this.tableT_REKAP_COMMISSION;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_REKAP_SUB_ACCOUNTDataTable T_REKAP_SUB_ACCOUNT {
            get {
                return this.tableT_REKAP_SUB_ACCOUNT;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_REKAP_TRANSACTIONDataTable T_REKAP_TRANSACTION {
            get {
                return this.tableT_REKAP_TRANSACTION;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_STOK_CARDDataTable T_STOK_CARD {
            get {
                return this.tableT_STOK_CARD;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_TRANSACTIONDataTable T_TRANSACTION {
            get {
                return this.tableT_TRANSACTION;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_TRANSACTION_SERVICEDataTable T_TRANSACTION_SERVICE {
            get {
                return this.tableT_TRANSACTION_SERVICE;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_TRANSACTION_DETAILDataTable T_TRANSACTION_DETAIL {
            get {
                return this.tableT_TRANSACTION_DETAIL;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ITEM_GUDANG_STOK"] != null)) {
                    base.Tables.Add(new ITEM_GUDANG_STOKDataTable(ds.Tables["ITEM_GUDANG_STOK"]));
                }
                if ((ds.Tables["M_ACCOUNT"] != null)) {
                    base.Tables.Add(new M_ACCOUNTDataTable(ds.Tables["M_ACCOUNT"]));
                }
                if ((ds.Tables["M_BANK"] != null)) {
                    base.Tables.Add(new M_BANKDataTable(ds.Tables["M_BANK"]));
                }
                if ((ds.Tables["M_COMMISSION"] != null)) {
                    base.Tables.Add(new M_COMMISSIONDataTable(ds.Tables["M_COMMISSION"]));
                }
                if ((ds.Tables["M_COMMISSION_SHARE"] != null)) {
                    base.Tables.Add(new M_COMMISSION_SHAREDataTable(ds.Tables["M_COMMISSION_SHARE"]));
                }
                if ((ds.Tables["M_CUSTOMER"] != null)) {
                    base.Tables.Add(new M_CUSTOMERDataTable(ds.Tables["M_CUSTOMER"]));
                }
                if ((ds.Tables["M_CUSTOMER_GROUP"] != null)) {
                    base.Tables.Add(new M_CUSTOMER_GROUPDataTable(ds.Tables["M_CUSTOMER_GROUP"]));
                }
                if ((ds.Tables["M_DEP"] != null)) {
                    base.Tables.Add(new M_DEPDataTable(ds.Tables["M_DEP"]));
                }
                if ((ds.Tables["M_DESK"] != null)) {
                    base.Tables.Add(new M_DESKDataTable(ds.Tables["M_DESK"]));
                }
                if ((ds.Tables["M_DISCOUNT"] != null)) {
                    base.Tables.Add(new M_DISCOUNTDataTable(ds.Tables["M_DISCOUNT"]));
                }
                if ((ds.Tables["M_EMPLOYEE"] != null)) {
                    base.Tables.Add(new M_EMPLOYEEDataTable(ds.Tables["M_EMPLOYEE"]));
                }
                if ((ds.Tables["M_GROUP"] != null)) {
                    base.Tables.Add(new M_GROUPDataTable(ds.Tables["M_GROUP"]));
                }
                if ((ds.Tables["M_GUDANG"] != null)) {
                    base.Tables.Add(new M_GUDANGDataTable(ds.Tables["M_GUDANG"]));
                }
                if ((ds.Tables["M_ITEM"] != null)) {
                    base.Tables.Add(new M_ITEMDataTable(ds.Tables["M_ITEM"]));
                }
                if ((ds.Tables["M_ITEM_TYPE"] != null)) {
                    base.Tables.Add(new M_ITEM_TYPEDataTable(ds.Tables["M_ITEM_TYPE"]));
                }
                if ((ds.Tables["M_LOCATION"] != null)) {
                    base.Tables.Add(new M_LOCATIONDataTable(ds.Tables["M_LOCATION"]));
                }
                if ((ds.Tables["M_MENU"] != null)) {
                    base.Tables.Add(new M_MENUDataTable(ds.Tables["M_MENU"]));
                }
                if ((ds.Tables["M_PACKET"] != null)) {
                    base.Tables.Add(new M_PACKETDataTable(ds.Tables["M_PACKET"]));
                }
                if ((ds.Tables["M_PACKET_ITEM"] != null)) {
                    base.Tables.Add(new M_PACKET_ITEMDataTable(ds.Tables["M_PACKET_ITEM"]));
                }
                if ((ds.Tables["M_ROOM"] != null)) {
                    base.Tables.Add(new M_ROOMDataTable(ds.Tables["M_ROOM"]));
                }
                if ((ds.Tables["M_SETTING"] != null)) {
                    base.Tables.Add(new M_SETTINGDataTable(ds.Tables["M_SETTING"]));
                }
                if ((ds.Tables["M_SUB_ACCOUNT"] != null)) {
                    base.Tables.Add(new M_SUB_ACCOUNTDataTable(ds.Tables["M_SUB_ACCOUNT"]));
                }
                if ((ds.Tables["M_SUPPLIER"] != null)) {
                    base.Tables.Add(new M_SUPPLIERDataTable(ds.Tables["M_SUPPLIER"]));
                }
                if ((ds.Tables["M_SUPPLIER_ACCOUNT"] != null)) {
                    base.Tables.Add(new M_SUPPLIER_ACCOUNTDataTable(ds.Tables["M_SUPPLIER_ACCOUNT"]));
                }
                if ((ds.Tables["M_USER"] != null)) {
                    base.Tables.Add(new M_USERDataTable(ds.Tables["M_USER"]));
                }
                if ((ds.Tables["T_APOTEK_SETTING"] != null)) {
                    base.Tables.Add(new T_APOTEK_SETTINGDataTable(ds.Tables["T_APOTEK_SETTING"]));
                }
                if ((ds.Tables["T_BILLIARD_SETTING"] != null)) {
                    base.Tables.Add(new T_BILLIARD_SETTINGDataTable(ds.Tables["T_BILLIARD_SETTING"]));
                }
                if ((ds.Tables["T_CAFE_SETTING"] != null)) {
                    base.Tables.Add(new T_CAFE_SETTINGDataTable(ds.Tables["T_CAFE_SETTING"]));
                }
                if ((ds.Tables["T_COMMISSION"] != null)) {
                    base.Tables.Add(new T_COMMISSIONDataTable(ds.Tables["T_COMMISSION"]));
                }
                if ((ds.Tables["T_CONTRACTOR_SETTING"] != null)) {
                    base.Tables.Add(new T_CONTRACTOR_SETTINGDataTable(ds.Tables["T_CONTRACTOR_SETTING"]));
                }
                if ((ds.Tables["T_DEFAULT_ACCOUNT"] != null)) {
                    base.Tables.Add(new T_DEFAULT_ACCOUNTDataTable(ds.Tables["T_DEFAULT_ACCOUNT"]));
                }
                if ((ds.Tables["T_DESK"] != null)) {
                    base.Tables.Add(new T_DESKDataTable(ds.Tables["T_DESK"]));
                }
                if ((ds.Tables["T_GIRO"] != null)) {
                    base.Tables.Add(new T_GIRODataTable(ds.Tables["T_GIRO"]));
                }
                if ((ds.Tables["T_GROSIR_SETTING"] != null)) {
                    base.Tables.Add(new T_GROSIR_SETTINGDataTable(ds.Tables["T_GROSIR_SETTING"]));
                }
                if ((ds.Tables["T_JOURNAL"] != null)) {
                    base.Tables.Add(new T_JOURNALDataTable(ds.Tables["T_JOURNAL"]));
                }
                if ((ds.Tables["T_LOG"] != null)) {
                    base.Tables.Add(new T_LOGDataTable(ds.Tables["T_LOG"]));
                }
                if ((ds.Tables["T_MENU_USER"] != null)) {
                    base.Tables.Add(new T_MENU_USERDataTable(ds.Tables["T_MENU_USER"]));
                }
                if ((ds.Tables["T_MOTOR_SETTING"] != null)) {
                    base.Tables.Add(new T_MOTOR_SETTINGDataTable(ds.Tables["T_MOTOR_SETTING"]));
                }
                if ((ds.Tables["T_PI_HUTANG"] != null)) {
                    base.Tables.Add(new T_PI_HUTANGDataTable(ds.Tables["T_PI_HUTANG"]));
                }
                if ((ds.Tables["T_REFERENCE"] != null)) {
                    base.Tables.Add(new T_REFERENCEDataTable(ds.Tables["T_REFERENCE"]));
                }
                if ((ds.Tables["T_REKAP_COMMISSION"] != null)) {
                    base.Tables.Add(new T_REKAP_COMMISSIONDataTable(ds.Tables["T_REKAP_COMMISSION"]));
                }
                if ((ds.Tables["T_REKAP_SUB_ACCOUNT"] != null)) {
                    base.Tables.Add(new T_REKAP_SUB_ACCOUNTDataTable(ds.Tables["T_REKAP_SUB_ACCOUNT"]));
                }
                if ((ds.Tables["T_REKAP_TRANSACTION"] != null)) {
                    base.Tables.Add(new T_REKAP_TRANSACTIONDataTable(ds.Tables["T_REKAP_TRANSACTION"]));
                }
                if ((ds.Tables["T_STOK_CARD"] != null)) {
                    base.Tables.Add(new T_STOK_CARDDataTable(ds.Tables["T_STOK_CARD"]));
                }
                if ((ds.Tables["T_TRANSACTION"] != null)) {
                    base.Tables.Add(new T_TRANSACTIONDataTable(ds.Tables["T_TRANSACTION"]));
                }
                if ((ds.Tables["T_TRANSACTION_SERVICE"] != null)) {
                    base.Tables.Add(new T_TRANSACTION_SERVICEDataTable(ds.Tables["T_TRANSACTION_SERVICE"]));
                }
                if ((ds.Tables["T_TRANSACTION_DETAIL"] != null)) {
                    base.Tables.Add(new T_TRANSACTION_DETAILDataTable(ds.Tables["T_TRANSACTION_DETAIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableITEM_GUDANG_STOK = ((ITEM_GUDANG_STOKDataTable)(base.Tables["ITEM_GUDANG_STOK"]));
            if ((initTable == true)) {
                if ((this.tableITEM_GUDANG_STOK != null)) {
                    this.tableITEM_GUDANG_STOK.InitVars();
                }
            }
            this.tableM_ACCOUNT = ((M_ACCOUNTDataTable)(base.Tables["M_ACCOUNT"]));
            if ((initTable == true)) {
                if ((this.tableM_ACCOUNT != null)) {
                    this.tableM_ACCOUNT.InitVars();
                }
            }
            this.tableM_BANK = ((M_BANKDataTable)(base.Tables["M_BANK"]));
            if ((initTable == true)) {
                if ((this.tableM_BANK != null)) {
                    this.tableM_BANK.InitVars();
                }
            }
            this.tableM_COMMISSION = ((M_COMMISSIONDataTable)(base.Tables["M_COMMISSION"]));
            if ((initTable == true)) {
                if ((this.tableM_COMMISSION != null)) {
                    this.tableM_COMMISSION.InitVars();
                }
            }
            this.tableM_COMMISSION_SHARE = ((M_COMMISSION_SHAREDataTable)(base.Tables["M_COMMISSION_SHARE"]));
            if ((initTable == true)) {
                if ((this.tableM_COMMISSION_SHARE != null)) {
                    this.tableM_COMMISSION_SHARE.InitVars();
                }
            }
            this.tableM_CUSTOMER = ((M_CUSTOMERDataTable)(base.Tables["M_CUSTOMER"]));
            if ((initTable == true)) {
                if ((this.tableM_CUSTOMER != null)) {
                    this.tableM_CUSTOMER.InitVars();
                }
            }
            this.tableM_CUSTOMER_GROUP = ((M_CUSTOMER_GROUPDataTable)(base.Tables["M_CUSTOMER_GROUP"]));
            if ((initTable == true)) {
                if ((this.tableM_CUSTOMER_GROUP != null)) {
                    this.tableM_CUSTOMER_GROUP.InitVars();
                }
            }
            this.tableM_DEP = ((M_DEPDataTable)(base.Tables["M_DEP"]));
            if ((initTable == true)) {
                if ((this.tableM_DEP != null)) {
                    this.tableM_DEP.InitVars();
                }
            }
            this.tableM_DESK = ((M_DESKDataTable)(base.Tables["M_DESK"]));
            if ((initTable == true)) {
                if ((this.tableM_DESK != null)) {
                    this.tableM_DESK.InitVars();
                }
            }
            this.tableM_DISCOUNT = ((M_DISCOUNTDataTable)(base.Tables["M_DISCOUNT"]));
            if ((initTable == true)) {
                if ((this.tableM_DISCOUNT != null)) {
                    this.tableM_DISCOUNT.InitVars();
                }
            }
            this.tableM_EMPLOYEE = ((M_EMPLOYEEDataTable)(base.Tables["M_EMPLOYEE"]));
            if ((initTable == true)) {
                if ((this.tableM_EMPLOYEE != null)) {
                    this.tableM_EMPLOYEE.InitVars();
                }
            }
            this.tableM_GROUP = ((M_GROUPDataTable)(base.Tables["M_GROUP"]));
            if ((initTable == true)) {
                if ((this.tableM_GROUP != null)) {
                    this.tableM_GROUP.InitVars();
                }
            }
            this.tableM_GUDANG = ((M_GUDANGDataTable)(base.Tables["M_GUDANG"]));
            if ((initTable == true)) {
                if ((this.tableM_GUDANG != null)) {
                    this.tableM_GUDANG.InitVars();
                }
            }
            this.tableM_ITEM = ((M_ITEMDataTable)(base.Tables["M_ITEM"]));
            if ((initTable == true)) {
                if ((this.tableM_ITEM != null)) {
                    this.tableM_ITEM.InitVars();
                }
            }
            this.tableM_ITEM_TYPE = ((M_ITEM_TYPEDataTable)(base.Tables["M_ITEM_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableM_ITEM_TYPE != null)) {
                    this.tableM_ITEM_TYPE.InitVars();
                }
            }
            this.tableM_LOCATION = ((M_LOCATIONDataTable)(base.Tables["M_LOCATION"]));
            if ((initTable == true)) {
                if ((this.tableM_LOCATION != null)) {
                    this.tableM_LOCATION.InitVars();
                }
            }
            this.tableM_MENU = ((M_MENUDataTable)(base.Tables["M_MENU"]));
            if ((initTable == true)) {
                if ((this.tableM_MENU != null)) {
                    this.tableM_MENU.InitVars();
                }
            }
            this.tableM_PACKET = ((M_PACKETDataTable)(base.Tables["M_PACKET"]));
            if ((initTable == true)) {
                if ((this.tableM_PACKET != null)) {
                    this.tableM_PACKET.InitVars();
                }
            }
            this.tableM_PACKET_ITEM = ((M_PACKET_ITEMDataTable)(base.Tables["M_PACKET_ITEM"]));
            if ((initTable == true)) {
                if ((this.tableM_PACKET_ITEM != null)) {
                    this.tableM_PACKET_ITEM.InitVars();
                }
            }
            this.tableM_ROOM = ((M_ROOMDataTable)(base.Tables["M_ROOM"]));
            if ((initTable == true)) {
                if ((this.tableM_ROOM != null)) {
                    this.tableM_ROOM.InitVars();
                }
            }
            this.tableM_SETTING = ((M_SETTINGDataTable)(base.Tables["M_SETTING"]));
            if ((initTable == true)) {
                if ((this.tableM_SETTING != null)) {
                    this.tableM_SETTING.InitVars();
                }
            }
            this.tableM_SUB_ACCOUNT = ((M_SUB_ACCOUNTDataTable)(base.Tables["M_SUB_ACCOUNT"]));
            if ((initTable == true)) {
                if ((this.tableM_SUB_ACCOUNT != null)) {
                    this.tableM_SUB_ACCOUNT.InitVars();
                }
            }
            this.tableM_SUPPLIER = ((M_SUPPLIERDataTable)(base.Tables["M_SUPPLIER"]));
            if ((initTable == true)) {
                if ((this.tableM_SUPPLIER != null)) {
                    this.tableM_SUPPLIER.InitVars();
                }
            }
            this.tableM_SUPPLIER_ACCOUNT = ((M_SUPPLIER_ACCOUNTDataTable)(base.Tables["M_SUPPLIER_ACCOUNT"]));
            if ((initTable == true)) {
                if ((this.tableM_SUPPLIER_ACCOUNT != null)) {
                    this.tableM_SUPPLIER_ACCOUNT.InitVars();
                }
            }
            this.tableM_USER = ((M_USERDataTable)(base.Tables["M_USER"]));
            if ((initTable == true)) {
                if ((this.tableM_USER != null)) {
                    this.tableM_USER.InitVars();
                }
            }
            this.tableT_APOTEK_SETTING = ((T_APOTEK_SETTINGDataTable)(base.Tables["T_APOTEK_SETTING"]));
            if ((initTable == true)) {
                if ((this.tableT_APOTEK_SETTING != null)) {
                    this.tableT_APOTEK_SETTING.InitVars();
                }
            }
            this.tableT_BILLIARD_SETTING = ((T_BILLIARD_SETTINGDataTable)(base.Tables["T_BILLIARD_SETTING"]));
            if ((initTable == true)) {
                if ((this.tableT_BILLIARD_SETTING != null)) {
                    this.tableT_BILLIARD_SETTING.InitVars();
                }
            }
            this.tableT_CAFE_SETTING = ((T_CAFE_SETTINGDataTable)(base.Tables["T_CAFE_SETTING"]));
            if ((initTable == true)) {
                if ((this.tableT_CAFE_SETTING != null)) {
                    this.tableT_CAFE_SETTING.InitVars();
                }
            }
            this.tableT_COMMISSION = ((T_COMMISSIONDataTable)(base.Tables["T_COMMISSION"]));
            if ((initTable == true)) {
                if ((this.tableT_COMMISSION != null)) {
                    this.tableT_COMMISSION.InitVars();
                }
            }
            this.tableT_CONTRACTOR_SETTING = ((T_CONTRACTOR_SETTINGDataTable)(base.Tables["T_CONTRACTOR_SETTING"]));
            if ((initTable == true)) {
                if ((this.tableT_CONTRACTOR_SETTING != null)) {
                    this.tableT_CONTRACTOR_SETTING.InitVars();
                }
            }
            this.tableT_DEFAULT_ACCOUNT = ((T_DEFAULT_ACCOUNTDataTable)(base.Tables["T_DEFAULT_ACCOUNT"]));
            if ((initTable == true)) {
                if ((this.tableT_DEFAULT_ACCOUNT != null)) {
                    this.tableT_DEFAULT_ACCOUNT.InitVars();
                }
            }
            this.tableT_DESK = ((T_DESKDataTable)(base.Tables["T_DESK"]));
            if ((initTable == true)) {
                if ((this.tableT_DESK != null)) {
                    this.tableT_DESK.InitVars();
                }
            }
            this.tableT_GIRO = ((T_GIRODataTable)(base.Tables["T_GIRO"]));
            if ((initTable == true)) {
                if ((this.tableT_GIRO != null)) {
                    this.tableT_GIRO.InitVars();
                }
            }
            this.tableT_GROSIR_SETTING = ((T_GROSIR_SETTINGDataTable)(base.Tables["T_GROSIR_SETTING"]));
            if ((initTable == true)) {
                if ((this.tableT_GROSIR_SETTING != null)) {
                    this.tableT_GROSIR_SETTING.InitVars();
                }
            }
            this.tableT_JOURNAL = ((T_JOURNALDataTable)(base.Tables["T_JOURNAL"]));
            if ((initTable == true)) {
                if ((this.tableT_JOURNAL != null)) {
                    this.tableT_JOURNAL.InitVars();
                }
            }
            this.tableT_LOG = ((T_LOGDataTable)(base.Tables["T_LOG"]));
            if ((initTable == true)) {
                if ((this.tableT_LOG != null)) {
                    this.tableT_LOG.InitVars();
                }
            }
            this.tableT_MENU_USER = ((T_MENU_USERDataTable)(base.Tables["T_MENU_USER"]));
            if ((initTable == true)) {
                if ((this.tableT_MENU_USER != null)) {
                    this.tableT_MENU_USER.InitVars();
                }
            }
            this.tableT_MOTOR_SETTING = ((T_MOTOR_SETTINGDataTable)(base.Tables["T_MOTOR_SETTING"]));
            if ((initTable == true)) {
                if ((this.tableT_MOTOR_SETTING != null)) {
                    this.tableT_MOTOR_SETTING.InitVars();
                }
            }
            this.tableT_PI_HUTANG = ((T_PI_HUTANGDataTable)(base.Tables["T_PI_HUTANG"]));
            if ((initTable == true)) {
                if ((this.tableT_PI_HUTANG != null)) {
                    this.tableT_PI_HUTANG.InitVars();
                }
            }
            this.tableT_REFERENCE = ((T_REFERENCEDataTable)(base.Tables["T_REFERENCE"]));
            if ((initTable == true)) {
                if ((this.tableT_REFERENCE != null)) {
                    this.tableT_REFERENCE.InitVars();
                }
            }
            this.tableT_REKAP_COMMISSION = ((T_REKAP_COMMISSIONDataTable)(base.Tables["T_REKAP_COMMISSION"]));
            if ((initTable == true)) {
                if ((this.tableT_REKAP_COMMISSION != null)) {
                    this.tableT_REKAP_COMMISSION.InitVars();
                }
            }
            this.tableT_REKAP_SUB_ACCOUNT = ((T_REKAP_SUB_ACCOUNTDataTable)(base.Tables["T_REKAP_SUB_ACCOUNT"]));
            if ((initTable == true)) {
                if ((this.tableT_REKAP_SUB_ACCOUNT != null)) {
                    this.tableT_REKAP_SUB_ACCOUNT.InitVars();
                }
            }
            this.tableT_REKAP_TRANSACTION = ((T_REKAP_TRANSACTIONDataTable)(base.Tables["T_REKAP_TRANSACTION"]));
            if ((initTable == true)) {
                if ((this.tableT_REKAP_TRANSACTION != null)) {
                    this.tableT_REKAP_TRANSACTION.InitVars();
                }
            }
            this.tableT_STOK_CARD = ((T_STOK_CARDDataTable)(base.Tables["T_STOK_CARD"]));
            if ((initTable == true)) {
                if ((this.tableT_STOK_CARD != null)) {
                    this.tableT_STOK_CARD.InitVars();
                }
            }
            this.tableT_TRANSACTION = ((T_TRANSACTIONDataTable)(base.Tables["T_TRANSACTION"]));
            if ((initTable == true)) {
                if ((this.tableT_TRANSACTION != null)) {
                    this.tableT_TRANSACTION.InitVars();
                }
            }
            this.tableT_TRANSACTION_SERVICE = ((T_TRANSACTION_SERVICEDataTable)(base.Tables["T_TRANSACTION_SERVICE"]));
            if ((initTable == true)) {
                if ((this.tableT_TRANSACTION_SERVICE != null)) {
                    this.tableT_TRANSACTION_SERVICE.InitVars();
                }
            }
            this.tableT_TRANSACTION_DETAIL = ((T_TRANSACTION_DETAILDataTable)(base.Tables["T_TRANSACTION_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tableT_TRANSACTION_DETAIL != null)) {
                    this.tableT_TRANSACTION_DETAIL.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableITEM_GUDANG_STOK = new ITEM_GUDANG_STOKDataTable();
            base.Tables.Add(this.tableITEM_GUDANG_STOK);
            this.tableM_ACCOUNT = new M_ACCOUNTDataTable();
            base.Tables.Add(this.tableM_ACCOUNT);
            this.tableM_BANK = new M_BANKDataTable();
            base.Tables.Add(this.tableM_BANK);
            this.tableM_COMMISSION = new M_COMMISSIONDataTable();
            base.Tables.Add(this.tableM_COMMISSION);
            this.tableM_COMMISSION_SHARE = new M_COMMISSION_SHAREDataTable();
            base.Tables.Add(this.tableM_COMMISSION_SHARE);
            this.tableM_CUSTOMER = new M_CUSTOMERDataTable();
            base.Tables.Add(this.tableM_CUSTOMER);
            this.tableM_CUSTOMER_GROUP = new M_CUSTOMER_GROUPDataTable();
            base.Tables.Add(this.tableM_CUSTOMER_GROUP);
            this.tableM_DEP = new M_DEPDataTable();
            base.Tables.Add(this.tableM_DEP);
            this.tableM_DESK = new M_DESKDataTable();
            base.Tables.Add(this.tableM_DESK);
            this.tableM_DISCOUNT = new M_DISCOUNTDataTable();
            base.Tables.Add(this.tableM_DISCOUNT);
            this.tableM_EMPLOYEE = new M_EMPLOYEEDataTable();
            base.Tables.Add(this.tableM_EMPLOYEE);
            this.tableM_GROUP = new M_GROUPDataTable();
            base.Tables.Add(this.tableM_GROUP);
            this.tableM_GUDANG = new M_GUDANGDataTable();
            base.Tables.Add(this.tableM_GUDANG);
            this.tableM_ITEM = new M_ITEMDataTable();
            base.Tables.Add(this.tableM_ITEM);
            this.tableM_ITEM_TYPE = new M_ITEM_TYPEDataTable();
            base.Tables.Add(this.tableM_ITEM_TYPE);
            this.tableM_LOCATION = new M_LOCATIONDataTable();
            base.Tables.Add(this.tableM_LOCATION);
            this.tableM_MENU = new M_MENUDataTable();
            base.Tables.Add(this.tableM_MENU);
            this.tableM_PACKET = new M_PACKETDataTable();
            base.Tables.Add(this.tableM_PACKET);
            this.tableM_PACKET_ITEM = new M_PACKET_ITEMDataTable();
            base.Tables.Add(this.tableM_PACKET_ITEM);
            this.tableM_ROOM = new M_ROOMDataTable();
            base.Tables.Add(this.tableM_ROOM);
            this.tableM_SETTING = new M_SETTINGDataTable();
            base.Tables.Add(this.tableM_SETTING);
            this.tableM_SUB_ACCOUNT = new M_SUB_ACCOUNTDataTable();
            base.Tables.Add(this.tableM_SUB_ACCOUNT);
            this.tableM_SUPPLIER = new M_SUPPLIERDataTable();
            base.Tables.Add(this.tableM_SUPPLIER);
            this.tableM_SUPPLIER_ACCOUNT = new M_SUPPLIER_ACCOUNTDataTable();
            base.Tables.Add(this.tableM_SUPPLIER_ACCOUNT);
            this.tableM_USER = new M_USERDataTable();
            base.Tables.Add(this.tableM_USER);
            this.tableT_APOTEK_SETTING = new T_APOTEK_SETTINGDataTable();
            base.Tables.Add(this.tableT_APOTEK_SETTING);
            this.tableT_BILLIARD_SETTING = new T_BILLIARD_SETTINGDataTable();
            base.Tables.Add(this.tableT_BILLIARD_SETTING);
            this.tableT_CAFE_SETTING = new T_CAFE_SETTINGDataTable();
            base.Tables.Add(this.tableT_CAFE_SETTING);
            this.tableT_COMMISSION = new T_COMMISSIONDataTable();
            base.Tables.Add(this.tableT_COMMISSION);
            this.tableT_CONTRACTOR_SETTING = new T_CONTRACTOR_SETTINGDataTable();
            base.Tables.Add(this.tableT_CONTRACTOR_SETTING);
            this.tableT_DEFAULT_ACCOUNT = new T_DEFAULT_ACCOUNTDataTable();
            base.Tables.Add(this.tableT_DEFAULT_ACCOUNT);
            this.tableT_DESK = new T_DESKDataTable();
            base.Tables.Add(this.tableT_DESK);
            this.tableT_GIRO = new T_GIRODataTable();
            base.Tables.Add(this.tableT_GIRO);
            this.tableT_GROSIR_SETTING = new T_GROSIR_SETTINGDataTable();
            base.Tables.Add(this.tableT_GROSIR_SETTING);
            this.tableT_JOURNAL = new T_JOURNALDataTable();
            base.Tables.Add(this.tableT_JOURNAL);
            this.tableT_LOG = new T_LOGDataTable();
            base.Tables.Add(this.tableT_LOG);
            this.tableT_MENU_USER = new T_MENU_USERDataTable();
            base.Tables.Add(this.tableT_MENU_USER);
            this.tableT_MOTOR_SETTING = new T_MOTOR_SETTINGDataTable();
            base.Tables.Add(this.tableT_MOTOR_SETTING);
            this.tableT_PI_HUTANG = new T_PI_HUTANGDataTable();
            base.Tables.Add(this.tableT_PI_HUTANG);
            this.tableT_REFERENCE = new T_REFERENCEDataTable();
            base.Tables.Add(this.tableT_REFERENCE);
            this.tableT_REKAP_COMMISSION = new T_REKAP_COMMISSIONDataTable();
            base.Tables.Add(this.tableT_REKAP_COMMISSION);
            this.tableT_REKAP_SUB_ACCOUNT = new T_REKAP_SUB_ACCOUNTDataTable();
            base.Tables.Add(this.tableT_REKAP_SUB_ACCOUNT);
            this.tableT_REKAP_TRANSACTION = new T_REKAP_TRANSACTIONDataTable();
            base.Tables.Add(this.tableT_REKAP_TRANSACTION);
            this.tableT_STOK_CARD = new T_STOK_CARDDataTable();
            base.Tables.Add(this.tableT_STOK_CARD);
            this.tableT_TRANSACTION = new T_TRANSACTIONDataTable();
            base.Tables.Add(this.tableT_TRANSACTION);
            this.tableT_TRANSACTION_SERVICE = new T_TRANSACTION_SERVICEDataTable();
            base.Tables.Add(this.tableT_TRANSACTION_SERVICE);
            this.tableT_TRANSACTION_DETAIL = new T_TRANSACTION_DETAILDataTable();
            base.Tables.Add(this.tableT_TRANSACTION_DETAIL);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeITEM_GUDANG_STOK() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_ACCOUNT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_BANK() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_COMMISSION() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_COMMISSION_SHARE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_CUSTOMER() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_CUSTOMER_GROUP() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_DEP() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_DESK() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_DISCOUNT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_EMPLOYEE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_GROUP() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_GUDANG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_ITEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_ITEM_TYPE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_LOCATION() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_MENU() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_PACKET() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_PACKET_ITEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_ROOM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_SETTING() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_SUB_ACCOUNT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_SUPPLIER() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_SUPPLIER_ACCOUNT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeM_USER() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_APOTEK_SETTING() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_BILLIARD_SETTING() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_CAFE_SETTING() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_COMMISSION() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_CONTRACTOR_SETTING() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_DEFAULT_ACCOUNT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_DESK() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_GIRO() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_GROSIR_SETTING() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_JOURNAL() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_LOG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_MENU_USER() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_MOTOR_SETTING() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PI_HUTANG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_REFERENCE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_REKAP_COMMISSION() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_REKAP_SUB_ACCOUNT() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_REKAP_TRANSACTION() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_STOK_CARD() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_TRANSACTION() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_TRANSACTION_SERVICE() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_TRANSACTION_DETAIL() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void ITEM_GUDANG_STOKRowChangeEventHandler(object sender, ITEM_GUDANG_STOKRowChangeEvent e);
        
        public delegate void M_ACCOUNTRowChangeEventHandler(object sender, M_ACCOUNTRowChangeEvent e);
        
        public delegate void M_BANKRowChangeEventHandler(object sender, M_BANKRowChangeEvent e);
        
        public delegate void M_COMMISSIONRowChangeEventHandler(object sender, M_COMMISSIONRowChangeEvent e);
        
        public delegate void M_COMMISSION_SHARERowChangeEventHandler(object sender, M_COMMISSION_SHARERowChangeEvent e);
        
        public delegate void M_CUSTOMERRowChangeEventHandler(object sender, M_CUSTOMERRowChangeEvent e);
        
        public delegate void M_CUSTOMER_GROUPRowChangeEventHandler(object sender, M_CUSTOMER_GROUPRowChangeEvent e);
        
        public delegate void M_DEPRowChangeEventHandler(object sender, M_DEPRowChangeEvent e);
        
        public delegate void M_DESKRowChangeEventHandler(object sender, M_DESKRowChangeEvent e);
        
        public delegate void M_DISCOUNTRowChangeEventHandler(object sender, M_DISCOUNTRowChangeEvent e);
        
        public delegate void M_EMPLOYEERowChangeEventHandler(object sender, M_EMPLOYEERowChangeEvent e);
        
        public delegate void M_GROUPRowChangeEventHandler(object sender, M_GROUPRowChangeEvent e);
        
        public delegate void M_GUDANGRowChangeEventHandler(object sender, M_GUDANGRowChangeEvent e);
        
        public delegate void M_ITEMRowChangeEventHandler(object sender, M_ITEMRowChangeEvent e);
        
        public delegate void M_ITEM_TYPERowChangeEventHandler(object sender, M_ITEM_TYPERowChangeEvent e);
        
        public delegate void M_LOCATIONRowChangeEventHandler(object sender, M_LOCATIONRowChangeEvent e);
        
        public delegate void M_MENURowChangeEventHandler(object sender, M_MENURowChangeEvent e);
        
        public delegate void M_PACKETRowChangeEventHandler(object sender, M_PACKETRowChangeEvent e);
        
        public delegate void M_PACKET_ITEMRowChangeEventHandler(object sender, M_PACKET_ITEMRowChangeEvent e);
        
        public delegate void M_ROOMRowChangeEventHandler(object sender, M_ROOMRowChangeEvent e);
        
        public delegate void M_SETTINGRowChangeEventHandler(object sender, M_SETTINGRowChangeEvent e);
        
        public delegate void M_SUB_ACCOUNTRowChangeEventHandler(object sender, M_SUB_ACCOUNTRowChangeEvent e);
        
        public delegate void M_SUPPLIERRowChangeEventHandler(object sender, M_SUPPLIERRowChangeEvent e);
        
        public delegate void M_SUPPLIER_ACCOUNTRowChangeEventHandler(object sender, M_SUPPLIER_ACCOUNTRowChangeEvent e);
        
        public delegate void M_USERRowChangeEventHandler(object sender, M_USERRowChangeEvent e);
        
        public delegate void T_APOTEK_SETTINGRowChangeEventHandler(object sender, T_APOTEK_SETTINGRowChangeEvent e);
        
        public delegate void T_BILLIARD_SETTINGRowChangeEventHandler(object sender, T_BILLIARD_SETTINGRowChangeEvent e);
        
        public delegate void T_CAFE_SETTINGRowChangeEventHandler(object sender, T_CAFE_SETTINGRowChangeEvent e);
        
        public delegate void T_COMMISSIONRowChangeEventHandler(object sender, T_COMMISSIONRowChangeEvent e);
        
        public delegate void T_CONTRACTOR_SETTINGRowChangeEventHandler(object sender, T_CONTRACTOR_SETTINGRowChangeEvent e);
        
        public delegate void T_DEFAULT_ACCOUNTRowChangeEventHandler(object sender, T_DEFAULT_ACCOUNTRowChangeEvent e);
        
        public delegate void T_DESKRowChangeEventHandler(object sender, T_DESKRowChangeEvent e);
        
        public delegate void T_GIRORowChangeEventHandler(object sender, T_GIRORowChangeEvent e);
        
        public delegate void T_GROSIR_SETTINGRowChangeEventHandler(object sender, T_GROSIR_SETTINGRowChangeEvent e);
        
        public delegate void T_JOURNALRowChangeEventHandler(object sender, T_JOURNALRowChangeEvent e);
        
        public delegate void T_LOGRowChangeEventHandler(object sender, T_LOGRowChangeEvent e);
        
        public delegate void T_MENU_USERRowChangeEventHandler(object sender, T_MENU_USERRowChangeEvent e);
        
        public delegate void T_MOTOR_SETTINGRowChangeEventHandler(object sender, T_MOTOR_SETTINGRowChangeEvent e);
        
        public delegate void T_PI_HUTANGRowChangeEventHandler(object sender, T_PI_HUTANGRowChangeEvent e);
        
        public delegate void T_REFERENCERowChangeEventHandler(object sender, T_REFERENCERowChangeEvent e);
        
        public delegate void T_REKAP_COMMISSIONRowChangeEventHandler(object sender, T_REKAP_COMMISSIONRowChangeEvent e);
        
        public delegate void T_REKAP_SUB_ACCOUNTRowChangeEventHandler(object sender, T_REKAP_SUB_ACCOUNTRowChangeEvent e);
        
        public delegate void T_REKAP_TRANSACTIONRowChangeEventHandler(object sender, T_REKAP_TRANSACTIONRowChangeEvent e);
        
        public delegate void T_STOK_CARDRowChangeEventHandler(object sender, T_STOK_CARDRowChangeEvent e);
        
        public delegate void T_TRANSACTIONRowChangeEventHandler(object sender, T_TRANSACTIONRowChangeEvent e);
        
        public delegate void T_TRANSACTION_SERVICERowChangeEventHandler(object sender, T_TRANSACTION_SERVICERowChangeEvent e);
        
        public delegate void T_TRANSACTION_DETAILRowChangeEventHandler(object sender, T_TRANSACTION_DETAILRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ITEM_GUDANG_STOKDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnITEM_ID;
            
            private System.Data.DataColumn columnGUDANG_ID;
            
            private System.Data.DataColumn columnITEM_STOK;
            
            private System.Data.DataColumn columnITEM_MIN_STOK;
            
            private System.Data.DataColumn columnITEM_MAX_STOK;
            
            private System.Data.DataColumn columnITEM_POSITION;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEM_GUDANG_STOKDataTable() {
                this.TableName = "ITEM_GUDANG_STOK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ITEM_GUDANG_STOKDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ITEM_GUDANG_STOKDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_IDColumn {
                get {
                    return this.columnITEM_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GUDANG_IDColumn {
                get {
                    return this.columnGUDANG_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_STOKColumn {
                get {
                    return this.columnITEM_STOK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_MIN_STOKColumn {
                get {
                    return this.columnITEM_MIN_STOK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_MAX_STOKColumn {
                get {
                    return this.columnITEM_MAX_STOK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_POSITIONColumn {
                get {
                    return this.columnITEM_POSITION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEM_GUDANG_STOKRow this[int index] {
                get {
                    return ((ITEM_GUDANG_STOKRow)(this.Rows[index]));
                }
            }
            
            public event ITEM_GUDANG_STOKRowChangeEventHandler ITEM_GUDANG_STOKRowChanging;
            
            public event ITEM_GUDANG_STOKRowChangeEventHandler ITEM_GUDANG_STOKRowChanged;
            
            public event ITEM_GUDANG_STOKRowChangeEventHandler ITEM_GUDANG_STOKRowDeleting;
            
            public event ITEM_GUDANG_STOKRowChangeEventHandler ITEM_GUDANG_STOKRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddITEM_GUDANG_STOKRow(ITEM_GUDANG_STOKRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEM_GUDANG_STOKRow AddITEM_GUDANG_STOKRow(string ITEM_ID, int GUDANG_ID, decimal ITEM_STOK, decimal ITEM_MIN_STOK, decimal ITEM_MAX_STOK, string ITEM_POSITION, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                ITEM_GUDANG_STOKRow rowITEM_GUDANG_STOKRow = ((ITEM_GUDANG_STOKRow)(this.NewRow()));
                rowITEM_GUDANG_STOKRow.ItemArray = new object[] {
                        ITEM_ID,
                        GUDANG_ID,
                        ITEM_STOK,
                        ITEM_MIN_STOK,
                        ITEM_MAX_STOK,
                        ITEM_POSITION,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowITEM_GUDANG_STOKRow);
                return rowITEM_GUDANG_STOKRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEM_GUDANG_STOKRow FindByITEM_IDGUDANG_ID(string ITEM_ID, int GUDANG_ID) {
                return ((ITEM_GUDANG_STOKRow)(this.Rows.Find(new object[] {
                            ITEM_ID,
                            GUDANG_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ITEM_GUDANG_STOKDataTable cln = ((ITEM_GUDANG_STOKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ITEM_GUDANG_STOKDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnITEM_ID = base.Columns["ITEM_ID"];
                this.columnGUDANG_ID = base.Columns["GUDANG_ID"];
                this.columnITEM_STOK = base.Columns["ITEM_STOK"];
                this.columnITEM_MIN_STOK = base.Columns["ITEM_MIN_STOK"];
                this.columnITEM_MAX_STOK = base.Columns["ITEM_MAX_STOK"];
                this.columnITEM_POSITION = base.Columns["ITEM_POSITION"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnITEM_ID = new System.Data.DataColumn("ITEM_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_ID);
                this.columnGUDANG_ID = new System.Data.DataColumn("GUDANG_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGUDANG_ID);
                this.columnITEM_STOK = new System.Data.DataColumn("ITEM_STOK", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_STOK);
                this.columnITEM_MIN_STOK = new System.Data.DataColumn("ITEM_MIN_STOK", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_MIN_STOK);
                this.columnITEM_MAX_STOK = new System.Data.DataColumn("ITEM_MAX_STOK", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_MAX_STOK);
                this.columnITEM_POSITION = new System.Data.DataColumn("ITEM_POSITION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_POSITION);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnITEM_ID,
                                this.columnGUDANG_ID}, true));
                this.columnITEM_ID.AllowDBNull = false;
                this.columnITEM_ID.MaxLength = 50;
                this.columnGUDANG_ID.AllowDBNull = false;
                this.columnITEM_POSITION.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEM_GUDANG_STOKRow NewITEM_GUDANG_STOKRow() {
                return ((ITEM_GUDANG_STOKRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ITEM_GUDANG_STOKRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ITEM_GUDANG_STOKRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ITEM_GUDANG_STOKRowChanged != null)) {
                    this.ITEM_GUDANG_STOKRowChanged(this, new ITEM_GUDANG_STOKRowChangeEvent(((ITEM_GUDANG_STOKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ITEM_GUDANG_STOKRowChanging != null)) {
                    this.ITEM_GUDANG_STOKRowChanging(this, new ITEM_GUDANG_STOKRowChangeEvent(((ITEM_GUDANG_STOKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ITEM_GUDANG_STOKRowDeleted != null)) {
                    this.ITEM_GUDANG_STOKRowDeleted(this, new ITEM_GUDANG_STOKRowChangeEvent(((ITEM_GUDANG_STOKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ITEM_GUDANG_STOKRowDeleting != null)) {
                    this.ITEM_GUDANG_STOKRowDeleting(this, new ITEM_GUDANG_STOKRowChangeEvent(((ITEM_GUDANG_STOKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveITEM_GUDANG_STOKRow(ITEM_GUDANG_STOKRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ITEM_GUDANG_STOKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_ACCOUNTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnACCOUNT_ID;
            
            private System.Data.DataColumn columnACCOUNT_NAME;
            
            private System.Data.DataColumn columnACCOUNT_STATUS;
            
            private System.Data.DataColumn columnACCOUNT_SALDO;
            
            private System.Data.DataColumn columnACCOUNT_DESC;
            
            private System.Data.DataColumn columnACCOUNT_POSITION;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ACCOUNTDataTable() {
                this.TableName = "M_ACCOUNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_ACCOUNTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_ACCOUNTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_IDColumn {
                get {
                    return this.columnACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_NAMEColumn {
                get {
                    return this.columnACCOUNT_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_STATUSColumn {
                get {
                    return this.columnACCOUNT_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_SALDOColumn {
                get {
                    return this.columnACCOUNT_SALDO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_DESCColumn {
                get {
                    return this.columnACCOUNT_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_POSITIONColumn {
                get {
                    return this.columnACCOUNT_POSITION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ACCOUNTRow this[int index] {
                get {
                    return ((M_ACCOUNTRow)(this.Rows[index]));
                }
            }
            
            public event M_ACCOUNTRowChangeEventHandler M_ACCOUNTRowChanging;
            
            public event M_ACCOUNTRowChangeEventHandler M_ACCOUNTRowChanged;
            
            public event M_ACCOUNTRowChangeEventHandler M_ACCOUNTRowDeleting;
            
            public event M_ACCOUNTRowChangeEventHandler M_ACCOUNTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_ACCOUNTRow(M_ACCOUNTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ACCOUNTRow AddM_ACCOUNTRow(string ACCOUNT_ID, string ACCOUNT_NAME, string ACCOUNT_STATUS, decimal ACCOUNT_SALDO, string ACCOUNT_DESC, string ACCOUNT_POSITION, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_ACCOUNTRow rowM_ACCOUNTRow = ((M_ACCOUNTRow)(this.NewRow()));
                rowM_ACCOUNTRow.ItemArray = new object[] {
                        ACCOUNT_ID,
                        ACCOUNT_NAME,
                        ACCOUNT_STATUS,
                        ACCOUNT_SALDO,
                        ACCOUNT_DESC,
                        ACCOUNT_POSITION,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_ACCOUNTRow);
                return rowM_ACCOUNTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ACCOUNTRow FindByACCOUNT_ID(string ACCOUNT_ID) {
                return ((M_ACCOUNTRow)(this.Rows.Find(new object[] {
                            ACCOUNT_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_ACCOUNTDataTable cln = ((M_ACCOUNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_ACCOUNTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnACCOUNT_ID = base.Columns["ACCOUNT_ID"];
                this.columnACCOUNT_NAME = base.Columns["ACCOUNT_NAME"];
                this.columnACCOUNT_STATUS = base.Columns["ACCOUNT_STATUS"];
                this.columnACCOUNT_SALDO = base.Columns["ACCOUNT_SALDO"];
                this.columnACCOUNT_DESC = base.Columns["ACCOUNT_DESC"];
                this.columnACCOUNT_POSITION = base.Columns["ACCOUNT_POSITION"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnACCOUNT_ID = new System.Data.DataColumn("ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_ID);
                this.columnACCOUNT_NAME = new System.Data.DataColumn("ACCOUNT_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_NAME);
                this.columnACCOUNT_STATUS = new System.Data.DataColumn("ACCOUNT_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_STATUS);
                this.columnACCOUNT_SALDO = new System.Data.DataColumn("ACCOUNT_SALDO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_SALDO);
                this.columnACCOUNT_DESC = new System.Data.DataColumn("ACCOUNT_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_DESC);
                this.columnACCOUNT_POSITION = new System.Data.DataColumn("ACCOUNT_POSITION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_POSITION);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnACCOUNT_ID}, true));
                this.columnACCOUNT_ID.AllowDBNull = false;
                this.columnACCOUNT_ID.Unique = true;
                this.columnACCOUNT_ID.MaxLength = 50;
                this.columnACCOUNT_NAME.MaxLength = 50;
                this.columnACCOUNT_STATUS.MaxLength = 50;
                this.columnACCOUNT_DESC.MaxLength = 50;
                this.columnACCOUNT_POSITION.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ACCOUNTRow NewM_ACCOUNTRow() {
                return ((M_ACCOUNTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_ACCOUNTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_ACCOUNTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_ACCOUNTRowChanged != null)) {
                    this.M_ACCOUNTRowChanged(this, new M_ACCOUNTRowChangeEvent(((M_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_ACCOUNTRowChanging != null)) {
                    this.M_ACCOUNTRowChanging(this, new M_ACCOUNTRowChangeEvent(((M_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_ACCOUNTRowDeleted != null)) {
                    this.M_ACCOUNTRowDeleted(this, new M_ACCOUNTRowChangeEvent(((M_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_ACCOUNTRowDeleting != null)) {
                    this.M_ACCOUNTRowDeleting(this, new M_ACCOUNTRowChangeEvent(((M_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_ACCOUNTRow(M_ACCOUNTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_ACCOUNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_BANKDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnBANK_ID;
            
            private System.Data.DataColumn columnBANK_NAME;
            
            private System.Data.DataColumn columnBANK_ADDRESS;
            
            private System.Data.DataColumn columnBANK_LIMIT_GIRO_PER_MONTH;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_BANKDataTable() {
                this.TableName = "M_BANK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_BANKDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_BANKDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BANK_IDColumn {
                get {
                    return this.columnBANK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BANK_NAMEColumn {
                get {
                    return this.columnBANK_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BANK_ADDRESSColumn {
                get {
                    return this.columnBANK_ADDRESS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BANK_LIMIT_GIRO_PER_MONTHColumn {
                get {
                    return this.columnBANK_LIMIT_GIRO_PER_MONTH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_BANKRow this[int index] {
                get {
                    return ((M_BANKRow)(this.Rows[index]));
                }
            }
            
            public event M_BANKRowChangeEventHandler M_BANKRowChanging;
            
            public event M_BANKRowChangeEventHandler M_BANKRowChanged;
            
            public event M_BANKRowChangeEventHandler M_BANKRowDeleting;
            
            public event M_BANKRowChangeEventHandler M_BANKRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_BANKRow(M_BANKRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_BANKRow AddM_BANKRow(string BANK_ID, string BANK_NAME, string BANK_ADDRESS, decimal BANK_LIMIT_GIRO_PER_MONTH, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_BANKRow rowM_BANKRow = ((M_BANKRow)(this.NewRow()));
                rowM_BANKRow.ItemArray = new object[] {
                        BANK_ID,
                        BANK_NAME,
                        BANK_ADDRESS,
                        BANK_LIMIT_GIRO_PER_MONTH,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_BANKRow);
                return rowM_BANKRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_BANKRow FindByBANK_ID(string BANK_ID) {
                return ((M_BANKRow)(this.Rows.Find(new object[] {
                            BANK_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_BANKDataTable cln = ((M_BANKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_BANKDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBANK_ID = base.Columns["BANK_ID"];
                this.columnBANK_NAME = base.Columns["BANK_NAME"];
                this.columnBANK_ADDRESS = base.Columns["BANK_ADDRESS"];
                this.columnBANK_LIMIT_GIRO_PER_MONTH = base.Columns["BANK_LIMIT_GIRO_PER_MONTH"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBANK_ID = new System.Data.DataColumn("BANK_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_ID);
                this.columnBANK_NAME = new System.Data.DataColumn("BANK_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_NAME);
                this.columnBANK_ADDRESS = new System.Data.DataColumn("BANK_ADDRESS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_ADDRESS);
                this.columnBANK_LIMIT_GIRO_PER_MONTH = new System.Data.DataColumn("BANK_LIMIT_GIRO_PER_MONTH", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_LIMIT_GIRO_PER_MONTH);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnBANK_ID}, true));
                this.columnBANK_ID.AllowDBNull = false;
                this.columnBANK_ID.Unique = true;
                this.columnBANK_ID.MaxLength = 50;
                this.columnBANK_NAME.MaxLength = 50;
                this.columnBANK_ADDRESS.MaxLength = 100;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_BANKRow NewM_BANKRow() {
                return ((M_BANKRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_BANKRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_BANKRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_BANKRowChanged != null)) {
                    this.M_BANKRowChanged(this, new M_BANKRowChangeEvent(((M_BANKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_BANKRowChanging != null)) {
                    this.M_BANKRowChanging(this, new M_BANKRowChangeEvent(((M_BANKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_BANKRowDeleted != null)) {
                    this.M_BANKRowDeleted(this, new M_BANKRowChangeEvent(((M_BANKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_BANKRowDeleting != null)) {
                    this.M_BANKRowDeleting(this, new M_BANKRowChangeEvent(((M_BANKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_BANKRow(M_BANKRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_BANKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_COMMISSIONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCOMMISSION_ID;
            
            private System.Data.DataColumn columnCOMMISSION_STATUS;
            
            private System.Data.DataColumn columnCOMMISSION_VALUE;
            
            private System.Data.DataColumn columnCOMMISSION_DESC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSIONDataTable() {
                this.TableName = "M_COMMISSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_COMMISSIONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_COMMISSIONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_IDColumn {
                get {
                    return this.columnCOMMISSION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_STATUSColumn {
                get {
                    return this.columnCOMMISSION_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_VALUEColumn {
                get {
                    return this.columnCOMMISSION_VALUE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_DESCColumn {
                get {
                    return this.columnCOMMISSION_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSIONRow this[int index] {
                get {
                    return ((M_COMMISSIONRow)(this.Rows[index]));
                }
            }
            
            public event M_COMMISSIONRowChangeEventHandler M_COMMISSIONRowChanging;
            
            public event M_COMMISSIONRowChangeEventHandler M_COMMISSIONRowChanged;
            
            public event M_COMMISSIONRowChangeEventHandler M_COMMISSIONRowDeleting;
            
            public event M_COMMISSIONRowChangeEventHandler M_COMMISSIONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_COMMISSIONRow(M_COMMISSIONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSIONRow AddM_COMMISSIONRow(string COMMISSION_STATUS, decimal COMMISSION_VALUE, string COMMISSION_DESC) {
                M_COMMISSIONRow rowM_COMMISSIONRow = ((M_COMMISSIONRow)(this.NewRow()));
                rowM_COMMISSIONRow.ItemArray = new object[] {
                        null,
                        COMMISSION_STATUS,
                        COMMISSION_VALUE,
                        COMMISSION_DESC};
                this.Rows.Add(rowM_COMMISSIONRow);
                return rowM_COMMISSIONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSIONRow FindByCOMMISSION_ID(decimal COMMISSION_ID) {
                return ((M_COMMISSIONRow)(this.Rows.Find(new object[] {
                            COMMISSION_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_COMMISSIONDataTable cln = ((M_COMMISSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_COMMISSIONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOMMISSION_ID = base.Columns["COMMISSION_ID"];
                this.columnCOMMISSION_STATUS = base.Columns["COMMISSION_STATUS"];
                this.columnCOMMISSION_VALUE = base.Columns["COMMISSION_VALUE"];
                this.columnCOMMISSION_DESC = base.Columns["COMMISSION_DESC"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOMMISSION_ID = new System.Data.DataColumn("COMMISSION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_ID);
                this.columnCOMMISSION_STATUS = new System.Data.DataColumn("COMMISSION_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_STATUS);
                this.columnCOMMISSION_VALUE = new System.Data.DataColumn("COMMISSION_VALUE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_VALUE);
                this.columnCOMMISSION_DESC = new System.Data.DataColumn("COMMISSION_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_DESC);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnCOMMISSION_ID}, true));
                this.columnCOMMISSION_ID.AutoIncrement = true;
                this.columnCOMMISSION_ID.AllowDBNull = false;
                this.columnCOMMISSION_ID.ReadOnly = true;
                this.columnCOMMISSION_ID.Unique = true;
                this.columnCOMMISSION_STATUS.MaxLength = 50;
                this.columnCOMMISSION_DESC.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSIONRow NewM_COMMISSIONRow() {
                return ((M_COMMISSIONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_COMMISSIONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_COMMISSIONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_COMMISSIONRowChanged != null)) {
                    this.M_COMMISSIONRowChanged(this, new M_COMMISSIONRowChangeEvent(((M_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_COMMISSIONRowChanging != null)) {
                    this.M_COMMISSIONRowChanging(this, new M_COMMISSIONRowChangeEvent(((M_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_COMMISSIONRowDeleted != null)) {
                    this.M_COMMISSIONRowDeleted(this, new M_COMMISSIONRowChangeEvent(((M_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_COMMISSIONRowDeleting != null)) {
                    this.M_COMMISSIONRowDeleting(this, new M_COMMISSIONRowChangeEvent(((M_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_COMMISSIONRow(M_COMMISSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_COMMISSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_COMMISSION_SHAREDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSHARE_ID;
            
            private System.Data.DataColumn columnCOMMISSION_ID;
            
            private System.Data.DataColumn columnSHARE_TO;
            
            private System.Data.DataColumn columnSHARE_VALUE;
            
            private System.Data.DataColumn columnSHARE_DESC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSION_SHAREDataTable() {
                this.TableName = "M_COMMISSION_SHARE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_COMMISSION_SHAREDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_COMMISSION_SHAREDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHARE_IDColumn {
                get {
                    return this.columnSHARE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_IDColumn {
                get {
                    return this.columnCOMMISSION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHARE_TOColumn {
                get {
                    return this.columnSHARE_TO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHARE_VALUEColumn {
                get {
                    return this.columnSHARE_VALUE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHARE_DESCColumn {
                get {
                    return this.columnSHARE_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSION_SHARERow this[int index] {
                get {
                    return ((M_COMMISSION_SHARERow)(this.Rows[index]));
                }
            }
            
            public event M_COMMISSION_SHARERowChangeEventHandler M_COMMISSION_SHARERowChanging;
            
            public event M_COMMISSION_SHARERowChangeEventHandler M_COMMISSION_SHARERowChanged;
            
            public event M_COMMISSION_SHARERowChangeEventHandler M_COMMISSION_SHARERowDeleting;
            
            public event M_COMMISSION_SHARERowChangeEventHandler M_COMMISSION_SHARERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_COMMISSION_SHARERow(M_COMMISSION_SHARERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSION_SHARERow AddM_COMMISSION_SHARERow(decimal COMMISSION_ID, string SHARE_TO, decimal SHARE_VALUE, string SHARE_DESC) {
                M_COMMISSION_SHARERow rowM_COMMISSION_SHARERow = ((M_COMMISSION_SHARERow)(this.NewRow()));
                rowM_COMMISSION_SHARERow.ItemArray = new object[] {
                        null,
                        COMMISSION_ID,
                        SHARE_TO,
                        SHARE_VALUE,
                        SHARE_DESC};
                this.Rows.Add(rowM_COMMISSION_SHARERow);
                return rowM_COMMISSION_SHARERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSION_SHARERow FindBySHARE_ID(decimal SHARE_ID) {
                return ((M_COMMISSION_SHARERow)(this.Rows.Find(new object[] {
                            SHARE_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_COMMISSION_SHAREDataTable cln = ((M_COMMISSION_SHAREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_COMMISSION_SHAREDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSHARE_ID = base.Columns["SHARE_ID"];
                this.columnCOMMISSION_ID = base.Columns["COMMISSION_ID"];
                this.columnSHARE_TO = base.Columns["SHARE_TO"];
                this.columnSHARE_VALUE = base.Columns["SHARE_VALUE"];
                this.columnSHARE_DESC = base.Columns["SHARE_DESC"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSHARE_ID = new System.Data.DataColumn("SHARE_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_ID);
                this.columnCOMMISSION_ID = new System.Data.DataColumn("COMMISSION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_ID);
                this.columnSHARE_TO = new System.Data.DataColumn("SHARE_TO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_TO);
                this.columnSHARE_VALUE = new System.Data.DataColumn("SHARE_VALUE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_VALUE);
                this.columnSHARE_DESC = new System.Data.DataColumn("SHARE_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_DESC);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSHARE_ID}, true));
                this.columnSHARE_ID.AutoIncrement = true;
                this.columnSHARE_ID.AllowDBNull = false;
                this.columnSHARE_ID.ReadOnly = true;
                this.columnSHARE_ID.Unique = true;
                this.columnSHARE_TO.MaxLength = 50;
                this.columnSHARE_DESC.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSION_SHARERow NewM_COMMISSION_SHARERow() {
                return ((M_COMMISSION_SHARERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_COMMISSION_SHARERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_COMMISSION_SHARERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_COMMISSION_SHARERowChanged != null)) {
                    this.M_COMMISSION_SHARERowChanged(this, new M_COMMISSION_SHARERowChangeEvent(((M_COMMISSION_SHARERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_COMMISSION_SHARERowChanging != null)) {
                    this.M_COMMISSION_SHARERowChanging(this, new M_COMMISSION_SHARERowChangeEvent(((M_COMMISSION_SHARERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_COMMISSION_SHARERowDeleted != null)) {
                    this.M_COMMISSION_SHARERowDeleted(this, new M_COMMISSION_SHARERowChangeEvent(((M_COMMISSION_SHARERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_COMMISSION_SHARERowDeleting != null)) {
                    this.M_COMMISSION_SHARERowDeleting(this, new M_COMMISSION_SHARERowChangeEvent(((M_COMMISSION_SHARERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_COMMISSION_SHARERow(M_COMMISSION_SHARERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_COMMISSION_SHAREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_CUSTOMERDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCUSTOMER_ID;
            
            private System.Data.DataColumn columnCUSTOMER_NAME;
            
            private System.Data.DataColumn columnCUSTOMER_ADDRESS;
            
            private System.Data.DataColumn columnCUSTOMER_PHONE;
            
            private System.Data.DataColumn columnCUSTOMER_FAX;
            
            private System.Data.DataColumn columnCUSTOMER_STATUS;
            
            private System.Data.DataColumn columnCUSTOMER_NPWP;
            
            private System.Data.DataColumn columnCUSTOMER_DISC;
            
            private System.Data.DataColumn columnCUSTOMER_LIMIT;
            
            private System.Data.DataColumn columnCUSTOMER_DESC;
            
            private System.Data.DataColumn columnCUSTOMER_DESC2;
            
            private System.Data.DataColumn columnSUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMERDataTable() {
                this.TableName = "M_CUSTOMER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_CUSTOMERDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_CUSTOMERDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_IDColumn {
                get {
                    return this.columnCUSTOMER_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_NAMEColumn {
                get {
                    return this.columnCUSTOMER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_ADDRESSColumn {
                get {
                    return this.columnCUSTOMER_ADDRESS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_PHONEColumn {
                get {
                    return this.columnCUSTOMER_PHONE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_FAXColumn {
                get {
                    return this.columnCUSTOMER_FAX;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_STATUSColumn {
                get {
                    return this.columnCUSTOMER_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_NPWPColumn {
                get {
                    return this.columnCUSTOMER_NPWP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_DISCColumn {
                get {
                    return this.columnCUSTOMER_DISC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_LIMITColumn {
                get {
                    return this.columnCUSTOMER_LIMIT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_DESCColumn {
                get {
                    return this.columnCUSTOMER_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_DESC2Column {
                get {
                    return this.columnCUSTOMER_DESC2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnSUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMERRow this[int index] {
                get {
                    return ((M_CUSTOMERRow)(this.Rows[index]));
                }
            }
            
            public event M_CUSTOMERRowChangeEventHandler M_CUSTOMERRowChanging;
            
            public event M_CUSTOMERRowChangeEventHandler M_CUSTOMERRowChanged;
            
            public event M_CUSTOMERRowChangeEventHandler M_CUSTOMERRowDeleting;
            
            public event M_CUSTOMERRowChangeEventHandler M_CUSTOMERRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_CUSTOMERRow(M_CUSTOMERRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMERRow AddM_CUSTOMERRow(string CUSTOMER_ID, string CUSTOMER_NAME, string CUSTOMER_ADDRESS, string CUSTOMER_PHONE, string CUSTOMER_FAX, string CUSTOMER_STATUS, string CUSTOMER_NPWP, decimal CUSTOMER_DISC, decimal CUSTOMER_LIMIT, string CUSTOMER_DESC, string CUSTOMER_DESC2, string SUB_ACCOUNT_ID, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_CUSTOMERRow rowM_CUSTOMERRow = ((M_CUSTOMERRow)(this.NewRow()));
                rowM_CUSTOMERRow.ItemArray = new object[] {
                        CUSTOMER_ID,
                        CUSTOMER_NAME,
                        CUSTOMER_ADDRESS,
                        CUSTOMER_PHONE,
                        CUSTOMER_FAX,
                        CUSTOMER_STATUS,
                        CUSTOMER_NPWP,
                        CUSTOMER_DISC,
                        CUSTOMER_LIMIT,
                        CUSTOMER_DESC,
                        CUSTOMER_DESC2,
                        SUB_ACCOUNT_ID,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_CUSTOMERRow);
                return rowM_CUSTOMERRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMERRow FindByCUSTOMER_ID(string CUSTOMER_ID) {
                return ((M_CUSTOMERRow)(this.Rows.Find(new object[] {
                            CUSTOMER_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_CUSTOMERDataTable cln = ((M_CUSTOMERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_CUSTOMERDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCUSTOMER_ID = base.Columns["CUSTOMER_ID"];
                this.columnCUSTOMER_NAME = base.Columns["CUSTOMER_NAME"];
                this.columnCUSTOMER_ADDRESS = base.Columns["CUSTOMER_ADDRESS"];
                this.columnCUSTOMER_PHONE = base.Columns["CUSTOMER_PHONE"];
                this.columnCUSTOMER_FAX = base.Columns["CUSTOMER_FAX"];
                this.columnCUSTOMER_STATUS = base.Columns["CUSTOMER_STATUS"];
                this.columnCUSTOMER_NPWP = base.Columns["CUSTOMER_NPWP"];
                this.columnCUSTOMER_DISC = base.Columns["CUSTOMER_DISC"];
                this.columnCUSTOMER_LIMIT = base.Columns["CUSTOMER_LIMIT"];
                this.columnCUSTOMER_DESC = base.Columns["CUSTOMER_DESC"];
                this.columnCUSTOMER_DESC2 = base.Columns["CUSTOMER_DESC2"];
                this.columnSUB_ACCOUNT_ID = base.Columns["SUB_ACCOUNT_ID"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCUSTOMER_ID = new System.Data.DataColumn("CUSTOMER_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_ID);
                this.columnCUSTOMER_NAME = new System.Data.DataColumn("CUSTOMER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_NAME);
                this.columnCUSTOMER_ADDRESS = new System.Data.DataColumn("CUSTOMER_ADDRESS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_ADDRESS);
                this.columnCUSTOMER_PHONE = new System.Data.DataColumn("CUSTOMER_PHONE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_PHONE);
                this.columnCUSTOMER_FAX = new System.Data.DataColumn("CUSTOMER_FAX", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_FAX);
                this.columnCUSTOMER_STATUS = new System.Data.DataColumn("CUSTOMER_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_STATUS);
                this.columnCUSTOMER_NPWP = new System.Data.DataColumn("CUSTOMER_NPWP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_NPWP);
                this.columnCUSTOMER_DISC = new System.Data.DataColumn("CUSTOMER_DISC", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_DISC);
                this.columnCUSTOMER_LIMIT = new System.Data.DataColumn("CUSTOMER_LIMIT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_LIMIT);
                this.columnCUSTOMER_DESC = new System.Data.DataColumn("CUSTOMER_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_DESC);
                this.columnCUSTOMER_DESC2 = new System.Data.DataColumn("CUSTOMER_DESC2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_DESC2);
                this.columnSUB_ACCOUNT_ID = new System.Data.DataColumn("SUB_ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_ID);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnCUSTOMER_ID}, true));
                this.columnCUSTOMER_ID.AllowDBNull = false;
                this.columnCUSTOMER_ID.Unique = true;
                this.columnCUSTOMER_ID.MaxLength = 50;
                this.columnCUSTOMER_NAME.MaxLength = 50;
                this.columnCUSTOMER_ADDRESS.MaxLength = 100;
                this.columnCUSTOMER_PHONE.MaxLength = 50;
                this.columnCUSTOMER_FAX.MaxLength = 50;
                this.columnCUSTOMER_STATUS.MaxLength = 50;
                this.columnCUSTOMER_NPWP.MaxLength = 50;
                this.columnCUSTOMER_DESC.MaxLength = 50;
                this.columnCUSTOMER_DESC2.MaxLength = 50;
                this.columnSUB_ACCOUNT_ID.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMERRow NewM_CUSTOMERRow() {
                return ((M_CUSTOMERRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_CUSTOMERRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_CUSTOMERRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_CUSTOMERRowChanged != null)) {
                    this.M_CUSTOMERRowChanged(this, new M_CUSTOMERRowChangeEvent(((M_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_CUSTOMERRowChanging != null)) {
                    this.M_CUSTOMERRowChanging(this, new M_CUSTOMERRowChangeEvent(((M_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_CUSTOMERRowDeleted != null)) {
                    this.M_CUSTOMERRowDeleted(this, new M_CUSTOMERRowChangeEvent(((M_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_CUSTOMERRowDeleting != null)) {
                    this.M_CUSTOMERRowDeleting(this, new M_CUSTOMERRowChangeEvent(((M_CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_CUSTOMERRow(M_CUSTOMERRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_CUSTOMERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_CUSTOMER_GROUPDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCUSTOMER_GROUP_ID;
            
            private System.Data.DataColumn columnCUSTOMER_GROUP_NAME;
            
            private System.Data.DataColumn columnCUSTOMER_GROUP_DESC;
            
            private System.Data.DataColumn columnCUSTOMER_GROUP_PERCENTAGE;
            
            private System.Data.DataColumn columnCUSTOMER_GROUP_USE_PERCENTAGE;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMER_GROUPDataTable() {
                this.TableName = "M_CUSTOMER_GROUP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_CUSTOMER_GROUPDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_CUSTOMER_GROUPDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_GROUP_IDColumn {
                get {
                    return this.columnCUSTOMER_GROUP_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_GROUP_NAMEColumn {
                get {
                    return this.columnCUSTOMER_GROUP_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_GROUP_DESCColumn {
                get {
                    return this.columnCUSTOMER_GROUP_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_GROUP_PERCENTAGEColumn {
                get {
                    return this.columnCUSTOMER_GROUP_PERCENTAGE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_GROUP_USE_PERCENTAGEColumn {
                get {
                    return this.columnCUSTOMER_GROUP_USE_PERCENTAGE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMER_GROUPRow this[int index] {
                get {
                    return ((M_CUSTOMER_GROUPRow)(this.Rows[index]));
                }
            }
            
            public event M_CUSTOMER_GROUPRowChangeEventHandler M_CUSTOMER_GROUPRowChanging;
            
            public event M_CUSTOMER_GROUPRowChangeEventHandler M_CUSTOMER_GROUPRowChanged;
            
            public event M_CUSTOMER_GROUPRowChangeEventHandler M_CUSTOMER_GROUPRowDeleting;
            
            public event M_CUSTOMER_GROUPRowChangeEventHandler M_CUSTOMER_GROUPRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_CUSTOMER_GROUPRow(M_CUSTOMER_GROUPRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMER_GROUPRow AddM_CUSTOMER_GROUPRow(string CUSTOMER_GROUP_ID, string CUSTOMER_GROUP_NAME, string CUSTOMER_GROUP_DESC, decimal CUSTOMER_GROUP_PERCENTAGE, bool CUSTOMER_GROUP_USE_PERCENTAGE, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_CUSTOMER_GROUPRow rowM_CUSTOMER_GROUPRow = ((M_CUSTOMER_GROUPRow)(this.NewRow()));
                rowM_CUSTOMER_GROUPRow.ItemArray = new object[] {
                        CUSTOMER_GROUP_ID,
                        CUSTOMER_GROUP_NAME,
                        CUSTOMER_GROUP_DESC,
                        CUSTOMER_GROUP_PERCENTAGE,
                        CUSTOMER_GROUP_USE_PERCENTAGE,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_CUSTOMER_GROUPRow);
                return rowM_CUSTOMER_GROUPRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMER_GROUPRow FindByCUSTOMER_GROUP_ID(string CUSTOMER_GROUP_ID) {
                return ((M_CUSTOMER_GROUPRow)(this.Rows.Find(new object[] {
                            CUSTOMER_GROUP_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_CUSTOMER_GROUPDataTable cln = ((M_CUSTOMER_GROUPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_CUSTOMER_GROUPDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCUSTOMER_GROUP_ID = base.Columns["CUSTOMER_GROUP_ID"];
                this.columnCUSTOMER_GROUP_NAME = base.Columns["CUSTOMER_GROUP_NAME"];
                this.columnCUSTOMER_GROUP_DESC = base.Columns["CUSTOMER_GROUP_DESC"];
                this.columnCUSTOMER_GROUP_PERCENTAGE = base.Columns["CUSTOMER_GROUP_PERCENTAGE"];
                this.columnCUSTOMER_GROUP_USE_PERCENTAGE = base.Columns["CUSTOMER_GROUP_USE_PERCENTAGE"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCUSTOMER_GROUP_ID = new System.Data.DataColumn("CUSTOMER_GROUP_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_GROUP_ID);
                this.columnCUSTOMER_GROUP_NAME = new System.Data.DataColumn("CUSTOMER_GROUP_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_GROUP_NAME);
                this.columnCUSTOMER_GROUP_DESC = new System.Data.DataColumn("CUSTOMER_GROUP_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_GROUP_DESC);
                this.columnCUSTOMER_GROUP_PERCENTAGE = new System.Data.DataColumn("CUSTOMER_GROUP_PERCENTAGE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_GROUP_PERCENTAGE);
                this.columnCUSTOMER_GROUP_USE_PERCENTAGE = new System.Data.DataColumn("CUSTOMER_GROUP_USE_PERCENTAGE", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_GROUP_USE_PERCENTAGE);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnCUSTOMER_GROUP_ID}, true));
                this.columnCUSTOMER_GROUP_ID.AllowDBNull = false;
                this.columnCUSTOMER_GROUP_ID.Unique = true;
                this.columnCUSTOMER_GROUP_ID.MaxLength = 50;
                this.columnCUSTOMER_GROUP_NAME.MaxLength = 50;
                this.columnCUSTOMER_GROUP_DESC.MaxLength = 2147483647;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMER_GROUPRow NewM_CUSTOMER_GROUPRow() {
                return ((M_CUSTOMER_GROUPRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_CUSTOMER_GROUPRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_CUSTOMER_GROUPRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_CUSTOMER_GROUPRowChanged != null)) {
                    this.M_CUSTOMER_GROUPRowChanged(this, new M_CUSTOMER_GROUPRowChangeEvent(((M_CUSTOMER_GROUPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_CUSTOMER_GROUPRowChanging != null)) {
                    this.M_CUSTOMER_GROUPRowChanging(this, new M_CUSTOMER_GROUPRowChangeEvent(((M_CUSTOMER_GROUPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_CUSTOMER_GROUPRowDeleted != null)) {
                    this.M_CUSTOMER_GROUPRowDeleted(this, new M_CUSTOMER_GROUPRowChangeEvent(((M_CUSTOMER_GROUPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_CUSTOMER_GROUPRowDeleting != null)) {
                    this.M_CUSTOMER_GROUPRowDeleting(this, new M_CUSTOMER_GROUPRowChangeEvent(((M_CUSTOMER_GROUPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_CUSTOMER_GROUPRow(M_CUSTOMER_GROUPRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_CUSTOMER_GROUPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_DEPDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDEP_ID;
            
            private System.Data.DataColumn columnDEP_NAME;
            
            private System.Data.DataColumn columnDEP_STATUS;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DEPDataTable() {
                this.TableName = "M_DEP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_DEPDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_DEPDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEP_IDColumn {
                get {
                    return this.columnDEP_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEP_NAMEColumn {
                get {
                    return this.columnDEP_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEP_STATUSColumn {
                get {
                    return this.columnDEP_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DEPRow this[int index] {
                get {
                    return ((M_DEPRow)(this.Rows[index]));
                }
            }
            
            public event M_DEPRowChangeEventHandler M_DEPRowChanging;
            
            public event M_DEPRowChangeEventHandler M_DEPRowChanged;
            
            public event M_DEPRowChangeEventHandler M_DEPRowDeleting;
            
            public event M_DEPRowChangeEventHandler M_DEPRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_DEPRow(M_DEPRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DEPRow AddM_DEPRow(string DEP_ID, string DEP_NAME, string DEP_STATUS, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_DEPRow rowM_DEPRow = ((M_DEPRow)(this.NewRow()));
                rowM_DEPRow.ItemArray = new object[] {
                        DEP_ID,
                        DEP_NAME,
                        DEP_STATUS,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_DEPRow);
                return rowM_DEPRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DEPRow FindByDEP_ID(string DEP_ID) {
                return ((M_DEPRow)(this.Rows.Find(new object[] {
                            DEP_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_DEPDataTable cln = ((M_DEPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_DEPDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDEP_ID = base.Columns["DEP_ID"];
                this.columnDEP_NAME = base.Columns["DEP_NAME"];
                this.columnDEP_STATUS = base.Columns["DEP_STATUS"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDEP_ID = new System.Data.DataColumn("DEP_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEP_ID);
                this.columnDEP_NAME = new System.Data.DataColumn("DEP_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEP_NAME);
                this.columnDEP_STATUS = new System.Data.DataColumn("DEP_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEP_STATUS);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnDEP_ID}, true));
                this.columnDEP_ID.AllowDBNull = false;
                this.columnDEP_ID.Unique = true;
                this.columnDEP_ID.MaxLength = 50;
                this.columnDEP_NAME.MaxLength = 50;
                this.columnDEP_STATUS.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DEPRow NewM_DEPRow() {
                return ((M_DEPRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_DEPRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_DEPRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_DEPRowChanged != null)) {
                    this.M_DEPRowChanged(this, new M_DEPRowChangeEvent(((M_DEPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_DEPRowChanging != null)) {
                    this.M_DEPRowChanging(this, new M_DEPRowChangeEvent(((M_DEPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_DEPRowDeleted != null)) {
                    this.M_DEPRowDeleted(this, new M_DEPRowChangeEvent(((M_DEPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_DEPRowDeleting != null)) {
                    this.M_DEPRowDeleting(this, new M_DEPRowChangeEvent(((M_DEPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_DEPRow(M_DEPRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_DEPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_DESKDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDESK_ID;
            
            private System.Data.DataColumn columnDESK_STATUS;
            
            private System.Data.DataColumn columnDESK_DESC;
            
            private System.Data.DataColumn columnDESK_ORDER;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DESKDataTable() {
                this.TableName = "M_DESK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_DESKDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_DESKDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_IDColumn {
                get {
                    return this.columnDESK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_STATUSColumn {
                get {
                    return this.columnDESK_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_DESCColumn {
                get {
                    return this.columnDESK_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_ORDERColumn {
                get {
                    return this.columnDESK_ORDER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DESKRow this[int index] {
                get {
                    return ((M_DESKRow)(this.Rows[index]));
                }
            }
            
            public event M_DESKRowChangeEventHandler M_DESKRowChanging;
            
            public event M_DESKRowChangeEventHandler M_DESKRowChanged;
            
            public event M_DESKRowChangeEventHandler M_DESKRowDeleting;
            
            public event M_DESKRowChangeEventHandler M_DESKRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_DESKRow(M_DESKRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DESKRow AddM_DESKRow(string DESK_ID, string DESK_STATUS, string DESK_DESC, int DESK_ORDER, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_DESKRow rowM_DESKRow = ((M_DESKRow)(this.NewRow()));
                rowM_DESKRow.ItemArray = new object[] {
                        DESK_ID,
                        DESK_STATUS,
                        DESK_DESC,
                        DESK_ORDER,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_DESKRow);
                return rowM_DESKRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DESKRow FindByDESK_ID(string DESK_ID) {
                return ((M_DESKRow)(this.Rows.Find(new object[] {
                            DESK_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_DESKDataTable cln = ((M_DESKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_DESKDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDESK_ID = base.Columns["DESK_ID"];
                this.columnDESK_STATUS = base.Columns["DESK_STATUS"];
                this.columnDESK_DESC = base.Columns["DESK_DESC"];
                this.columnDESK_ORDER = base.Columns["DESK_ORDER"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDESK_ID = new System.Data.DataColumn("DESK_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_ID);
                this.columnDESK_STATUS = new System.Data.DataColumn("DESK_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_STATUS);
                this.columnDESK_DESC = new System.Data.DataColumn("DESK_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_DESC);
                this.columnDESK_ORDER = new System.Data.DataColumn("DESK_ORDER", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_ORDER);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnDESK_ID}, true));
                this.columnDESK_ID.AllowDBNull = false;
                this.columnDESK_ID.Unique = true;
                this.columnDESK_ID.MaxLength = 20;
                this.columnDESK_STATUS.MaxLength = 50;
                this.columnDESK_DESC.MaxLength = 2147483647;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DESKRow NewM_DESKRow() {
                return ((M_DESKRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_DESKRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_DESKRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_DESKRowChanged != null)) {
                    this.M_DESKRowChanged(this, new M_DESKRowChangeEvent(((M_DESKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_DESKRowChanging != null)) {
                    this.M_DESKRowChanging(this, new M_DESKRowChangeEvent(((M_DESKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_DESKRowDeleted != null)) {
                    this.M_DESKRowDeleted(this, new M_DESKRowChangeEvent(((M_DESKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_DESKRowDeleting != null)) {
                    this.M_DESKRowDeleting(this, new M_DESKRowChangeEvent(((M_DESKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_DESKRow(M_DESKRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_DESKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_DISCOUNTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDISC_ID;
            
            private System.Data.DataColumn columnDISC;
            
            private System.Data.DataColumn columnDISC_DAY;
            
            private System.Data.DataColumn columnDISC_TIME_HOUR_FROM;
            
            private System.Data.DataColumn columnDISC_TIME_MIN_FROM;
            
            private System.Data.DataColumn columnDISC_TIME_HOUR_TO;
            
            private System.Data.DataColumn columnDISC_TIME_MIN_TO;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DISCOUNTDataTable() {
                this.TableName = "M_DISCOUNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_DISCOUNTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_DISCOUNTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISC_IDColumn {
                get {
                    return this.columnDISC_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISCColumn {
                get {
                    return this.columnDISC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISC_DAYColumn {
                get {
                    return this.columnDISC_DAY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISC_TIME_HOUR_FROMColumn {
                get {
                    return this.columnDISC_TIME_HOUR_FROM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISC_TIME_MIN_FROMColumn {
                get {
                    return this.columnDISC_TIME_MIN_FROM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISC_TIME_HOUR_TOColumn {
                get {
                    return this.columnDISC_TIME_HOUR_TO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISC_TIME_MIN_TOColumn {
                get {
                    return this.columnDISC_TIME_MIN_TO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DISCOUNTRow this[int index] {
                get {
                    return ((M_DISCOUNTRow)(this.Rows[index]));
                }
            }
            
            public event M_DISCOUNTRowChangeEventHandler M_DISCOUNTRowChanging;
            
            public event M_DISCOUNTRowChangeEventHandler M_DISCOUNTRowChanged;
            
            public event M_DISCOUNTRowChangeEventHandler M_DISCOUNTRowDeleting;
            
            public event M_DISCOUNTRowChangeEventHandler M_DISCOUNTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_DISCOUNTRow(M_DISCOUNTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DISCOUNTRow AddM_DISCOUNTRow(decimal DISC, string DISC_DAY, int DISC_TIME_HOUR_FROM, int DISC_TIME_MIN_FROM, int DISC_TIME_HOUR_TO, int DISC_TIME_MIN_TO, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_DISCOUNTRow rowM_DISCOUNTRow = ((M_DISCOUNTRow)(this.NewRow()));
                rowM_DISCOUNTRow.ItemArray = new object[] {
                        null,
                        DISC,
                        DISC_DAY,
                        DISC_TIME_HOUR_FROM,
                        DISC_TIME_MIN_FROM,
                        DISC_TIME_HOUR_TO,
                        DISC_TIME_MIN_TO,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_DISCOUNTRow);
                return rowM_DISCOUNTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DISCOUNTRow FindByDISC_ID(decimal DISC_ID) {
                return ((M_DISCOUNTRow)(this.Rows.Find(new object[] {
                            DISC_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_DISCOUNTDataTable cln = ((M_DISCOUNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_DISCOUNTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDISC_ID = base.Columns["DISC_ID"];
                this.columnDISC = base.Columns["DISC"];
                this.columnDISC_DAY = base.Columns["DISC_DAY"];
                this.columnDISC_TIME_HOUR_FROM = base.Columns["DISC_TIME_HOUR_FROM"];
                this.columnDISC_TIME_MIN_FROM = base.Columns["DISC_TIME_MIN_FROM"];
                this.columnDISC_TIME_HOUR_TO = base.Columns["DISC_TIME_HOUR_TO"];
                this.columnDISC_TIME_MIN_TO = base.Columns["DISC_TIME_MIN_TO"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDISC_ID = new System.Data.DataColumn("DISC_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISC_ID);
                this.columnDISC = new System.Data.DataColumn("DISC", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISC);
                this.columnDISC_DAY = new System.Data.DataColumn("DISC_DAY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISC_DAY);
                this.columnDISC_TIME_HOUR_FROM = new System.Data.DataColumn("DISC_TIME_HOUR_FROM", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISC_TIME_HOUR_FROM);
                this.columnDISC_TIME_MIN_FROM = new System.Data.DataColumn("DISC_TIME_MIN_FROM", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISC_TIME_MIN_FROM);
                this.columnDISC_TIME_HOUR_TO = new System.Data.DataColumn("DISC_TIME_HOUR_TO", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISC_TIME_HOUR_TO);
                this.columnDISC_TIME_MIN_TO = new System.Data.DataColumn("DISC_TIME_MIN_TO", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISC_TIME_MIN_TO);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnDISC_ID}, true));
                this.columnDISC_ID.AutoIncrement = true;
                this.columnDISC_ID.AllowDBNull = false;
                this.columnDISC_ID.ReadOnly = true;
                this.columnDISC_ID.Unique = true;
                this.columnDISC_DAY.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DISCOUNTRow NewM_DISCOUNTRow() {
                return ((M_DISCOUNTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_DISCOUNTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_DISCOUNTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_DISCOUNTRowChanged != null)) {
                    this.M_DISCOUNTRowChanged(this, new M_DISCOUNTRowChangeEvent(((M_DISCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_DISCOUNTRowChanging != null)) {
                    this.M_DISCOUNTRowChanging(this, new M_DISCOUNTRowChangeEvent(((M_DISCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_DISCOUNTRowDeleted != null)) {
                    this.M_DISCOUNTRowDeleted(this, new M_DISCOUNTRowChangeEvent(((M_DISCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_DISCOUNTRowDeleting != null)) {
                    this.M_DISCOUNTRowDeleting(this, new M_DISCOUNTRowChangeEvent(((M_DISCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_DISCOUNTRow(M_DISCOUNTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_DISCOUNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_EMPLOYEEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnEMPLOYEE_ID;
            
            private System.Data.DataColumn columnEMPLOYEE_NAME;
            
            private System.Data.DataColumn columnDEP_ID;
            
            private System.Data.DataColumn columnEMPLOYEE_GENDER;
            
            private System.Data.DataColumn columnEMPLOYEE_ID_CARD;
            
            private System.Data.DataColumn columnEMPLOYEE_ADDRESS;
            
            private System.Data.DataColumn columnEMPLOYEE_PHONE;
            
            private System.Data.DataColumn columnEMPLOYEE_BIRTH_PLACE;
            
            private System.Data.DataColumn columnEMPLOYEE_BIRTH_DATE;
            
            private System.Data.DataColumn columnEMPLOYEE_MARITAL_STATUS;
            
            private System.Data.DataColumn columnEMPLOYEE_START_WORK;
            
            private System.Data.DataColumn columnEMPLOYEE_STATUS;
            
            private System.Data.DataColumn columnEMPLOYEE_DESC;
            
            private System.Data.DataColumn columnEMPLOYEE_DESC2;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_EMPLOYEEDataTable() {
                this.TableName = "M_EMPLOYEE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_EMPLOYEEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_EMPLOYEEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_IDColumn {
                get {
                    return this.columnEMPLOYEE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_NAMEColumn {
                get {
                    return this.columnEMPLOYEE_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEP_IDColumn {
                get {
                    return this.columnDEP_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_GENDERColumn {
                get {
                    return this.columnEMPLOYEE_GENDER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_ID_CARDColumn {
                get {
                    return this.columnEMPLOYEE_ID_CARD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_ADDRESSColumn {
                get {
                    return this.columnEMPLOYEE_ADDRESS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_PHONEColumn {
                get {
                    return this.columnEMPLOYEE_PHONE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_BIRTH_PLACEColumn {
                get {
                    return this.columnEMPLOYEE_BIRTH_PLACE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_BIRTH_DATEColumn {
                get {
                    return this.columnEMPLOYEE_BIRTH_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_MARITAL_STATUSColumn {
                get {
                    return this.columnEMPLOYEE_MARITAL_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_START_WORKColumn {
                get {
                    return this.columnEMPLOYEE_START_WORK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_STATUSColumn {
                get {
                    return this.columnEMPLOYEE_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_DESCColumn {
                get {
                    return this.columnEMPLOYEE_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_DESC2Column {
                get {
                    return this.columnEMPLOYEE_DESC2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_EMPLOYEERow this[int index] {
                get {
                    return ((M_EMPLOYEERow)(this.Rows[index]));
                }
            }
            
            public event M_EMPLOYEERowChangeEventHandler M_EMPLOYEERowChanging;
            
            public event M_EMPLOYEERowChangeEventHandler M_EMPLOYEERowChanged;
            
            public event M_EMPLOYEERowChangeEventHandler M_EMPLOYEERowDeleting;
            
            public event M_EMPLOYEERowChangeEventHandler M_EMPLOYEERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_EMPLOYEERow(M_EMPLOYEERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_EMPLOYEERow AddM_EMPLOYEERow(
                        string EMPLOYEE_ID, 
                        string EMPLOYEE_NAME, 
                        string DEP_ID, 
                        string EMPLOYEE_GENDER, 
                        string EMPLOYEE_ID_CARD, 
                        string EMPLOYEE_ADDRESS, 
                        string EMPLOYEE_PHONE, 
                        string EMPLOYEE_BIRTH_PLACE, 
                        System.DateTime EMPLOYEE_BIRTH_DATE, 
                        string EMPLOYEE_MARITAL_STATUS, 
                        System.DateTime EMPLOYEE_START_WORK, 
                        string EMPLOYEE_STATUS, 
                        string EMPLOYEE_DESC, 
                        string EMPLOYEE_DESC2, 
                        string MODIFIED_BY, 
                        System.DateTime MODIFIED_DATE) {
                M_EMPLOYEERow rowM_EMPLOYEERow = ((M_EMPLOYEERow)(this.NewRow()));
                rowM_EMPLOYEERow.ItemArray = new object[] {
                        EMPLOYEE_ID,
                        EMPLOYEE_NAME,
                        DEP_ID,
                        EMPLOYEE_GENDER,
                        EMPLOYEE_ID_CARD,
                        EMPLOYEE_ADDRESS,
                        EMPLOYEE_PHONE,
                        EMPLOYEE_BIRTH_PLACE,
                        EMPLOYEE_BIRTH_DATE,
                        EMPLOYEE_MARITAL_STATUS,
                        EMPLOYEE_START_WORK,
                        EMPLOYEE_STATUS,
                        EMPLOYEE_DESC,
                        EMPLOYEE_DESC2,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_EMPLOYEERow);
                return rowM_EMPLOYEERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_EMPLOYEERow FindByEMPLOYEE_ID(string EMPLOYEE_ID) {
                return ((M_EMPLOYEERow)(this.Rows.Find(new object[] {
                            EMPLOYEE_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_EMPLOYEEDataTable cln = ((M_EMPLOYEEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_EMPLOYEEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEMPLOYEE_ID = base.Columns["EMPLOYEE_ID"];
                this.columnEMPLOYEE_NAME = base.Columns["EMPLOYEE_NAME"];
                this.columnDEP_ID = base.Columns["DEP_ID"];
                this.columnEMPLOYEE_GENDER = base.Columns["EMPLOYEE_GENDER"];
                this.columnEMPLOYEE_ID_CARD = base.Columns["EMPLOYEE_ID_CARD"];
                this.columnEMPLOYEE_ADDRESS = base.Columns["EMPLOYEE_ADDRESS"];
                this.columnEMPLOYEE_PHONE = base.Columns["EMPLOYEE_PHONE"];
                this.columnEMPLOYEE_BIRTH_PLACE = base.Columns["EMPLOYEE_BIRTH_PLACE"];
                this.columnEMPLOYEE_BIRTH_DATE = base.Columns["EMPLOYEE_BIRTH_DATE"];
                this.columnEMPLOYEE_MARITAL_STATUS = base.Columns["EMPLOYEE_MARITAL_STATUS"];
                this.columnEMPLOYEE_START_WORK = base.Columns["EMPLOYEE_START_WORK"];
                this.columnEMPLOYEE_STATUS = base.Columns["EMPLOYEE_STATUS"];
                this.columnEMPLOYEE_DESC = base.Columns["EMPLOYEE_DESC"];
                this.columnEMPLOYEE_DESC2 = base.Columns["EMPLOYEE_DESC2"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEMPLOYEE_ID = new System.Data.DataColumn("EMPLOYEE_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ID);
                this.columnEMPLOYEE_NAME = new System.Data.DataColumn("EMPLOYEE_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_NAME);
                this.columnDEP_ID = new System.Data.DataColumn("DEP_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEP_ID);
                this.columnEMPLOYEE_GENDER = new System.Data.DataColumn("EMPLOYEE_GENDER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_GENDER);
                this.columnEMPLOYEE_ID_CARD = new System.Data.DataColumn("EMPLOYEE_ID_CARD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ID_CARD);
                this.columnEMPLOYEE_ADDRESS = new System.Data.DataColumn("EMPLOYEE_ADDRESS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ADDRESS);
                this.columnEMPLOYEE_PHONE = new System.Data.DataColumn("EMPLOYEE_PHONE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_PHONE);
                this.columnEMPLOYEE_BIRTH_PLACE = new System.Data.DataColumn("EMPLOYEE_BIRTH_PLACE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_BIRTH_PLACE);
                this.columnEMPLOYEE_BIRTH_DATE = new System.Data.DataColumn("EMPLOYEE_BIRTH_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_BIRTH_DATE);
                this.columnEMPLOYEE_MARITAL_STATUS = new System.Data.DataColumn("EMPLOYEE_MARITAL_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_MARITAL_STATUS);
                this.columnEMPLOYEE_START_WORK = new System.Data.DataColumn("EMPLOYEE_START_WORK", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_START_WORK);
                this.columnEMPLOYEE_STATUS = new System.Data.DataColumn("EMPLOYEE_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_STATUS);
                this.columnEMPLOYEE_DESC = new System.Data.DataColumn("EMPLOYEE_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_DESC);
                this.columnEMPLOYEE_DESC2 = new System.Data.DataColumn("EMPLOYEE_DESC2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_DESC2);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnEMPLOYEE_ID}, true));
                this.columnEMPLOYEE_ID.AllowDBNull = false;
                this.columnEMPLOYEE_ID.Unique = true;
                this.columnEMPLOYEE_ID.MaxLength = 50;
                this.columnEMPLOYEE_NAME.MaxLength = 50;
                this.columnDEP_ID.MaxLength = 50;
                this.columnEMPLOYEE_GENDER.MaxLength = 20;
                this.columnEMPLOYEE_ID_CARD.MaxLength = 50;
                this.columnEMPLOYEE_ADDRESS.MaxLength = 100;
                this.columnEMPLOYEE_PHONE.MaxLength = 50;
                this.columnEMPLOYEE_BIRTH_PLACE.MaxLength = 50;
                this.columnEMPLOYEE_MARITAL_STATUS.MaxLength = 50;
                this.columnEMPLOYEE_STATUS.MaxLength = 50;
                this.columnEMPLOYEE_DESC.MaxLength = 50;
                this.columnEMPLOYEE_DESC2.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_EMPLOYEERow NewM_EMPLOYEERow() {
                return ((M_EMPLOYEERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_EMPLOYEERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_EMPLOYEERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_EMPLOYEERowChanged != null)) {
                    this.M_EMPLOYEERowChanged(this, new M_EMPLOYEERowChangeEvent(((M_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_EMPLOYEERowChanging != null)) {
                    this.M_EMPLOYEERowChanging(this, new M_EMPLOYEERowChangeEvent(((M_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_EMPLOYEERowDeleted != null)) {
                    this.M_EMPLOYEERowDeleted(this, new M_EMPLOYEERowChangeEvent(((M_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_EMPLOYEERowDeleting != null)) {
                    this.M_EMPLOYEERowDeleting(this, new M_EMPLOYEERowChangeEvent(((M_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_EMPLOYEERow(M_EMPLOYEERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_EMPLOYEEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_GROUPDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnGROUP_ID;
            
            private System.Data.DataColumn columnGROUP_NAME;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GROUPDataTable() {
                this.TableName = "M_GROUP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_GROUPDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_GROUPDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GROUP_IDColumn {
                get {
                    return this.columnGROUP_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GROUP_NAMEColumn {
                get {
                    return this.columnGROUP_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GROUPRow this[int index] {
                get {
                    return ((M_GROUPRow)(this.Rows[index]));
                }
            }
            
            public event M_GROUPRowChangeEventHandler M_GROUPRowChanging;
            
            public event M_GROUPRowChangeEventHandler M_GROUPRowChanged;
            
            public event M_GROUPRowChangeEventHandler M_GROUPRowDeleting;
            
            public event M_GROUPRowChangeEventHandler M_GROUPRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_GROUPRow(M_GROUPRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GROUPRow AddM_GROUPRow(string GROUP_NAME, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_GROUPRow rowM_GROUPRow = ((M_GROUPRow)(this.NewRow()));
                rowM_GROUPRow.ItemArray = new object[] {
                        null,
                        GROUP_NAME,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_GROUPRow);
                return rowM_GROUPRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GROUPRow FindByGROUP_ID(int GROUP_ID) {
                return ((M_GROUPRow)(this.Rows.Find(new object[] {
                            GROUP_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_GROUPDataTable cln = ((M_GROUPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_GROUPDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGROUP_ID = base.Columns["GROUP_ID"];
                this.columnGROUP_NAME = base.Columns["GROUP_NAME"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGROUP_ID = new System.Data.DataColumn("GROUP_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_ID);
                this.columnGROUP_NAME = new System.Data.DataColumn("GROUP_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_NAME);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnGROUP_ID}, true));
                this.columnGROUP_ID.AutoIncrement = true;
                this.columnGROUP_ID.AllowDBNull = false;
                this.columnGROUP_ID.ReadOnly = true;
                this.columnGROUP_ID.Unique = true;
                this.columnGROUP_NAME.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GROUPRow NewM_GROUPRow() {
                return ((M_GROUPRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_GROUPRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_GROUPRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_GROUPRowChanged != null)) {
                    this.M_GROUPRowChanged(this, new M_GROUPRowChangeEvent(((M_GROUPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_GROUPRowChanging != null)) {
                    this.M_GROUPRowChanging(this, new M_GROUPRowChangeEvent(((M_GROUPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_GROUPRowDeleted != null)) {
                    this.M_GROUPRowDeleted(this, new M_GROUPRowChangeEvent(((M_GROUPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_GROUPRowDeleting != null)) {
                    this.M_GROUPRowDeleting(this, new M_GROUPRowChangeEvent(((M_GROUPRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_GROUPRow(M_GROUPRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_GROUPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_GUDANGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnGUDANG_ID;
            
            private System.Data.DataColumn columnLOCATION_ID;
            
            private System.Data.DataColumn columnGUDANG_NAME;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GUDANGDataTable() {
                this.TableName = "M_GUDANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_GUDANGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_GUDANGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GUDANG_IDColumn {
                get {
                    return this.columnGUDANG_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOCATION_IDColumn {
                get {
                    return this.columnLOCATION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GUDANG_NAMEColumn {
                get {
                    return this.columnGUDANG_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GUDANGRow this[int index] {
                get {
                    return ((M_GUDANGRow)(this.Rows[index]));
                }
            }
            
            public event M_GUDANGRowChangeEventHandler M_GUDANGRowChanging;
            
            public event M_GUDANGRowChangeEventHandler M_GUDANGRowChanged;
            
            public event M_GUDANGRowChangeEventHandler M_GUDANGRowDeleting;
            
            public event M_GUDANGRowChangeEventHandler M_GUDANGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_GUDANGRow(M_GUDANGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GUDANGRow AddM_GUDANGRow(int LOCATION_ID, string GUDANG_NAME, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_GUDANGRow rowM_GUDANGRow = ((M_GUDANGRow)(this.NewRow()));
                rowM_GUDANGRow.ItemArray = new object[] {
                        null,
                        LOCATION_ID,
                        GUDANG_NAME,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_GUDANGRow);
                return rowM_GUDANGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GUDANGRow FindByGUDANG_ID(int GUDANG_ID) {
                return ((M_GUDANGRow)(this.Rows.Find(new object[] {
                            GUDANG_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_GUDANGDataTable cln = ((M_GUDANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_GUDANGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGUDANG_ID = base.Columns["GUDANG_ID"];
                this.columnLOCATION_ID = base.Columns["LOCATION_ID"];
                this.columnGUDANG_NAME = base.Columns["GUDANG_NAME"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGUDANG_ID = new System.Data.DataColumn("GUDANG_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGUDANG_ID);
                this.columnLOCATION_ID = new System.Data.DataColumn("LOCATION_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION_ID);
                this.columnGUDANG_NAME = new System.Data.DataColumn("GUDANG_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGUDANG_NAME);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnGUDANG_ID}, true));
                this.columnGUDANG_ID.AutoIncrement = true;
                this.columnGUDANG_ID.AllowDBNull = false;
                this.columnGUDANG_ID.ReadOnly = true;
                this.columnGUDANG_ID.Unique = true;
                this.columnGUDANG_NAME.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GUDANGRow NewM_GUDANGRow() {
                return ((M_GUDANGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_GUDANGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_GUDANGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_GUDANGRowChanged != null)) {
                    this.M_GUDANGRowChanged(this, new M_GUDANGRowChangeEvent(((M_GUDANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_GUDANGRowChanging != null)) {
                    this.M_GUDANGRowChanging(this, new M_GUDANGRowChangeEvent(((M_GUDANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_GUDANGRowDeleted != null)) {
                    this.M_GUDANGRowDeleted(this, new M_GUDANGRowChangeEvent(((M_GUDANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_GUDANGRowDeleting != null)) {
                    this.M_GUDANGRowDeleting(this, new M_GUDANGRowChangeEvent(((M_GUDANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_GUDANGRow(M_GUDANGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_GUDANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_ITEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnITEM_ID;
            
            private System.Data.DataColumn columnITEM_TYPE_ID;
            
            private System.Data.DataColumn columnGROUP_ID;
            
            private System.Data.DataColumn columnITEM_NAME;
            
            private System.Data.DataColumn columnITEM_SATUAN;
            
            private System.Data.DataColumn columnITEM_DESC;
            
            private System.Data.DataColumn columnITEM_COMMISION;
            
            private System.Data.DataColumn columnDEFAULT_GUDANG_ID;
            
            private System.Data.DataColumn columnITEM_PRICE_MAX_VIP;
            
            private System.Data.DataColumn columnITEM_PRICE_MIN_VIP;
            
            private System.Data.DataColumn columnITEM_PRICE_MAX;
            
            private System.Data.DataColumn columnITEM_PRICE_MIN;
            
            private System.Data.DataColumn columnITEM_PRICE_PURCHASE;
            
            private System.Data.DataColumn columnITEM_PRICE_PURCHASE_AVG;
            
            private System.Data.DataColumn columnITEM_EXPIRED_DATE;
            
            private System.Data.DataColumn columnSUPPLIER_ID;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEMDataTable() {
                this.TableName = "M_ITEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_ITEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_ITEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_IDColumn {
                get {
                    return this.columnITEM_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_TYPE_IDColumn {
                get {
                    return this.columnITEM_TYPE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GROUP_IDColumn {
                get {
                    return this.columnGROUP_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_NAMEColumn {
                get {
                    return this.columnITEM_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_SATUANColumn {
                get {
                    return this.columnITEM_SATUAN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_DESCColumn {
                get {
                    return this.columnITEM_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_COMMISIONColumn {
                get {
                    return this.columnITEM_COMMISION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEFAULT_GUDANG_IDColumn {
                get {
                    return this.columnDEFAULT_GUDANG_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_PRICE_MAX_VIPColumn {
                get {
                    return this.columnITEM_PRICE_MAX_VIP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_PRICE_MIN_VIPColumn {
                get {
                    return this.columnITEM_PRICE_MIN_VIP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_PRICE_MAXColumn {
                get {
                    return this.columnITEM_PRICE_MAX;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_PRICE_MINColumn {
                get {
                    return this.columnITEM_PRICE_MIN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_PRICE_PURCHASEColumn {
                get {
                    return this.columnITEM_PRICE_PURCHASE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_PRICE_PURCHASE_AVGColumn {
                get {
                    return this.columnITEM_PRICE_PURCHASE_AVG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_EXPIRED_DATEColumn {
                get {
                    return this.columnITEM_EXPIRED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_IDColumn {
                get {
                    return this.columnSUPPLIER_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEMRow this[int index] {
                get {
                    return ((M_ITEMRow)(this.Rows[index]));
                }
            }
            
            public event M_ITEMRowChangeEventHandler M_ITEMRowChanging;
            
            public event M_ITEMRowChangeEventHandler M_ITEMRowChanged;
            
            public event M_ITEMRowChangeEventHandler M_ITEMRowDeleting;
            
            public event M_ITEMRowChangeEventHandler M_ITEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_ITEMRow(M_ITEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEMRow AddM_ITEMRow(
                        string ITEM_ID, 
                        int ITEM_TYPE_ID, 
                        int GROUP_ID, 
                        string ITEM_NAME, 
                        string ITEM_SATUAN, 
                        string ITEM_DESC, 
                        decimal ITEM_COMMISION, 
                        int DEFAULT_GUDANG_ID, 
                        decimal ITEM_PRICE_MAX_VIP, 
                        decimal ITEM_PRICE_MIN_VIP, 
                        decimal ITEM_PRICE_MAX, 
                        decimal ITEM_PRICE_MIN, 
                        decimal ITEM_PRICE_PURCHASE, 
                        decimal ITEM_PRICE_PURCHASE_AVG, 
                        System.DateTime ITEM_EXPIRED_DATE, 
                        string SUPPLIER_ID, 
                        string MODIFIED_BY, 
                        System.DateTime MODIFIED_DATE) {
                M_ITEMRow rowM_ITEMRow = ((M_ITEMRow)(this.NewRow()));
                rowM_ITEMRow.ItemArray = new object[] {
                        ITEM_ID,
                        ITEM_TYPE_ID,
                        GROUP_ID,
                        ITEM_NAME,
                        ITEM_SATUAN,
                        ITEM_DESC,
                        ITEM_COMMISION,
                        DEFAULT_GUDANG_ID,
                        ITEM_PRICE_MAX_VIP,
                        ITEM_PRICE_MIN_VIP,
                        ITEM_PRICE_MAX,
                        ITEM_PRICE_MIN,
                        ITEM_PRICE_PURCHASE,
                        ITEM_PRICE_PURCHASE_AVG,
                        ITEM_EXPIRED_DATE,
                        SUPPLIER_ID,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_ITEMRow);
                return rowM_ITEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEMRow FindByITEM_ID(string ITEM_ID) {
                return ((M_ITEMRow)(this.Rows.Find(new object[] {
                            ITEM_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_ITEMDataTable cln = ((M_ITEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_ITEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnITEM_ID = base.Columns["ITEM_ID"];
                this.columnITEM_TYPE_ID = base.Columns["ITEM_TYPE_ID"];
                this.columnGROUP_ID = base.Columns["GROUP_ID"];
                this.columnITEM_NAME = base.Columns["ITEM_NAME"];
                this.columnITEM_SATUAN = base.Columns["ITEM_SATUAN"];
                this.columnITEM_DESC = base.Columns["ITEM_DESC"];
                this.columnITEM_COMMISION = base.Columns["ITEM_COMMISION"];
                this.columnDEFAULT_GUDANG_ID = base.Columns["DEFAULT_GUDANG_ID"];
                this.columnITEM_PRICE_MAX_VIP = base.Columns["ITEM_PRICE_MAX_VIP"];
                this.columnITEM_PRICE_MIN_VIP = base.Columns["ITEM_PRICE_MIN_VIP"];
                this.columnITEM_PRICE_MAX = base.Columns["ITEM_PRICE_MAX"];
                this.columnITEM_PRICE_MIN = base.Columns["ITEM_PRICE_MIN"];
                this.columnITEM_PRICE_PURCHASE = base.Columns["ITEM_PRICE_PURCHASE"];
                this.columnITEM_PRICE_PURCHASE_AVG = base.Columns["ITEM_PRICE_PURCHASE_AVG"];
                this.columnITEM_EXPIRED_DATE = base.Columns["ITEM_EXPIRED_DATE"];
                this.columnSUPPLIER_ID = base.Columns["SUPPLIER_ID"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnITEM_ID = new System.Data.DataColumn("ITEM_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_ID);
                this.columnITEM_TYPE_ID = new System.Data.DataColumn("ITEM_TYPE_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_TYPE_ID);
                this.columnGROUP_ID = new System.Data.DataColumn("GROUP_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_ID);
                this.columnITEM_NAME = new System.Data.DataColumn("ITEM_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_NAME);
                this.columnITEM_SATUAN = new System.Data.DataColumn("ITEM_SATUAN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_SATUAN);
                this.columnITEM_DESC = new System.Data.DataColumn("ITEM_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_DESC);
                this.columnITEM_COMMISION = new System.Data.DataColumn("ITEM_COMMISION", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_COMMISION);
                this.columnDEFAULT_GUDANG_ID = new System.Data.DataColumn("DEFAULT_GUDANG_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_GUDANG_ID);
                this.columnITEM_PRICE_MAX_VIP = new System.Data.DataColumn("ITEM_PRICE_MAX_VIP", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_PRICE_MAX_VIP);
                this.columnITEM_PRICE_MIN_VIP = new System.Data.DataColumn("ITEM_PRICE_MIN_VIP", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_PRICE_MIN_VIP);
                this.columnITEM_PRICE_MAX = new System.Data.DataColumn("ITEM_PRICE_MAX", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_PRICE_MAX);
                this.columnITEM_PRICE_MIN = new System.Data.DataColumn("ITEM_PRICE_MIN", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_PRICE_MIN);
                this.columnITEM_PRICE_PURCHASE = new System.Data.DataColumn("ITEM_PRICE_PURCHASE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_PRICE_PURCHASE);
                this.columnITEM_PRICE_PURCHASE_AVG = new System.Data.DataColumn("ITEM_PRICE_PURCHASE_AVG", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_PRICE_PURCHASE_AVG);
                this.columnITEM_EXPIRED_DATE = new System.Data.DataColumn("ITEM_EXPIRED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_EXPIRED_DATE);
                this.columnSUPPLIER_ID = new System.Data.DataColumn("SUPPLIER_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_ID);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnITEM_ID}, true));
                this.columnITEM_ID.AllowDBNull = false;
                this.columnITEM_ID.Unique = true;
                this.columnITEM_ID.MaxLength = 50;
                this.columnITEM_NAME.MaxLength = 50;
                this.columnITEM_SATUAN.MaxLength = 50;
                this.columnITEM_DESC.MaxLength = 2147483647;
                this.columnSUPPLIER_ID.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEMRow NewM_ITEMRow() {
                return ((M_ITEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_ITEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_ITEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_ITEMRowChanged != null)) {
                    this.M_ITEMRowChanged(this, new M_ITEMRowChangeEvent(((M_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_ITEMRowChanging != null)) {
                    this.M_ITEMRowChanging(this, new M_ITEMRowChangeEvent(((M_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_ITEMRowDeleted != null)) {
                    this.M_ITEMRowDeleted(this, new M_ITEMRowChangeEvent(((M_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_ITEMRowDeleting != null)) {
                    this.M_ITEMRowDeleting(this, new M_ITEMRowChangeEvent(((M_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_ITEMRow(M_ITEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_ITEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_ITEM_TYPEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnITEM_TYPE_ID;
            
            private System.Data.DataColumn columnITEM_TYPE_NAME;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEM_TYPEDataTable() {
                this.TableName = "M_ITEM_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_ITEM_TYPEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_ITEM_TYPEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_TYPE_IDColumn {
                get {
                    return this.columnITEM_TYPE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_TYPE_NAMEColumn {
                get {
                    return this.columnITEM_TYPE_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEM_TYPERow this[int index] {
                get {
                    return ((M_ITEM_TYPERow)(this.Rows[index]));
                }
            }
            
            public event M_ITEM_TYPERowChangeEventHandler M_ITEM_TYPERowChanging;
            
            public event M_ITEM_TYPERowChangeEventHandler M_ITEM_TYPERowChanged;
            
            public event M_ITEM_TYPERowChangeEventHandler M_ITEM_TYPERowDeleting;
            
            public event M_ITEM_TYPERowChangeEventHandler M_ITEM_TYPERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_ITEM_TYPERow(M_ITEM_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEM_TYPERow AddM_ITEM_TYPERow(string ITEM_TYPE_NAME, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_ITEM_TYPERow rowM_ITEM_TYPERow = ((M_ITEM_TYPERow)(this.NewRow()));
                rowM_ITEM_TYPERow.ItemArray = new object[] {
                        null,
                        ITEM_TYPE_NAME,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_ITEM_TYPERow);
                return rowM_ITEM_TYPERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEM_TYPERow FindByITEM_TYPE_ID(int ITEM_TYPE_ID) {
                return ((M_ITEM_TYPERow)(this.Rows.Find(new object[] {
                            ITEM_TYPE_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_ITEM_TYPEDataTable cln = ((M_ITEM_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_ITEM_TYPEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnITEM_TYPE_ID = base.Columns["ITEM_TYPE_ID"];
                this.columnITEM_TYPE_NAME = base.Columns["ITEM_TYPE_NAME"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnITEM_TYPE_ID = new System.Data.DataColumn("ITEM_TYPE_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_TYPE_ID);
                this.columnITEM_TYPE_NAME = new System.Data.DataColumn("ITEM_TYPE_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_TYPE_NAME);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnITEM_TYPE_ID}, true));
                this.columnITEM_TYPE_ID.AutoIncrement = true;
                this.columnITEM_TYPE_ID.AllowDBNull = false;
                this.columnITEM_TYPE_ID.ReadOnly = true;
                this.columnITEM_TYPE_ID.Unique = true;
                this.columnITEM_TYPE_NAME.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEM_TYPERow NewM_ITEM_TYPERow() {
                return ((M_ITEM_TYPERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_ITEM_TYPERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_ITEM_TYPERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_ITEM_TYPERowChanged != null)) {
                    this.M_ITEM_TYPERowChanged(this, new M_ITEM_TYPERowChangeEvent(((M_ITEM_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_ITEM_TYPERowChanging != null)) {
                    this.M_ITEM_TYPERowChanging(this, new M_ITEM_TYPERowChangeEvent(((M_ITEM_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_ITEM_TYPERowDeleted != null)) {
                    this.M_ITEM_TYPERowDeleted(this, new M_ITEM_TYPERowChangeEvent(((M_ITEM_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_ITEM_TYPERowDeleting != null)) {
                    this.M_ITEM_TYPERowDeleting(this, new M_ITEM_TYPERowChangeEvent(((M_ITEM_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_ITEM_TYPERow(M_ITEM_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_ITEM_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_LOCATIONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnLOCATION_ID;
            
            private System.Data.DataColumn columnLOCATION_PARENT_ID;
            
            private System.Data.DataColumn columnLOCATION_NAME;
            
            private System.Data.DataColumn columnLOCATION_SHORT_NAME;
            
            private System.Data.DataColumn columnLOCATION_DESC;
            
            private System.Data.DataColumn columnLOCATION_IS_CRITICAL;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_LOCATIONDataTable() {
                this.TableName = "M_LOCATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_LOCATIONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_LOCATIONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOCATION_IDColumn {
                get {
                    return this.columnLOCATION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOCATION_PARENT_IDColumn {
                get {
                    return this.columnLOCATION_PARENT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOCATION_NAMEColumn {
                get {
                    return this.columnLOCATION_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOCATION_SHORT_NAMEColumn {
                get {
                    return this.columnLOCATION_SHORT_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOCATION_DESCColumn {
                get {
                    return this.columnLOCATION_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOCATION_IS_CRITICALColumn {
                get {
                    return this.columnLOCATION_IS_CRITICAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_LOCATIONRow this[int index] {
                get {
                    return ((M_LOCATIONRow)(this.Rows[index]));
                }
            }
            
            public event M_LOCATIONRowChangeEventHandler M_LOCATIONRowChanging;
            
            public event M_LOCATIONRowChangeEventHandler M_LOCATIONRowChanged;
            
            public event M_LOCATIONRowChangeEventHandler M_LOCATIONRowDeleting;
            
            public event M_LOCATIONRowChangeEventHandler M_LOCATIONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_LOCATIONRow(M_LOCATIONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_LOCATIONRow AddM_LOCATIONRow(int LOCATION_ID, int LOCATION_PARENT_ID, string LOCATION_NAME, string LOCATION_SHORT_NAME, string LOCATION_DESC, bool LOCATION_IS_CRITICAL, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_LOCATIONRow rowM_LOCATIONRow = ((M_LOCATIONRow)(this.NewRow()));
                rowM_LOCATIONRow.ItemArray = new object[] {
                        LOCATION_ID,
                        LOCATION_PARENT_ID,
                        LOCATION_NAME,
                        LOCATION_SHORT_NAME,
                        LOCATION_DESC,
                        LOCATION_IS_CRITICAL,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_LOCATIONRow);
                return rowM_LOCATIONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_LOCATIONRow FindByLOCATION_ID(int LOCATION_ID) {
                return ((M_LOCATIONRow)(this.Rows.Find(new object[] {
                            LOCATION_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_LOCATIONDataTable cln = ((M_LOCATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_LOCATIONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLOCATION_ID = base.Columns["LOCATION_ID"];
                this.columnLOCATION_PARENT_ID = base.Columns["LOCATION_PARENT_ID"];
                this.columnLOCATION_NAME = base.Columns["LOCATION_NAME"];
                this.columnLOCATION_SHORT_NAME = base.Columns["LOCATION_SHORT_NAME"];
                this.columnLOCATION_DESC = base.Columns["LOCATION_DESC"];
                this.columnLOCATION_IS_CRITICAL = base.Columns["LOCATION_IS_CRITICAL"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLOCATION_ID = new System.Data.DataColumn("LOCATION_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION_ID);
                this.columnLOCATION_PARENT_ID = new System.Data.DataColumn("LOCATION_PARENT_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION_PARENT_ID);
                this.columnLOCATION_NAME = new System.Data.DataColumn("LOCATION_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION_NAME);
                this.columnLOCATION_SHORT_NAME = new System.Data.DataColumn("LOCATION_SHORT_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION_SHORT_NAME);
                this.columnLOCATION_DESC = new System.Data.DataColumn("LOCATION_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION_DESC);
                this.columnLOCATION_IS_CRITICAL = new System.Data.DataColumn("LOCATION_IS_CRITICAL", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION_IS_CRITICAL);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnLOCATION_ID}, true));
                this.columnLOCATION_ID.AllowDBNull = false;
                this.columnLOCATION_ID.Unique = true;
                this.columnLOCATION_PARENT_ID.AllowDBNull = false;
                this.columnLOCATION_NAME.MaxLength = 50;
                this.columnLOCATION_SHORT_NAME.MaxLength = 50;
                this.columnLOCATION_DESC.MaxLength = 255;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_LOCATIONRow NewM_LOCATIONRow() {
                return ((M_LOCATIONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_LOCATIONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_LOCATIONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_LOCATIONRowChanged != null)) {
                    this.M_LOCATIONRowChanged(this, new M_LOCATIONRowChangeEvent(((M_LOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_LOCATIONRowChanging != null)) {
                    this.M_LOCATIONRowChanging(this, new M_LOCATIONRowChangeEvent(((M_LOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_LOCATIONRowDeleted != null)) {
                    this.M_LOCATIONRowDeleted(this, new M_LOCATIONRowChangeEvent(((M_LOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_LOCATIONRowDeleting != null)) {
                    this.M_LOCATIONRowDeleting(this, new M_LOCATIONRowChangeEvent(((M_LOCATIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_LOCATIONRow(M_LOCATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_LOCATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_MENUDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMENU_ID;
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnMENU_NAME;
            
            private System.Data.DataColumn columnMENU_STATUS;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_MENUDataTable() {
                this.TableName = "M_MENU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_MENUDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_MENUDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MENU_IDColumn {
                get {
                    return this.columnMENU_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MENU_NAMEColumn {
                get {
                    return this.columnMENU_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MENU_STATUSColumn {
                get {
                    return this.columnMENU_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_MENURow this[int index] {
                get {
                    return ((M_MENURow)(this.Rows[index]));
                }
            }
            
            public event M_MENURowChangeEventHandler M_MENURowChanging;
            
            public event M_MENURowChangeEventHandler M_MENURowChanged;
            
            public event M_MENURowChangeEventHandler M_MENURowDeleting;
            
            public event M_MENURowChangeEventHandler M_MENURowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_MENURow(M_MENURow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_MENURow AddM_MENURow(decimal MENU_ID, string SETTING_ID, string MENU_NAME, string MENU_STATUS) {
                M_MENURow rowM_MENURow = ((M_MENURow)(this.NewRow()));
                rowM_MENURow.ItemArray = new object[] {
                        MENU_ID,
                        SETTING_ID,
                        MENU_NAME,
                        MENU_STATUS};
                this.Rows.Add(rowM_MENURow);
                return rowM_MENURow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_MENURow FindByMENU_IDSETTING_ID(decimal MENU_ID, string SETTING_ID) {
                return ((M_MENURow)(this.Rows.Find(new object[] {
                            MENU_ID,
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_MENUDataTable cln = ((M_MENUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_MENUDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMENU_ID = base.Columns["MENU_ID"];
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnMENU_NAME = base.Columns["MENU_NAME"];
                this.columnMENU_STATUS = base.Columns["MENU_STATUS"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMENU_ID = new System.Data.DataColumn("MENU_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENU_ID);
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnMENU_NAME = new System.Data.DataColumn("MENU_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENU_NAME);
                this.columnMENU_STATUS = new System.Data.DataColumn("MENU_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENU_STATUS);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMENU_ID,
                                this.columnSETTING_ID}, true));
                this.columnMENU_ID.AllowDBNull = false;
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnMENU_NAME.MaxLength = 50;
                this.columnMENU_STATUS.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_MENURow NewM_MENURow() {
                return ((M_MENURow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_MENURow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_MENURow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_MENURowChanged != null)) {
                    this.M_MENURowChanged(this, new M_MENURowChangeEvent(((M_MENURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_MENURowChanging != null)) {
                    this.M_MENURowChanging(this, new M_MENURowChangeEvent(((M_MENURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_MENURowDeleted != null)) {
                    this.M_MENURowDeleted(this, new M_MENURowChangeEvent(((M_MENURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_MENURowDeleting != null)) {
                    this.M_MENURowDeleting(this, new M_MENURowChangeEvent(((M_MENURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_MENURow(M_MENURow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_MENUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_PACKETDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPACKET_ID;
            
            private System.Data.DataColumn columnPACKET_NAME;
            
            private System.Data.DataColumn columnPACKET_DISCOUNT;
            
            private System.Data.DataColumn columnPACKET_PRICE;
            
            private System.Data.DataColumn columnPACKET_DESC;
            
            private System.Data.DataColumn columnPACKET_PRICE_AVG;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKETDataTable() {
                this.TableName = "M_PACKET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_PACKETDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_PACKETDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_IDColumn {
                get {
                    return this.columnPACKET_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_NAMEColumn {
                get {
                    return this.columnPACKET_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_DISCOUNTColumn {
                get {
                    return this.columnPACKET_DISCOUNT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_PRICEColumn {
                get {
                    return this.columnPACKET_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_DESCColumn {
                get {
                    return this.columnPACKET_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_PRICE_AVGColumn {
                get {
                    return this.columnPACKET_PRICE_AVG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKETRow this[int index] {
                get {
                    return ((M_PACKETRow)(this.Rows[index]));
                }
            }
            
            public event M_PACKETRowChangeEventHandler M_PACKETRowChanging;
            
            public event M_PACKETRowChangeEventHandler M_PACKETRowChanged;
            
            public event M_PACKETRowChangeEventHandler M_PACKETRowDeleting;
            
            public event M_PACKETRowChangeEventHandler M_PACKETRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_PACKETRow(M_PACKETRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKETRow AddM_PACKETRow(string PACKET_ID, string PACKET_NAME, decimal PACKET_DISCOUNT, decimal PACKET_PRICE, string PACKET_DESC, decimal PACKET_PRICE_AVG, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_PACKETRow rowM_PACKETRow = ((M_PACKETRow)(this.NewRow()));
                rowM_PACKETRow.ItemArray = new object[] {
                        PACKET_ID,
                        PACKET_NAME,
                        PACKET_DISCOUNT,
                        PACKET_PRICE,
                        PACKET_DESC,
                        PACKET_PRICE_AVG,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_PACKETRow);
                return rowM_PACKETRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKETRow FindByPACKET_ID(string PACKET_ID) {
                return ((M_PACKETRow)(this.Rows.Find(new object[] {
                            PACKET_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_PACKETDataTable cln = ((M_PACKETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_PACKETDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPACKET_ID = base.Columns["PACKET_ID"];
                this.columnPACKET_NAME = base.Columns["PACKET_NAME"];
                this.columnPACKET_DISCOUNT = base.Columns["PACKET_DISCOUNT"];
                this.columnPACKET_PRICE = base.Columns["PACKET_PRICE"];
                this.columnPACKET_DESC = base.Columns["PACKET_DESC"];
                this.columnPACKET_PRICE_AVG = base.Columns["PACKET_PRICE_AVG"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPACKET_ID = new System.Data.DataColumn("PACKET_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_ID);
                this.columnPACKET_NAME = new System.Data.DataColumn("PACKET_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_NAME);
                this.columnPACKET_DISCOUNT = new System.Data.DataColumn("PACKET_DISCOUNT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_DISCOUNT);
                this.columnPACKET_PRICE = new System.Data.DataColumn("PACKET_PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_PRICE);
                this.columnPACKET_DESC = new System.Data.DataColumn("PACKET_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_DESC);
                this.columnPACKET_PRICE_AVG = new System.Data.DataColumn("PACKET_PRICE_AVG", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_PRICE_AVG);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPACKET_ID}, true));
                this.columnPACKET_ID.AllowDBNull = false;
                this.columnPACKET_ID.Unique = true;
                this.columnPACKET_ID.MaxLength = 50;
                this.columnPACKET_NAME.MaxLength = 50;
                this.columnPACKET_DESC.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKETRow NewM_PACKETRow() {
                return ((M_PACKETRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_PACKETRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_PACKETRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_PACKETRowChanged != null)) {
                    this.M_PACKETRowChanged(this, new M_PACKETRowChangeEvent(((M_PACKETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_PACKETRowChanging != null)) {
                    this.M_PACKETRowChanging(this, new M_PACKETRowChangeEvent(((M_PACKETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_PACKETRowDeleted != null)) {
                    this.M_PACKETRowDeleted(this, new M_PACKETRowChangeEvent(((M_PACKETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_PACKETRowDeleting != null)) {
                    this.M_PACKETRowDeleting(this, new M_PACKETRowChangeEvent(((M_PACKETRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_PACKETRow(M_PACKETRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_PACKETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_PACKET_ITEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPACKET_ITEM_ID;
            
            private System.Data.DataColumn columnPACKET_ID;
            
            private System.Data.DataColumn columnITEM_ID;
            
            private System.Data.DataColumn columnPACKET_ITEM_QUANTITY;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKET_ITEMDataTable() {
                this.TableName = "M_PACKET_ITEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_PACKET_ITEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_PACKET_ITEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_ITEM_IDColumn {
                get {
                    return this.columnPACKET_ITEM_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_IDColumn {
                get {
                    return this.columnPACKET_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_IDColumn {
                get {
                    return this.columnITEM_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PACKET_ITEM_QUANTITYColumn {
                get {
                    return this.columnPACKET_ITEM_QUANTITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKET_ITEMRow this[int index] {
                get {
                    return ((M_PACKET_ITEMRow)(this.Rows[index]));
                }
            }
            
            public event M_PACKET_ITEMRowChangeEventHandler M_PACKET_ITEMRowChanging;
            
            public event M_PACKET_ITEMRowChangeEventHandler M_PACKET_ITEMRowChanged;
            
            public event M_PACKET_ITEMRowChangeEventHandler M_PACKET_ITEMRowDeleting;
            
            public event M_PACKET_ITEMRowChangeEventHandler M_PACKET_ITEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_PACKET_ITEMRow(M_PACKET_ITEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKET_ITEMRow AddM_PACKET_ITEMRow(string PACKET_ID, string ITEM_ID, decimal PACKET_ITEM_QUANTITY, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_PACKET_ITEMRow rowM_PACKET_ITEMRow = ((M_PACKET_ITEMRow)(this.NewRow()));
                rowM_PACKET_ITEMRow.ItemArray = new object[] {
                        null,
                        PACKET_ID,
                        ITEM_ID,
                        PACKET_ITEM_QUANTITY,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_PACKET_ITEMRow);
                return rowM_PACKET_ITEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKET_ITEMRow FindByPACKET_ITEM_ID(decimal PACKET_ITEM_ID) {
                return ((M_PACKET_ITEMRow)(this.Rows.Find(new object[] {
                            PACKET_ITEM_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_PACKET_ITEMDataTable cln = ((M_PACKET_ITEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_PACKET_ITEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPACKET_ITEM_ID = base.Columns["PACKET_ITEM_ID"];
                this.columnPACKET_ID = base.Columns["PACKET_ID"];
                this.columnITEM_ID = base.Columns["ITEM_ID"];
                this.columnPACKET_ITEM_QUANTITY = base.Columns["PACKET_ITEM_QUANTITY"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPACKET_ITEM_ID = new System.Data.DataColumn("PACKET_ITEM_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_ITEM_ID);
                this.columnPACKET_ID = new System.Data.DataColumn("PACKET_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_ID);
                this.columnITEM_ID = new System.Data.DataColumn("ITEM_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_ID);
                this.columnPACKET_ITEM_QUANTITY = new System.Data.DataColumn("PACKET_ITEM_QUANTITY", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKET_ITEM_QUANTITY);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPACKET_ITEM_ID}, true));
                this.columnPACKET_ITEM_ID.AutoIncrement = true;
                this.columnPACKET_ITEM_ID.AllowDBNull = false;
                this.columnPACKET_ITEM_ID.ReadOnly = true;
                this.columnPACKET_ITEM_ID.Unique = true;
                this.columnPACKET_ID.MaxLength = 50;
                this.columnITEM_ID.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKET_ITEMRow NewM_PACKET_ITEMRow() {
                return ((M_PACKET_ITEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_PACKET_ITEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_PACKET_ITEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_PACKET_ITEMRowChanged != null)) {
                    this.M_PACKET_ITEMRowChanged(this, new M_PACKET_ITEMRowChangeEvent(((M_PACKET_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_PACKET_ITEMRowChanging != null)) {
                    this.M_PACKET_ITEMRowChanging(this, new M_PACKET_ITEMRowChangeEvent(((M_PACKET_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_PACKET_ITEMRowDeleted != null)) {
                    this.M_PACKET_ITEMRowDeleted(this, new M_PACKET_ITEMRowChangeEvent(((M_PACKET_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_PACKET_ITEMRowDeleting != null)) {
                    this.M_PACKET_ITEMRowDeleting(this, new M_PACKET_ITEMRowChangeEvent(((M_PACKET_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_PACKET_ITEMRow(M_PACKET_ITEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_PACKET_ITEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_ROOMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnROOM_ID;
            
            private System.Data.DataColumn columnROOM_NAME;
            
            private System.Data.DataColumn columnROOM_COMISSION;
            
            private System.Data.DataColumn columnROOM_DESC;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ROOMDataTable() {
                this.TableName = "M_ROOM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_ROOMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_ROOMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ROOM_IDColumn {
                get {
                    return this.columnROOM_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ROOM_NAMEColumn {
                get {
                    return this.columnROOM_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ROOM_COMISSIONColumn {
                get {
                    return this.columnROOM_COMISSION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ROOM_DESCColumn {
                get {
                    return this.columnROOM_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ROOMRow this[int index] {
                get {
                    return ((M_ROOMRow)(this.Rows[index]));
                }
            }
            
            public event M_ROOMRowChangeEventHandler M_ROOMRowChanging;
            
            public event M_ROOMRowChangeEventHandler M_ROOMRowChanged;
            
            public event M_ROOMRowChangeEventHandler M_ROOMRowDeleting;
            
            public event M_ROOMRowChangeEventHandler M_ROOMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_ROOMRow(M_ROOMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ROOMRow AddM_ROOMRow(string ROOM_ID, string ROOM_NAME, decimal ROOM_COMISSION, string ROOM_DESC, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_ROOMRow rowM_ROOMRow = ((M_ROOMRow)(this.NewRow()));
                rowM_ROOMRow.ItemArray = new object[] {
                        ROOM_ID,
                        ROOM_NAME,
                        ROOM_COMISSION,
                        ROOM_DESC,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_ROOMRow);
                return rowM_ROOMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ROOMRow FindByROOM_ID(string ROOM_ID) {
                return ((M_ROOMRow)(this.Rows.Find(new object[] {
                            ROOM_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_ROOMDataTable cln = ((M_ROOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_ROOMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnROOM_ID = base.Columns["ROOM_ID"];
                this.columnROOM_NAME = base.Columns["ROOM_NAME"];
                this.columnROOM_COMISSION = base.Columns["ROOM_COMISSION"];
                this.columnROOM_DESC = base.Columns["ROOM_DESC"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnROOM_ID = new System.Data.DataColumn("ROOM_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnROOM_ID);
                this.columnROOM_NAME = new System.Data.DataColumn("ROOM_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnROOM_NAME);
                this.columnROOM_COMISSION = new System.Data.DataColumn("ROOM_COMISSION", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnROOM_COMISSION);
                this.columnROOM_DESC = new System.Data.DataColumn("ROOM_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnROOM_DESC);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnROOM_ID}, true));
                this.columnROOM_ID.AllowDBNull = false;
                this.columnROOM_ID.Unique = true;
                this.columnROOM_ID.MaxLength = 50;
                this.columnROOM_NAME.MaxLength = 50;
                this.columnROOM_DESC.MaxLength = 2147483647;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ROOMRow NewM_ROOMRow() {
                return ((M_ROOMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_ROOMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_ROOMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_ROOMRowChanged != null)) {
                    this.M_ROOMRowChanged(this, new M_ROOMRowChangeEvent(((M_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_ROOMRowChanging != null)) {
                    this.M_ROOMRowChanging(this, new M_ROOMRowChangeEvent(((M_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_ROOMRowDeleted != null)) {
                    this.M_ROOMRowDeleted(this, new M_ROOMRowChangeEvent(((M_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_ROOMRowDeleting != null)) {
                    this.M_ROOMRowDeleting(this, new M_ROOMRowChangeEvent(((M_ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_ROOMRow(M_ROOMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_ROOMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_SETTINGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnCOMPANY_NAME;
            
            private System.Data.DataColumn columnCOMPANY_ADDRESS;
            
            private System.Data.DataColumn columnCOMPANY_ADDRESS2;
            
            private System.Data.DataColumn columnCOMPANY_CITY;
            
            private System.Data.DataColumn columnCOMPANY_TELP;
            
            private System.Data.DataColumn columnCOMPANY_FAX;
            
            private System.Data.DataColumn columnCOMPANY_NPWP;
            
            private System.Data.DataColumn columnCOMPANY_PKP_DATE;
            
            private System.Data.DataColumn columnCOMPANY_LOGO;
            
            private System.Data.DataColumn columnAUTO_PRINT_SALES;
            
            private System.Data.DataColumn columnAUTO_BACKUP;
            
            private System.Data.DataColumn columnBACKUP_DIR;
            
            private System.Data.DataColumn columnFACTUR_NO_FORMAT;
            
            private System.Data.DataColumn columnFACTUR_NO_LENGTH;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SETTINGDataTable() {
                this.TableName = "M_SETTING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_SETTINGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_SETTINGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_NAMEColumn {
                get {
                    return this.columnCOMPANY_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_ADDRESSColumn {
                get {
                    return this.columnCOMPANY_ADDRESS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_ADDRESS2Column {
                get {
                    return this.columnCOMPANY_ADDRESS2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_CITYColumn {
                get {
                    return this.columnCOMPANY_CITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_TELPColumn {
                get {
                    return this.columnCOMPANY_TELP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_FAXColumn {
                get {
                    return this.columnCOMPANY_FAX;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_NPWPColumn {
                get {
                    return this.columnCOMPANY_NPWP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_PKP_DATEColumn {
                get {
                    return this.columnCOMPANY_PKP_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_LOGOColumn {
                get {
                    return this.columnCOMPANY_LOGO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AUTO_PRINT_SALESColumn {
                get {
                    return this.columnAUTO_PRINT_SALES;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AUTO_BACKUPColumn {
                get {
                    return this.columnAUTO_BACKUP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BACKUP_DIRColumn {
                get {
                    return this.columnBACKUP_DIR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FACTUR_NO_FORMATColumn {
                get {
                    return this.columnFACTUR_NO_FORMAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FACTUR_NO_LENGTHColumn {
                get {
                    return this.columnFACTUR_NO_LENGTH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SETTINGRow this[int index] {
                get {
                    return ((M_SETTINGRow)(this.Rows[index]));
                }
            }
            
            public event M_SETTINGRowChangeEventHandler M_SETTINGRowChanging;
            
            public event M_SETTINGRowChangeEventHandler M_SETTINGRowChanged;
            
            public event M_SETTINGRowChangeEventHandler M_SETTINGRowDeleting;
            
            public event M_SETTINGRowChangeEventHandler M_SETTINGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_SETTINGRow(M_SETTINGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SETTINGRow AddM_SETTINGRow(
                        string SETTING_ID, 
                        string COMPANY_NAME, 
                        string COMPANY_ADDRESS, 
                        string COMPANY_ADDRESS2, 
                        string COMPANY_CITY, 
                        string COMPANY_TELP, 
                        string COMPANY_FAX, 
                        string COMPANY_NPWP, 
                        System.DateTime COMPANY_PKP_DATE, 
                        byte[] COMPANY_LOGO, 
                        bool AUTO_PRINT_SALES, 
                        bool AUTO_BACKUP, 
                        string BACKUP_DIR, 
                        string FACTUR_NO_FORMAT, 
                        int FACTUR_NO_LENGTH, 
                        string MODIFIED_BY, 
                        System.DateTime MODIFIED_DATE) {
                M_SETTINGRow rowM_SETTINGRow = ((M_SETTINGRow)(this.NewRow()));
                rowM_SETTINGRow.ItemArray = new object[] {
                        SETTING_ID,
                        COMPANY_NAME,
                        COMPANY_ADDRESS,
                        COMPANY_ADDRESS2,
                        COMPANY_CITY,
                        COMPANY_TELP,
                        COMPANY_FAX,
                        COMPANY_NPWP,
                        COMPANY_PKP_DATE,
                        COMPANY_LOGO,
                        AUTO_PRINT_SALES,
                        AUTO_BACKUP,
                        BACKUP_DIR,
                        FACTUR_NO_FORMAT,
                        FACTUR_NO_LENGTH,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_SETTINGRow);
                return rowM_SETTINGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SETTINGRow FindBySETTING_ID(string SETTING_ID) {
                return ((M_SETTINGRow)(this.Rows.Find(new object[] {
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_SETTINGDataTable cln = ((M_SETTINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_SETTINGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnCOMPANY_NAME = base.Columns["COMPANY_NAME"];
                this.columnCOMPANY_ADDRESS = base.Columns["COMPANY_ADDRESS"];
                this.columnCOMPANY_ADDRESS2 = base.Columns["COMPANY_ADDRESS2"];
                this.columnCOMPANY_CITY = base.Columns["COMPANY_CITY"];
                this.columnCOMPANY_TELP = base.Columns["COMPANY_TELP"];
                this.columnCOMPANY_FAX = base.Columns["COMPANY_FAX"];
                this.columnCOMPANY_NPWP = base.Columns["COMPANY_NPWP"];
                this.columnCOMPANY_PKP_DATE = base.Columns["COMPANY_PKP_DATE"];
                this.columnCOMPANY_LOGO = base.Columns["COMPANY_LOGO"];
                this.columnAUTO_PRINT_SALES = base.Columns["AUTO_PRINT_SALES"];
                this.columnAUTO_BACKUP = base.Columns["AUTO_BACKUP"];
                this.columnBACKUP_DIR = base.Columns["BACKUP_DIR"];
                this.columnFACTUR_NO_FORMAT = base.Columns["FACTUR_NO_FORMAT"];
                this.columnFACTUR_NO_LENGTH = base.Columns["FACTUR_NO_LENGTH"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnCOMPANY_NAME = new System.Data.DataColumn("COMPANY_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_NAME);
                this.columnCOMPANY_ADDRESS = new System.Data.DataColumn("COMPANY_ADDRESS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ADDRESS);
                this.columnCOMPANY_ADDRESS2 = new System.Data.DataColumn("COMPANY_ADDRESS2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_ADDRESS2);
                this.columnCOMPANY_CITY = new System.Data.DataColumn("COMPANY_CITY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_CITY);
                this.columnCOMPANY_TELP = new System.Data.DataColumn("COMPANY_TELP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_TELP);
                this.columnCOMPANY_FAX = new System.Data.DataColumn("COMPANY_FAX", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_FAX);
                this.columnCOMPANY_NPWP = new System.Data.DataColumn("COMPANY_NPWP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_NPWP);
                this.columnCOMPANY_PKP_DATE = new System.Data.DataColumn("COMPANY_PKP_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_PKP_DATE);
                this.columnCOMPANY_LOGO = new System.Data.DataColumn("COMPANY_LOGO", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_LOGO);
                this.columnAUTO_PRINT_SALES = new System.Data.DataColumn("AUTO_PRINT_SALES", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO_PRINT_SALES);
                this.columnAUTO_BACKUP = new System.Data.DataColumn("AUTO_BACKUP", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO_BACKUP);
                this.columnBACKUP_DIR = new System.Data.DataColumn("BACKUP_DIR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBACKUP_DIR);
                this.columnFACTUR_NO_FORMAT = new System.Data.DataColumn("FACTUR_NO_FORMAT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACTUR_NO_FORMAT);
                this.columnFACTUR_NO_LENGTH = new System.Data.DataColumn("FACTUR_NO_LENGTH", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACTUR_NO_LENGTH);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSETTING_ID}, true));
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.Unique = true;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnCOMPANY_NAME.MaxLength = 50;
                this.columnCOMPANY_ADDRESS.MaxLength = 50;
                this.columnCOMPANY_ADDRESS2.MaxLength = 50;
                this.columnCOMPANY_CITY.MaxLength = 50;
                this.columnCOMPANY_TELP.MaxLength = 50;
                this.columnCOMPANY_FAX.MaxLength = 50;
                this.columnCOMPANY_NPWP.MaxLength = 50;
                this.columnBACKUP_DIR.MaxLength = 100;
                this.columnFACTUR_NO_FORMAT.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SETTINGRow NewM_SETTINGRow() {
                return ((M_SETTINGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_SETTINGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_SETTINGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_SETTINGRowChanged != null)) {
                    this.M_SETTINGRowChanged(this, new M_SETTINGRowChangeEvent(((M_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_SETTINGRowChanging != null)) {
                    this.M_SETTINGRowChanging(this, new M_SETTINGRowChangeEvent(((M_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_SETTINGRowDeleted != null)) {
                    this.M_SETTINGRowDeleted(this, new M_SETTINGRowChangeEvent(((M_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_SETTINGRowDeleting != null)) {
                    this.M_SETTINGRowDeleting(this, new M_SETTINGRowChangeEvent(((M_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_SETTINGRow(M_SETTINGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_SETTINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_SUB_ACCOUNTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnACCOUNT_ID;
            
            private System.Data.DataColumn columnSUB_ACCOUNT_NAME;
            
            private System.Data.DataColumn columnSUB_ACCOUNT_SALDO;
            
            private System.Data.DataColumn columnSUB_ACCOUNT_DESC;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUB_ACCOUNTDataTable() {
                this.TableName = "M_SUB_ACCOUNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_SUB_ACCOUNTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_SUB_ACCOUNTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnSUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_IDColumn {
                get {
                    return this.columnACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_NAMEColumn {
                get {
                    return this.columnSUB_ACCOUNT_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_SALDOColumn {
                get {
                    return this.columnSUB_ACCOUNT_SALDO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_DESCColumn {
                get {
                    return this.columnSUB_ACCOUNT_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUB_ACCOUNTRow this[int index] {
                get {
                    return ((M_SUB_ACCOUNTRow)(this.Rows[index]));
                }
            }
            
            public event M_SUB_ACCOUNTRowChangeEventHandler M_SUB_ACCOUNTRowChanging;
            
            public event M_SUB_ACCOUNTRowChangeEventHandler M_SUB_ACCOUNTRowChanged;
            
            public event M_SUB_ACCOUNTRowChangeEventHandler M_SUB_ACCOUNTRowDeleting;
            
            public event M_SUB_ACCOUNTRowChangeEventHandler M_SUB_ACCOUNTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_SUB_ACCOUNTRow(M_SUB_ACCOUNTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUB_ACCOUNTRow AddM_SUB_ACCOUNTRow(string SUB_ACCOUNT_ID, string ACCOUNT_ID, string SUB_ACCOUNT_NAME, decimal SUB_ACCOUNT_SALDO, string SUB_ACCOUNT_DESC, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_SUB_ACCOUNTRow rowM_SUB_ACCOUNTRow = ((M_SUB_ACCOUNTRow)(this.NewRow()));
                rowM_SUB_ACCOUNTRow.ItemArray = new object[] {
                        SUB_ACCOUNT_ID,
                        ACCOUNT_ID,
                        SUB_ACCOUNT_NAME,
                        SUB_ACCOUNT_SALDO,
                        SUB_ACCOUNT_DESC,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_SUB_ACCOUNTRow);
                return rowM_SUB_ACCOUNTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUB_ACCOUNTRow FindBySUB_ACCOUNT_ID(string SUB_ACCOUNT_ID) {
                return ((M_SUB_ACCOUNTRow)(this.Rows.Find(new object[] {
                            SUB_ACCOUNT_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_SUB_ACCOUNTDataTable cln = ((M_SUB_ACCOUNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_SUB_ACCOUNTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSUB_ACCOUNT_ID = base.Columns["SUB_ACCOUNT_ID"];
                this.columnACCOUNT_ID = base.Columns["ACCOUNT_ID"];
                this.columnSUB_ACCOUNT_NAME = base.Columns["SUB_ACCOUNT_NAME"];
                this.columnSUB_ACCOUNT_SALDO = base.Columns["SUB_ACCOUNT_SALDO"];
                this.columnSUB_ACCOUNT_DESC = base.Columns["SUB_ACCOUNT_DESC"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSUB_ACCOUNT_ID = new System.Data.DataColumn("SUB_ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_ID);
                this.columnACCOUNT_ID = new System.Data.DataColumn("ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_ID);
                this.columnSUB_ACCOUNT_NAME = new System.Data.DataColumn("SUB_ACCOUNT_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_NAME);
                this.columnSUB_ACCOUNT_SALDO = new System.Data.DataColumn("SUB_ACCOUNT_SALDO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_SALDO);
                this.columnSUB_ACCOUNT_DESC = new System.Data.DataColumn("SUB_ACCOUNT_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_DESC);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSUB_ACCOUNT_ID}, true));
                this.columnSUB_ACCOUNT_ID.AllowDBNull = false;
                this.columnSUB_ACCOUNT_ID.Unique = true;
                this.columnSUB_ACCOUNT_ID.MaxLength = 50;
                this.columnACCOUNT_ID.MaxLength = 50;
                this.columnSUB_ACCOUNT_NAME.MaxLength = 50;
                this.columnSUB_ACCOUNT_DESC.MaxLength = 2147483647;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUB_ACCOUNTRow NewM_SUB_ACCOUNTRow() {
                return ((M_SUB_ACCOUNTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_SUB_ACCOUNTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_SUB_ACCOUNTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_SUB_ACCOUNTRowChanged != null)) {
                    this.M_SUB_ACCOUNTRowChanged(this, new M_SUB_ACCOUNTRowChangeEvent(((M_SUB_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_SUB_ACCOUNTRowChanging != null)) {
                    this.M_SUB_ACCOUNTRowChanging(this, new M_SUB_ACCOUNTRowChangeEvent(((M_SUB_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_SUB_ACCOUNTRowDeleted != null)) {
                    this.M_SUB_ACCOUNTRowDeleted(this, new M_SUB_ACCOUNTRowChangeEvent(((M_SUB_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_SUB_ACCOUNTRowDeleting != null)) {
                    this.M_SUB_ACCOUNTRowDeleting(this, new M_SUB_ACCOUNTRowChangeEvent(((M_SUB_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_SUB_ACCOUNTRow(M_SUB_ACCOUNTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_SUB_ACCOUNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_SUPPLIERDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSUPPLIER_ID;
            
            private System.Data.DataColumn columnSUPPLIER_NAME;
            
            private System.Data.DataColumn columnSUPPLIER_ADDRESS;
            
            private System.Data.DataColumn columnSUPPLIER_PHONE;
            
            private System.Data.DataColumn columnSUPPLIER_FAX;
            
            private System.Data.DataColumn columnSUPPLIER_NPWP;
            
            private System.Data.DataColumn columnSUPPLIER_CONTACT;
            
            private System.Data.DataColumn columnSUPPLIER_CONTACT_PHONE;
            
            private System.Data.DataColumn columnSUPPLIER_LIMIT;
            
            private System.Data.DataColumn columnSUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIERDataTable() {
                this.TableName = "M_SUPPLIER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_SUPPLIERDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_SUPPLIERDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_IDColumn {
                get {
                    return this.columnSUPPLIER_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_NAMEColumn {
                get {
                    return this.columnSUPPLIER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_ADDRESSColumn {
                get {
                    return this.columnSUPPLIER_ADDRESS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_PHONEColumn {
                get {
                    return this.columnSUPPLIER_PHONE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_FAXColumn {
                get {
                    return this.columnSUPPLIER_FAX;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_NPWPColumn {
                get {
                    return this.columnSUPPLIER_NPWP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_CONTACTColumn {
                get {
                    return this.columnSUPPLIER_CONTACT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_CONTACT_PHONEColumn {
                get {
                    return this.columnSUPPLIER_CONTACT_PHONE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_LIMITColumn {
                get {
                    return this.columnSUPPLIER_LIMIT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnSUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIERRow this[int index] {
                get {
                    return ((M_SUPPLIERRow)(this.Rows[index]));
                }
            }
            
            public event M_SUPPLIERRowChangeEventHandler M_SUPPLIERRowChanging;
            
            public event M_SUPPLIERRowChangeEventHandler M_SUPPLIERRowChanged;
            
            public event M_SUPPLIERRowChangeEventHandler M_SUPPLIERRowDeleting;
            
            public event M_SUPPLIERRowChangeEventHandler M_SUPPLIERRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_SUPPLIERRow(M_SUPPLIERRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIERRow AddM_SUPPLIERRow(string SUPPLIER_ID, string SUPPLIER_NAME, string SUPPLIER_ADDRESS, string SUPPLIER_PHONE, string SUPPLIER_FAX, string SUPPLIER_NPWP, string SUPPLIER_CONTACT, string SUPPLIER_CONTACT_PHONE, decimal SUPPLIER_LIMIT, string SUB_ACCOUNT_ID, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_SUPPLIERRow rowM_SUPPLIERRow = ((M_SUPPLIERRow)(this.NewRow()));
                rowM_SUPPLIERRow.ItemArray = new object[] {
                        SUPPLIER_ID,
                        SUPPLIER_NAME,
                        SUPPLIER_ADDRESS,
                        SUPPLIER_PHONE,
                        SUPPLIER_FAX,
                        SUPPLIER_NPWP,
                        SUPPLIER_CONTACT,
                        SUPPLIER_CONTACT_PHONE,
                        SUPPLIER_LIMIT,
                        SUB_ACCOUNT_ID,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_SUPPLIERRow);
                return rowM_SUPPLIERRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIERRow FindBySUPPLIER_ID(string SUPPLIER_ID) {
                return ((M_SUPPLIERRow)(this.Rows.Find(new object[] {
                            SUPPLIER_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_SUPPLIERDataTable cln = ((M_SUPPLIERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_SUPPLIERDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSUPPLIER_ID = base.Columns["SUPPLIER_ID"];
                this.columnSUPPLIER_NAME = base.Columns["SUPPLIER_NAME"];
                this.columnSUPPLIER_ADDRESS = base.Columns["SUPPLIER_ADDRESS"];
                this.columnSUPPLIER_PHONE = base.Columns["SUPPLIER_PHONE"];
                this.columnSUPPLIER_FAX = base.Columns["SUPPLIER_FAX"];
                this.columnSUPPLIER_NPWP = base.Columns["SUPPLIER_NPWP"];
                this.columnSUPPLIER_CONTACT = base.Columns["SUPPLIER_CONTACT"];
                this.columnSUPPLIER_CONTACT_PHONE = base.Columns["SUPPLIER_CONTACT_PHONE"];
                this.columnSUPPLIER_LIMIT = base.Columns["SUPPLIER_LIMIT"];
                this.columnSUB_ACCOUNT_ID = base.Columns["SUB_ACCOUNT_ID"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSUPPLIER_ID = new System.Data.DataColumn("SUPPLIER_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_ID);
                this.columnSUPPLIER_NAME = new System.Data.DataColumn("SUPPLIER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_NAME);
                this.columnSUPPLIER_ADDRESS = new System.Data.DataColumn("SUPPLIER_ADDRESS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_ADDRESS);
                this.columnSUPPLIER_PHONE = new System.Data.DataColumn("SUPPLIER_PHONE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_PHONE);
                this.columnSUPPLIER_FAX = new System.Data.DataColumn("SUPPLIER_FAX", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_FAX);
                this.columnSUPPLIER_NPWP = new System.Data.DataColumn("SUPPLIER_NPWP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_NPWP);
                this.columnSUPPLIER_CONTACT = new System.Data.DataColumn("SUPPLIER_CONTACT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_CONTACT);
                this.columnSUPPLIER_CONTACT_PHONE = new System.Data.DataColumn("SUPPLIER_CONTACT_PHONE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_CONTACT_PHONE);
                this.columnSUPPLIER_LIMIT = new System.Data.DataColumn("SUPPLIER_LIMIT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_LIMIT);
                this.columnSUB_ACCOUNT_ID = new System.Data.DataColumn("SUB_ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_ID);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSUPPLIER_ID}, true));
                this.columnSUPPLIER_ID.AllowDBNull = false;
                this.columnSUPPLIER_ID.Unique = true;
                this.columnSUPPLIER_ID.MaxLength = 50;
                this.columnSUPPLIER_NAME.MaxLength = 50;
                this.columnSUPPLIER_ADDRESS.MaxLength = 100;
                this.columnSUPPLIER_PHONE.MaxLength = 50;
                this.columnSUPPLIER_FAX.MaxLength = 50;
                this.columnSUPPLIER_NPWP.MaxLength = 50;
                this.columnSUPPLIER_CONTACT.MaxLength = 50;
                this.columnSUPPLIER_CONTACT_PHONE.MaxLength = 50;
                this.columnSUB_ACCOUNT_ID.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIERRow NewM_SUPPLIERRow() {
                return ((M_SUPPLIERRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_SUPPLIERRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_SUPPLIERRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_SUPPLIERRowChanged != null)) {
                    this.M_SUPPLIERRowChanged(this, new M_SUPPLIERRowChangeEvent(((M_SUPPLIERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_SUPPLIERRowChanging != null)) {
                    this.M_SUPPLIERRowChanging(this, new M_SUPPLIERRowChangeEvent(((M_SUPPLIERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_SUPPLIERRowDeleted != null)) {
                    this.M_SUPPLIERRowDeleted(this, new M_SUPPLIERRowChangeEvent(((M_SUPPLIERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_SUPPLIERRowDeleting != null)) {
                    this.M_SUPPLIERRowDeleting(this, new M_SUPPLIERRowChangeEvent(((M_SUPPLIERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_SUPPLIERRow(M_SUPPLIERRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_SUPPLIERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_SUPPLIER_ACCOUNTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSUPPLIER_ID;
            
            private System.Data.DataColumn columnCURRENCY_ID;
            
            private System.Data.DataColumn columnBANK_ID;
            
            private System.Data.DataColumn columnSUPPLIER_ACCOUNT_NO;
            
            private System.Data.DataColumn columnSUPPLIER_ACCOUNT_NAME;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIER_ACCOUNTDataTable() {
                this.TableName = "M_SUPPLIER_ACCOUNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_SUPPLIER_ACCOUNTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_SUPPLIER_ACCOUNTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_IDColumn {
                get {
                    return this.columnSUPPLIER_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CURRENCY_IDColumn {
                get {
                    return this.columnCURRENCY_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BANK_IDColumn {
                get {
                    return this.columnBANK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_ACCOUNT_NOColumn {
                get {
                    return this.columnSUPPLIER_ACCOUNT_NO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_ACCOUNT_NAMEColumn {
                get {
                    return this.columnSUPPLIER_ACCOUNT_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIER_ACCOUNTRow this[int index] {
                get {
                    return ((M_SUPPLIER_ACCOUNTRow)(this.Rows[index]));
                }
            }
            
            public event M_SUPPLIER_ACCOUNTRowChangeEventHandler M_SUPPLIER_ACCOUNTRowChanging;
            
            public event M_SUPPLIER_ACCOUNTRowChangeEventHandler M_SUPPLIER_ACCOUNTRowChanged;
            
            public event M_SUPPLIER_ACCOUNTRowChangeEventHandler M_SUPPLIER_ACCOUNTRowDeleting;
            
            public event M_SUPPLIER_ACCOUNTRowChangeEventHandler M_SUPPLIER_ACCOUNTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_SUPPLIER_ACCOUNTRow(M_SUPPLIER_ACCOUNTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIER_ACCOUNTRow AddM_SUPPLIER_ACCOUNTRow(string SUPPLIER_ID, string CURRENCY_ID, string BANK_ID, string SUPPLIER_ACCOUNT_NO, string SUPPLIER_ACCOUNT_NAME) {
                M_SUPPLIER_ACCOUNTRow rowM_SUPPLIER_ACCOUNTRow = ((M_SUPPLIER_ACCOUNTRow)(this.NewRow()));
                rowM_SUPPLIER_ACCOUNTRow.ItemArray = new object[] {
                        SUPPLIER_ID,
                        CURRENCY_ID,
                        BANK_ID,
                        SUPPLIER_ACCOUNT_NO,
                        SUPPLIER_ACCOUNT_NAME};
                this.Rows.Add(rowM_SUPPLIER_ACCOUNTRow);
                return rowM_SUPPLIER_ACCOUNTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIER_ACCOUNTRow FindBySUPPLIER_IDCURRENCY_ID(string SUPPLIER_ID, string CURRENCY_ID) {
                return ((M_SUPPLIER_ACCOUNTRow)(this.Rows.Find(new object[] {
                            SUPPLIER_ID,
                            CURRENCY_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_SUPPLIER_ACCOUNTDataTable cln = ((M_SUPPLIER_ACCOUNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_SUPPLIER_ACCOUNTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSUPPLIER_ID = base.Columns["SUPPLIER_ID"];
                this.columnCURRENCY_ID = base.Columns["CURRENCY_ID"];
                this.columnBANK_ID = base.Columns["BANK_ID"];
                this.columnSUPPLIER_ACCOUNT_NO = base.Columns["SUPPLIER_ACCOUNT_NO"];
                this.columnSUPPLIER_ACCOUNT_NAME = base.Columns["SUPPLIER_ACCOUNT_NAME"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSUPPLIER_ID = new System.Data.DataColumn("SUPPLIER_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_ID);
                this.columnCURRENCY_ID = new System.Data.DataColumn("CURRENCY_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENCY_ID);
                this.columnBANK_ID = new System.Data.DataColumn("BANK_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_ID);
                this.columnSUPPLIER_ACCOUNT_NO = new System.Data.DataColumn("SUPPLIER_ACCOUNT_NO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_ACCOUNT_NO);
                this.columnSUPPLIER_ACCOUNT_NAME = new System.Data.DataColumn("SUPPLIER_ACCOUNT_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_ACCOUNT_NAME);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSUPPLIER_ID,
                                this.columnCURRENCY_ID}, true));
                this.columnSUPPLIER_ID.AllowDBNull = false;
                this.columnSUPPLIER_ID.MaxLength = 50;
                this.columnCURRENCY_ID.AllowDBNull = false;
                this.columnCURRENCY_ID.MaxLength = 50;
                this.columnBANK_ID.MaxLength = 50;
                this.columnSUPPLIER_ACCOUNT_NO.MaxLength = 50;
                this.columnSUPPLIER_ACCOUNT_NAME.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIER_ACCOUNTRow NewM_SUPPLIER_ACCOUNTRow() {
                return ((M_SUPPLIER_ACCOUNTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_SUPPLIER_ACCOUNTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_SUPPLIER_ACCOUNTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_SUPPLIER_ACCOUNTRowChanged != null)) {
                    this.M_SUPPLIER_ACCOUNTRowChanged(this, new M_SUPPLIER_ACCOUNTRowChangeEvent(((M_SUPPLIER_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_SUPPLIER_ACCOUNTRowChanging != null)) {
                    this.M_SUPPLIER_ACCOUNTRowChanging(this, new M_SUPPLIER_ACCOUNTRowChangeEvent(((M_SUPPLIER_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_SUPPLIER_ACCOUNTRowDeleted != null)) {
                    this.M_SUPPLIER_ACCOUNTRowDeleted(this, new M_SUPPLIER_ACCOUNTRowChangeEvent(((M_SUPPLIER_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_SUPPLIER_ACCOUNTRowDeleting != null)) {
                    this.M_SUPPLIER_ACCOUNTRowDeleting(this, new M_SUPPLIER_ACCOUNTRowChangeEvent(((M_SUPPLIER_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_SUPPLIER_ACCOUNTRow(M_SUPPLIER_ACCOUNTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_SUPPLIER_ACCOUNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class M_USERDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnUSER_NAME;
            
            private System.Data.DataColumn columnUSER_PASSWORD;
            
            private System.Data.DataColumn columnUSER_STATUS;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_USERDataTable() {
                this.TableName = "M_USER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_USERDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected M_USERDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USER_PASSWORDColumn {
                get {
                    return this.columnUSER_PASSWORD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USER_STATUSColumn {
                get {
                    return this.columnUSER_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_USERRow this[int index] {
                get {
                    return ((M_USERRow)(this.Rows[index]));
                }
            }
            
            public event M_USERRowChangeEventHandler M_USERRowChanging;
            
            public event M_USERRowChangeEventHandler M_USERRowChanged;
            
            public event M_USERRowChangeEventHandler M_USERRowDeleting;
            
            public event M_USERRowChangeEventHandler M_USERRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddM_USERRow(M_USERRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_USERRow AddM_USERRow(string USER_NAME, string USER_PASSWORD, bool USER_STATUS, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                M_USERRow rowM_USERRow = ((M_USERRow)(this.NewRow()));
                rowM_USERRow.ItemArray = new object[] {
                        USER_NAME,
                        USER_PASSWORD,
                        USER_STATUS,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowM_USERRow);
                return rowM_USERRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_USERRow FindByUSER_NAME(string USER_NAME) {
                return ((M_USERRow)(this.Rows.Find(new object[] {
                            USER_NAME})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                M_USERDataTable cln = ((M_USERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new M_USERDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUSER_NAME = base.Columns["USER_NAME"];
                this.columnUSER_PASSWORD = base.Columns["USER_PASSWORD"];
                this.columnUSER_STATUS = base.Columns["USER_STATUS"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUSER_NAME = new System.Data.DataColumn("USER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.columnUSER_PASSWORD = new System.Data.DataColumn("USER_PASSWORD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_PASSWORD);
                this.columnUSER_STATUS = new System.Data.DataColumn("USER_STATUS", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_STATUS);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnUSER_NAME}, true));
                this.columnUSER_NAME.AllowDBNull = false;
                this.columnUSER_NAME.Unique = true;
                this.columnUSER_NAME.MaxLength = 20;
                this.columnUSER_PASSWORD.MaxLength = 100;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_USERRow NewM_USERRow() {
                return ((M_USERRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new M_USERRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(M_USERRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.M_USERRowChanged != null)) {
                    this.M_USERRowChanged(this, new M_USERRowChangeEvent(((M_USERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.M_USERRowChanging != null)) {
                    this.M_USERRowChanging(this, new M_USERRowChangeEvent(((M_USERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.M_USERRowDeleted != null)) {
                    this.M_USERRowDeleted(this, new M_USERRowChangeEvent(((M_USERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.M_USERRowDeleting != null)) {
                    this.M_USERRowDeleting(this, new M_USERRowChangeEvent(((M_USERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveM_USERRow(M_USERRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "M_USERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_APOTEK_SETTINGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnDEFAULT_PIUTANG_CREDIT_LONG;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_APOTEK_SETTINGDataTable() {
                this.TableName = "T_APOTEK_SETTING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_APOTEK_SETTINGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_APOTEK_SETTINGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEFAULT_PIUTANG_CREDIT_LONGColumn {
                get {
                    return this.columnDEFAULT_PIUTANG_CREDIT_LONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_APOTEK_SETTINGRow this[int index] {
                get {
                    return ((T_APOTEK_SETTINGRow)(this.Rows[index]));
                }
            }
            
            public event T_APOTEK_SETTINGRowChangeEventHandler T_APOTEK_SETTINGRowChanging;
            
            public event T_APOTEK_SETTINGRowChangeEventHandler T_APOTEK_SETTINGRowChanged;
            
            public event T_APOTEK_SETTINGRowChangeEventHandler T_APOTEK_SETTINGRowDeleting;
            
            public event T_APOTEK_SETTINGRowChangeEventHandler T_APOTEK_SETTINGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_APOTEK_SETTINGRow(T_APOTEK_SETTINGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_APOTEK_SETTINGRow AddT_APOTEK_SETTINGRow(string SETTING_ID, int DEFAULT_PIUTANG_CREDIT_LONG, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_APOTEK_SETTINGRow rowT_APOTEK_SETTINGRow = ((T_APOTEK_SETTINGRow)(this.NewRow()));
                rowT_APOTEK_SETTINGRow.ItemArray = new object[] {
                        SETTING_ID,
                        DEFAULT_PIUTANG_CREDIT_LONG,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_APOTEK_SETTINGRow);
                return rowT_APOTEK_SETTINGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_APOTEK_SETTINGRow FindBySETTING_ID(string SETTING_ID) {
                return ((T_APOTEK_SETTINGRow)(this.Rows.Find(new object[] {
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_APOTEK_SETTINGDataTable cln = ((T_APOTEK_SETTINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_APOTEK_SETTINGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnDEFAULT_PIUTANG_CREDIT_LONG = base.Columns["DEFAULT_PIUTANG_CREDIT_LONG"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnDEFAULT_PIUTANG_CREDIT_LONG = new System.Data.DataColumn("DEFAULT_PIUTANG_CREDIT_LONG", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_PIUTANG_CREDIT_LONG);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSETTING_ID}, true));
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.Unique = true;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_APOTEK_SETTINGRow NewT_APOTEK_SETTINGRow() {
                return ((T_APOTEK_SETTINGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_APOTEK_SETTINGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_APOTEK_SETTINGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_APOTEK_SETTINGRowChanged != null)) {
                    this.T_APOTEK_SETTINGRowChanged(this, new T_APOTEK_SETTINGRowChangeEvent(((T_APOTEK_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_APOTEK_SETTINGRowChanging != null)) {
                    this.T_APOTEK_SETTINGRowChanging(this, new T_APOTEK_SETTINGRowChangeEvent(((T_APOTEK_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_APOTEK_SETTINGRowDeleted != null)) {
                    this.T_APOTEK_SETTINGRowDeleted(this, new T_APOTEK_SETTINGRowChangeEvent(((T_APOTEK_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_APOTEK_SETTINGRowDeleting != null)) {
                    this.T_APOTEK_SETTINGRowDeleting(this, new T_APOTEK_SETTINGRowChangeEvent(((T_APOTEK_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_APOTEK_SETTINGRow(T_APOTEK_SETTINGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_APOTEK_SETTINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_BILLIARD_SETTINGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnBILIARD_ITEM_PRICE;
            
            private System.Data.DataColumn columnBILIARD_ITEM_PRICE_VIP;
            
            private System.Data.DataColumn columnBILIARD_ITEM_PRICE_MINI;
            
            private System.Data.DataColumn columnQUIT_TIMEOUT;
            
            private System.Data.DataColumn columnMINIMUM_PLAY;
            
            private System.Data.DataColumn columnFULLFILL_PRICE;
            
            private System.Data.DataColumn columnREFEREE_BONUS;
            
            private System.Data.DataColumn columnBACK_COLOR;
            
            private System.Data.DataColumn columnDESK_BACK_COLOR;
            
            private System.Data.DataColumn columnDESK_FONT_NAME;
            
            private System.Data.DataColumn columnDESK_FONT_SIZE;
            
            private System.Data.DataColumn columnDESK_FONT_BOLD;
            
            private System.Data.DataColumn columnDESK_FONT_ITALIC;
            
            private System.Data.DataColumn columnDESK_FONT_UNDERLINE;
            
            private System.Data.DataColumn columnDESK_FONT_COLOR;
            
            private System.Data.DataColumn columnDESK_WIDTH;
            
            private System.Data.DataColumn columnDESK_HEIGHT;
            
            private System.Data.DataColumn columnDESK_BACK_COLOR1;
            
            private System.Data.DataColumn columnDESK_FONT_NAME1;
            
            private System.Data.DataColumn columnDESK_FONT_SIZE1;
            
            private System.Data.DataColumn columnDESK_FONT_BOLD1;
            
            private System.Data.DataColumn columnDESK_FONT_ITALIC1;
            
            private System.Data.DataColumn columnDESK_FONT_UNDERLINE1;
            
            private System.Data.DataColumn columnDESK_FONT_COLOR1;
            
            private System.Data.DataColumn columnDESK_WIDTH1;
            
            private System.Data.DataColumn columnDESK_HEIGHT1;
            
            private System.Data.DataColumn columnDESK_BACK_COLOR2;
            
            private System.Data.DataColumn columnDESK_FONT_NAME2;
            
            private System.Data.DataColumn columnDESK_FONT_SIZE2;
            
            private System.Data.DataColumn columnDESK_FONT_BOLD2;
            
            private System.Data.DataColumn columnDESK_FONT_ITALIC2;
            
            private System.Data.DataColumn columnDESK_FONT_UNDERLINE2;
            
            private System.Data.DataColumn columnDESK_FONT_COLOR2;
            
            private System.Data.DataColumn columnDESK_WIDTH2;
            
            private System.Data.DataColumn columnDESK_HEIGHT2;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BILLIARD_SETTINGDataTable() {
                this.TableName = "T_BILLIARD_SETTING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_BILLIARD_SETTINGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_BILLIARD_SETTINGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BILIARD_ITEM_PRICEColumn {
                get {
                    return this.columnBILIARD_ITEM_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BILIARD_ITEM_PRICE_VIPColumn {
                get {
                    return this.columnBILIARD_ITEM_PRICE_VIP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BILIARD_ITEM_PRICE_MINIColumn {
                get {
                    return this.columnBILIARD_ITEM_PRICE_MINI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QUIT_TIMEOUTColumn {
                get {
                    return this.columnQUIT_TIMEOUT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MINIMUM_PLAYColumn {
                get {
                    return this.columnMINIMUM_PLAY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FULLFILL_PRICEColumn {
                get {
                    return this.columnFULLFILL_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REFEREE_BONUSColumn {
                get {
                    return this.columnREFEREE_BONUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BACK_COLORColumn {
                get {
                    return this.columnBACK_COLOR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_BACK_COLORColumn {
                get {
                    return this.columnDESK_BACK_COLOR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_NAMEColumn {
                get {
                    return this.columnDESK_FONT_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_SIZEColumn {
                get {
                    return this.columnDESK_FONT_SIZE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_BOLDColumn {
                get {
                    return this.columnDESK_FONT_BOLD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_ITALICColumn {
                get {
                    return this.columnDESK_FONT_ITALIC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_UNDERLINEColumn {
                get {
                    return this.columnDESK_FONT_UNDERLINE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_COLORColumn {
                get {
                    return this.columnDESK_FONT_COLOR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_WIDTHColumn {
                get {
                    return this.columnDESK_WIDTH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_HEIGHTColumn {
                get {
                    return this.columnDESK_HEIGHT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_BACK_COLOR1Column {
                get {
                    return this.columnDESK_BACK_COLOR1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_NAME1Column {
                get {
                    return this.columnDESK_FONT_NAME1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_SIZE1Column {
                get {
                    return this.columnDESK_FONT_SIZE1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_BOLD1Column {
                get {
                    return this.columnDESK_FONT_BOLD1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_ITALIC1Column {
                get {
                    return this.columnDESK_FONT_ITALIC1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_UNDERLINE1Column {
                get {
                    return this.columnDESK_FONT_UNDERLINE1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_COLOR1Column {
                get {
                    return this.columnDESK_FONT_COLOR1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_WIDTH1Column {
                get {
                    return this.columnDESK_WIDTH1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_HEIGHT1Column {
                get {
                    return this.columnDESK_HEIGHT1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_BACK_COLOR2Column {
                get {
                    return this.columnDESK_BACK_COLOR2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_NAME2Column {
                get {
                    return this.columnDESK_FONT_NAME2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_SIZE2Column {
                get {
                    return this.columnDESK_FONT_SIZE2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_BOLD2Column {
                get {
                    return this.columnDESK_FONT_BOLD2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_ITALIC2Column {
                get {
                    return this.columnDESK_FONT_ITALIC2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_UNDERLINE2Column {
                get {
                    return this.columnDESK_FONT_UNDERLINE2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_FONT_COLOR2Column {
                get {
                    return this.columnDESK_FONT_COLOR2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_WIDTH2Column {
                get {
                    return this.columnDESK_WIDTH2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_HEIGHT2Column {
                get {
                    return this.columnDESK_HEIGHT2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BILLIARD_SETTINGRow this[int index] {
                get {
                    return ((T_BILLIARD_SETTINGRow)(this.Rows[index]));
                }
            }
            
            public event T_BILLIARD_SETTINGRowChangeEventHandler T_BILLIARD_SETTINGRowChanging;
            
            public event T_BILLIARD_SETTINGRowChangeEventHandler T_BILLIARD_SETTINGRowChanged;
            
            public event T_BILLIARD_SETTINGRowChangeEventHandler T_BILLIARD_SETTINGRowDeleting;
            
            public event T_BILLIARD_SETTINGRowChangeEventHandler T_BILLIARD_SETTINGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_BILLIARD_SETTINGRow(T_BILLIARD_SETTINGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BILLIARD_SETTINGRow AddT_BILLIARD_SETTINGRow(
                        string SETTING_ID, 
                        decimal BILIARD_ITEM_PRICE, 
                        decimal BILIARD_ITEM_PRICE_VIP, 
                        decimal BILIARD_ITEM_PRICE_MINI, 
                        decimal QUIT_TIMEOUT, 
                        decimal MINIMUM_PLAY, 
                        decimal FULLFILL_PRICE, 
                        decimal REFEREE_BONUS, 
                        int BACK_COLOR, 
                        int DESK_BACK_COLOR, 
                        string DESK_FONT_NAME, 
                        decimal DESK_FONT_SIZE, 
                        bool DESK_FONT_BOLD, 
                        bool DESK_FONT_ITALIC, 
                        bool DESK_FONT_UNDERLINE, 
                        int DESK_FONT_COLOR, 
                        int DESK_WIDTH, 
                        int DESK_HEIGHT, 
                        int DESK_BACK_COLOR1, 
                        string DESK_FONT_NAME1, 
                        decimal DESK_FONT_SIZE1, 
                        bool DESK_FONT_BOLD1, 
                        bool DESK_FONT_ITALIC1, 
                        bool DESK_FONT_UNDERLINE1, 
                        int DESK_FONT_COLOR1, 
                        int DESK_WIDTH1, 
                        int DESK_HEIGHT1, 
                        int DESK_BACK_COLOR2, 
                        string DESK_FONT_NAME2, 
                        decimal DESK_FONT_SIZE2, 
                        bool DESK_FONT_BOLD2, 
                        bool DESK_FONT_ITALIC2, 
                        bool DESK_FONT_UNDERLINE2, 
                        int DESK_FONT_COLOR2, 
                        int DESK_WIDTH2, 
                        int DESK_HEIGHT2, 
                        string MODIFIED_BY, 
                        System.DateTime MODIFIED_DATE) {
                T_BILLIARD_SETTINGRow rowT_BILLIARD_SETTINGRow = ((T_BILLIARD_SETTINGRow)(this.NewRow()));
                rowT_BILLIARD_SETTINGRow.ItemArray = new object[] {
                        SETTING_ID,
                        BILIARD_ITEM_PRICE,
                        BILIARD_ITEM_PRICE_VIP,
                        BILIARD_ITEM_PRICE_MINI,
                        QUIT_TIMEOUT,
                        MINIMUM_PLAY,
                        FULLFILL_PRICE,
                        REFEREE_BONUS,
                        BACK_COLOR,
                        DESK_BACK_COLOR,
                        DESK_FONT_NAME,
                        DESK_FONT_SIZE,
                        DESK_FONT_BOLD,
                        DESK_FONT_ITALIC,
                        DESK_FONT_UNDERLINE,
                        DESK_FONT_COLOR,
                        DESK_WIDTH,
                        DESK_HEIGHT,
                        DESK_BACK_COLOR1,
                        DESK_FONT_NAME1,
                        DESK_FONT_SIZE1,
                        DESK_FONT_BOLD1,
                        DESK_FONT_ITALIC1,
                        DESK_FONT_UNDERLINE1,
                        DESK_FONT_COLOR1,
                        DESK_WIDTH1,
                        DESK_HEIGHT1,
                        DESK_BACK_COLOR2,
                        DESK_FONT_NAME2,
                        DESK_FONT_SIZE2,
                        DESK_FONT_BOLD2,
                        DESK_FONT_ITALIC2,
                        DESK_FONT_UNDERLINE2,
                        DESK_FONT_COLOR2,
                        DESK_WIDTH2,
                        DESK_HEIGHT2,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_BILLIARD_SETTINGRow);
                return rowT_BILLIARD_SETTINGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BILLIARD_SETTINGRow FindBySETTING_ID(string SETTING_ID) {
                return ((T_BILLIARD_SETTINGRow)(this.Rows.Find(new object[] {
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_BILLIARD_SETTINGDataTable cln = ((T_BILLIARD_SETTINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_BILLIARD_SETTINGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnBILIARD_ITEM_PRICE = base.Columns["BILIARD_ITEM_PRICE"];
                this.columnBILIARD_ITEM_PRICE_VIP = base.Columns["BILIARD_ITEM_PRICE_VIP"];
                this.columnBILIARD_ITEM_PRICE_MINI = base.Columns["BILIARD_ITEM_PRICE_MINI"];
                this.columnQUIT_TIMEOUT = base.Columns["QUIT_TIMEOUT"];
                this.columnMINIMUM_PLAY = base.Columns["MINIMUM_PLAY"];
                this.columnFULLFILL_PRICE = base.Columns["FULLFILL_PRICE"];
                this.columnREFEREE_BONUS = base.Columns["REFEREE_BONUS"];
                this.columnBACK_COLOR = base.Columns["BACK_COLOR"];
                this.columnDESK_BACK_COLOR = base.Columns["DESK_BACK_COLOR"];
                this.columnDESK_FONT_NAME = base.Columns["DESK_FONT_NAME"];
                this.columnDESK_FONT_SIZE = base.Columns["DESK_FONT_SIZE"];
                this.columnDESK_FONT_BOLD = base.Columns["DESK_FONT_BOLD"];
                this.columnDESK_FONT_ITALIC = base.Columns["DESK_FONT_ITALIC"];
                this.columnDESK_FONT_UNDERLINE = base.Columns["DESK_FONT_UNDERLINE"];
                this.columnDESK_FONT_COLOR = base.Columns["DESK_FONT_COLOR"];
                this.columnDESK_WIDTH = base.Columns["DESK_WIDTH"];
                this.columnDESK_HEIGHT = base.Columns["DESK_HEIGHT"];
                this.columnDESK_BACK_COLOR1 = base.Columns["DESK_BACK_COLOR1"];
                this.columnDESK_FONT_NAME1 = base.Columns["DESK_FONT_NAME1"];
                this.columnDESK_FONT_SIZE1 = base.Columns["DESK_FONT_SIZE1"];
                this.columnDESK_FONT_BOLD1 = base.Columns["DESK_FONT_BOLD1"];
                this.columnDESK_FONT_ITALIC1 = base.Columns["DESK_FONT_ITALIC1"];
                this.columnDESK_FONT_UNDERLINE1 = base.Columns["DESK_FONT_UNDERLINE1"];
                this.columnDESK_FONT_COLOR1 = base.Columns["DESK_FONT_COLOR1"];
                this.columnDESK_WIDTH1 = base.Columns["DESK_WIDTH1"];
                this.columnDESK_HEIGHT1 = base.Columns["DESK_HEIGHT1"];
                this.columnDESK_BACK_COLOR2 = base.Columns["DESK_BACK_COLOR2"];
                this.columnDESK_FONT_NAME2 = base.Columns["DESK_FONT_NAME2"];
                this.columnDESK_FONT_SIZE2 = base.Columns["DESK_FONT_SIZE2"];
                this.columnDESK_FONT_BOLD2 = base.Columns["DESK_FONT_BOLD2"];
                this.columnDESK_FONT_ITALIC2 = base.Columns["DESK_FONT_ITALIC2"];
                this.columnDESK_FONT_UNDERLINE2 = base.Columns["DESK_FONT_UNDERLINE2"];
                this.columnDESK_FONT_COLOR2 = base.Columns["DESK_FONT_COLOR2"];
                this.columnDESK_WIDTH2 = base.Columns["DESK_WIDTH2"];
                this.columnDESK_HEIGHT2 = base.Columns["DESK_HEIGHT2"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnBILIARD_ITEM_PRICE = new System.Data.DataColumn("BILIARD_ITEM_PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILIARD_ITEM_PRICE);
                this.columnBILIARD_ITEM_PRICE_VIP = new System.Data.DataColumn("BILIARD_ITEM_PRICE_VIP", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILIARD_ITEM_PRICE_VIP);
                this.columnBILIARD_ITEM_PRICE_MINI = new System.Data.DataColumn("BILIARD_ITEM_PRICE_MINI", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILIARD_ITEM_PRICE_MINI);
                this.columnQUIT_TIMEOUT = new System.Data.DataColumn("QUIT_TIMEOUT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUIT_TIMEOUT);
                this.columnMINIMUM_PLAY = new System.Data.DataColumn("MINIMUM_PLAY", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINIMUM_PLAY);
                this.columnFULLFILL_PRICE = new System.Data.DataColumn("FULLFILL_PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFULLFILL_PRICE);
                this.columnREFEREE_BONUS = new System.Data.DataColumn("REFEREE_BONUS", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFEREE_BONUS);
                this.columnBACK_COLOR = new System.Data.DataColumn("BACK_COLOR", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBACK_COLOR);
                this.columnDESK_BACK_COLOR = new System.Data.DataColumn("DESK_BACK_COLOR", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_BACK_COLOR);
                this.columnDESK_FONT_NAME = new System.Data.DataColumn("DESK_FONT_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_NAME);
                this.columnDESK_FONT_SIZE = new System.Data.DataColumn("DESK_FONT_SIZE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_SIZE);
                this.columnDESK_FONT_BOLD = new System.Data.DataColumn("DESK_FONT_BOLD", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_BOLD);
                this.columnDESK_FONT_ITALIC = new System.Data.DataColumn("DESK_FONT_ITALIC", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_ITALIC);
                this.columnDESK_FONT_UNDERLINE = new System.Data.DataColumn("DESK_FONT_UNDERLINE", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_UNDERLINE);
                this.columnDESK_FONT_COLOR = new System.Data.DataColumn("DESK_FONT_COLOR", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_COLOR);
                this.columnDESK_WIDTH = new System.Data.DataColumn("DESK_WIDTH", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_WIDTH);
                this.columnDESK_HEIGHT = new System.Data.DataColumn("DESK_HEIGHT", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_HEIGHT);
                this.columnDESK_BACK_COLOR1 = new System.Data.DataColumn("DESK_BACK_COLOR1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_BACK_COLOR1);
                this.columnDESK_FONT_NAME1 = new System.Data.DataColumn("DESK_FONT_NAME1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_NAME1);
                this.columnDESK_FONT_SIZE1 = new System.Data.DataColumn("DESK_FONT_SIZE1", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_SIZE1);
                this.columnDESK_FONT_BOLD1 = new System.Data.DataColumn("DESK_FONT_BOLD1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_BOLD1);
                this.columnDESK_FONT_ITALIC1 = new System.Data.DataColumn("DESK_FONT_ITALIC1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_ITALIC1);
                this.columnDESK_FONT_UNDERLINE1 = new System.Data.DataColumn("DESK_FONT_UNDERLINE1", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_UNDERLINE1);
                this.columnDESK_FONT_COLOR1 = new System.Data.DataColumn("DESK_FONT_COLOR1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_COLOR1);
                this.columnDESK_WIDTH1 = new System.Data.DataColumn("DESK_WIDTH1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_WIDTH1);
                this.columnDESK_HEIGHT1 = new System.Data.DataColumn("DESK_HEIGHT1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_HEIGHT1);
                this.columnDESK_BACK_COLOR2 = new System.Data.DataColumn("DESK_BACK_COLOR2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_BACK_COLOR2);
                this.columnDESK_FONT_NAME2 = new System.Data.DataColumn("DESK_FONT_NAME2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_NAME2);
                this.columnDESK_FONT_SIZE2 = new System.Data.DataColumn("DESK_FONT_SIZE2", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_SIZE2);
                this.columnDESK_FONT_BOLD2 = new System.Data.DataColumn("DESK_FONT_BOLD2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_BOLD2);
                this.columnDESK_FONT_ITALIC2 = new System.Data.DataColumn("DESK_FONT_ITALIC2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_ITALIC2);
                this.columnDESK_FONT_UNDERLINE2 = new System.Data.DataColumn("DESK_FONT_UNDERLINE2", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_UNDERLINE2);
                this.columnDESK_FONT_COLOR2 = new System.Data.DataColumn("DESK_FONT_COLOR2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_FONT_COLOR2);
                this.columnDESK_WIDTH2 = new System.Data.DataColumn("DESK_WIDTH2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_WIDTH2);
                this.columnDESK_HEIGHT2 = new System.Data.DataColumn("DESK_HEIGHT2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_HEIGHT2);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSETTING_ID}, true));
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.Unique = true;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnDESK_FONT_NAME.MaxLength = 50;
                this.columnDESK_FONT_NAME1.MaxLength = 50;
                this.columnDESK_FONT_NAME2.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BILLIARD_SETTINGRow NewT_BILLIARD_SETTINGRow() {
                return ((T_BILLIARD_SETTINGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_BILLIARD_SETTINGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_BILLIARD_SETTINGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_BILLIARD_SETTINGRowChanged != null)) {
                    this.T_BILLIARD_SETTINGRowChanged(this, new T_BILLIARD_SETTINGRowChangeEvent(((T_BILLIARD_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_BILLIARD_SETTINGRowChanging != null)) {
                    this.T_BILLIARD_SETTINGRowChanging(this, new T_BILLIARD_SETTINGRowChangeEvent(((T_BILLIARD_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_BILLIARD_SETTINGRowDeleted != null)) {
                    this.T_BILLIARD_SETTINGRowDeleted(this, new T_BILLIARD_SETTINGRowChangeEvent(((T_BILLIARD_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_BILLIARD_SETTINGRowDeleting != null)) {
                    this.T_BILLIARD_SETTINGRowDeleting(this, new T_BILLIARD_SETTINGRowChangeEvent(((T_BILLIARD_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_BILLIARD_SETTINGRow(T_BILLIARD_SETTINGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_BILLIARD_SETTINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_CAFE_SETTINGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnEXPORTED_DIR;
            
            private System.Data.DataColumn columnDISCOUNT_PASSWORD;
            
            private System.Data.DataColumn columnTELP_NO_SARAN_KRITIK;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CAFE_SETTINGDataTable() {
                this.TableName = "T_CAFE_SETTING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CAFE_SETTINGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_CAFE_SETTINGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EXPORTED_DIRColumn {
                get {
                    return this.columnEXPORTED_DIR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISCOUNT_PASSWORDColumn {
                get {
                    return this.columnDISCOUNT_PASSWORD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELP_NO_SARAN_KRITIKColumn {
                get {
                    return this.columnTELP_NO_SARAN_KRITIK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CAFE_SETTINGRow this[int index] {
                get {
                    return ((T_CAFE_SETTINGRow)(this.Rows[index]));
                }
            }
            
            public event T_CAFE_SETTINGRowChangeEventHandler T_CAFE_SETTINGRowChanging;
            
            public event T_CAFE_SETTINGRowChangeEventHandler T_CAFE_SETTINGRowChanged;
            
            public event T_CAFE_SETTINGRowChangeEventHandler T_CAFE_SETTINGRowDeleting;
            
            public event T_CAFE_SETTINGRowChangeEventHandler T_CAFE_SETTINGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_CAFE_SETTINGRow(T_CAFE_SETTINGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CAFE_SETTINGRow AddT_CAFE_SETTINGRow(string SETTING_ID, string EXPORTED_DIR, string DISCOUNT_PASSWORD, string TELP_NO_SARAN_KRITIK, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_CAFE_SETTINGRow rowT_CAFE_SETTINGRow = ((T_CAFE_SETTINGRow)(this.NewRow()));
                rowT_CAFE_SETTINGRow.ItemArray = new object[] {
                        SETTING_ID,
                        EXPORTED_DIR,
                        DISCOUNT_PASSWORD,
                        TELP_NO_SARAN_KRITIK,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_CAFE_SETTINGRow);
                return rowT_CAFE_SETTINGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CAFE_SETTINGRow FindBySETTING_ID(string SETTING_ID) {
                return ((T_CAFE_SETTINGRow)(this.Rows.Find(new object[] {
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_CAFE_SETTINGDataTable cln = ((T_CAFE_SETTINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_CAFE_SETTINGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnEXPORTED_DIR = base.Columns["EXPORTED_DIR"];
                this.columnDISCOUNT_PASSWORD = base.Columns["DISCOUNT_PASSWORD"];
                this.columnTELP_NO_SARAN_KRITIK = base.Columns["TELP_NO_SARAN_KRITIK"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnEXPORTED_DIR = new System.Data.DataColumn("EXPORTED_DIR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPORTED_DIR);
                this.columnDISCOUNT_PASSWORD = new System.Data.DataColumn("DISCOUNT_PASSWORD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT_PASSWORD);
                this.columnTELP_NO_SARAN_KRITIK = new System.Data.DataColumn("TELP_NO_SARAN_KRITIK", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTELP_NO_SARAN_KRITIK);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSETTING_ID}, true));
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.Unique = true;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnEXPORTED_DIR.MaxLength = 100;
                this.columnDISCOUNT_PASSWORD.MaxLength = 50;
                this.columnTELP_NO_SARAN_KRITIK.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CAFE_SETTINGRow NewT_CAFE_SETTINGRow() {
                return ((T_CAFE_SETTINGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_CAFE_SETTINGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_CAFE_SETTINGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_CAFE_SETTINGRowChanged != null)) {
                    this.T_CAFE_SETTINGRowChanged(this, new T_CAFE_SETTINGRowChangeEvent(((T_CAFE_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_CAFE_SETTINGRowChanging != null)) {
                    this.T_CAFE_SETTINGRowChanging(this, new T_CAFE_SETTINGRowChangeEvent(((T_CAFE_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_CAFE_SETTINGRowDeleted != null)) {
                    this.T_CAFE_SETTINGRowDeleted(this, new T_CAFE_SETTINGRowChangeEvent(((T_CAFE_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_CAFE_SETTINGRowDeleting != null)) {
                    this.T_CAFE_SETTINGRowDeleting(this, new T_CAFE_SETTINGRowChangeEvent(((T_CAFE_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_CAFE_SETTINGRow(T_CAFE_SETTINGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_CAFE_SETTINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_COMMISSIONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCOMMISSION_ID;
            
            private System.Data.DataColumn columnTRANSACTION_ID;
            
            private System.Data.DataColumn columnTRANSACTION_FACTUR_NO;
            
            private System.Data.DataColumn columnSHARE_TO;
            
            private System.Data.DataColumn columnCOMMISSION_PIC;
            
            private System.Data.DataColumn columnCOMMISSION_VALUE;
            
            private System.Data.DataColumn columnCOMMISSION_DATE;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_COMMISSIONDataTable() {
                this.TableName = "T_COMMISSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_COMMISSIONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_COMMISSIONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_IDColumn {
                get {
                    return this.columnCOMMISSION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_IDColumn {
                get {
                    return this.columnTRANSACTION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_FACTUR_NOColumn {
                get {
                    return this.columnTRANSACTION_FACTUR_NO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SHARE_TOColumn {
                get {
                    return this.columnSHARE_TO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_PICColumn {
                get {
                    return this.columnCOMMISSION_PIC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_VALUEColumn {
                get {
                    return this.columnCOMMISSION_VALUE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSION_DATEColumn {
                get {
                    return this.columnCOMMISSION_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_COMMISSIONRow this[int index] {
                get {
                    return ((T_COMMISSIONRow)(this.Rows[index]));
                }
            }
            
            public event T_COMMISSIONRowChangeEventHandler T_COMMISSIONRowChanging;
            
            public event T_COMMISSIONRowChangeEventHandler T_COMMISSIONRowChanged;
            
            public event T_COMMISSIONRowChangeEventHandler T_COMMISSIONRowDeleting;
            
            public event T_COMMISSIONRowChangeEventHandler T_COMMISSIONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_COMMISSIONRow(T_COMMISSIONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_COMMISSIONRow AddT_COMMISSIONRow(decimal TRANSACTION_ID, string TRANSACTION_FACTUR_NO, string SHARE_TO, string COMMISSION_PIC, decimal COMMISSION_VALUE, System.DateTime COMMISSION_DATE, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_COMMISSIONRow rowT_COMMISSIONRow = ((T_COMMISSIONRow)(this.NewRow()));
                rowT_COMMISSIONRow.ItemArray = new object[] {
                        null,
                        TRANSACTION_ID,
                        TRANSACTION_FACTUR_NO,
                        SHARE_TO,
                        COMMISSION_PIC,
                        COMMISSION_VALUE,
                        COMMISSION_DATE,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_COMMISSIONRow);
                return rowT_COMMISSIONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_COMMISSIONRow FindByCOMMISSION_ID(decimal COMMISSION_ID) {
                return ((T_COMMISSIONRow)(this.Rows.Find(new object[] {
                            COMMISSION_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_COMMISSIONDataTable cln = ((T_COMMISSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_COMMISSIONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOMMISSION_ID = base.Columns["COMMISSION_ID"];
                this.columnTRANSACTION_ID = base.Columns["TRANSACTION_ID"];
                this.columnTRANSACTION_FACTUR_NO = base.Columns["TRANSACTION_FACTUR_NO"];
                this.columnSHARE_TO = base.Columns["SHARE_TO"];
                this.columnCOMMISSION_PIC = base.Columns["COMMISSION_PIC"];
                this.columnCOMMISSION_VALUE = base.Columns["COMMISSION_VALUE"];
                this.columnCOMMISSION_DATE = base.Columns["COMMISSION_DATE"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOMMISSION_ID = new System.Data.DataColumn("COMMISSION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_ID);
                this.columnTRANSACTION_ID = new System.Data.DataColumn("TRANSACTION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_ID);
                this.columnTRANSACTION_FACTUR_NO = new System.Data.DataColumn("TRANSACTION_FACTUR_NO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_FACTUR_NO);
                this.columnSHARE_TO = new System.Data.DataColumn("SHARE_TO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_TO);
                this.columnCOMMISSION_PIC = new System.Data.DataColumn("COMMISSION_PIC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_PIC);
                this.columnCOMMISSION_VALUE = new System.Data.DataColumn("COMMISSION_VALUE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_VALUE);
                this.columnCOMMISSION_DATE = new System.Data.DataColumn("COMMISSION_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION_DATE);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnCOMMISSION_ID}, true));
                this.columnCOMMISSION_ID.AutoIncrement = true;
                this.columnCOMMISSION_ID.AllowDBNull = false;
                this.columnCOMMISSION_ID.ReadOnly = true;
                this.columnCOMMISSION_ID.Unique = true;
                this.columnTRANSACTION_FACTUR_NO.MaxLength = 50;
                this.columnSHARE_TO.MaxLength = 50;
                this.columnCOMMISSION_PIC.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_COMMISSIONRow NewT_COMMISSIONRow() {
                return ((T_COMMISSIONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_COMMISSIONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_COMMISSIONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_COMMISSIONRowChanged != null)) {
                    this.T_COMMISSIONRowChanged(this, new T_COMMISSIONRowChangeEvent(((T_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_COMMISSIONRowChanging != null)) {
                    this.T_COMMISSIONRowChanging(this, new T_COMMISSIONRowChangeEvent(((T_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_COMMISSIONRowDeleted != null)) {
                    this.T_COMMISSIONRowDeleted(this, new T_COMMISSIONRowChangeEvent(((T_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_COMMISSIONRowDeleting != null)) {
                    this.T_COMMISSIONRowDeleting(this, new T_COMMISSIONRowChangeEvent(((T_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_COMMISSIONRow(T_COMMISSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_COMMISSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_CONTRACTOR_SETTINGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnGIRO_DELETE_PIN;
            
            private System.Data.DataColumn columnPO_DELETE_PIN;
            
            private System.Data.DataColumn columnLOGO_IMAGE;
            
            private System.Data.DataColumn columnCOMPANY_NAME_FONT;
            
            private System.Data.DataColumn columnCOMPANY_NAME_COLOUR;
            
            private System.Data.DataColumn columnCOMPANY_NAME_FONT_HEIGHT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTRACTOR_SETTINGDataTable() {
                this.TableName = "T_CONTRACTOR_SETTING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CONTRACTOR_SETTINGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_CONTRACTOR_SETTINGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_DELETE_PINColumn {
                get {
                    return this.columnGIRO_DELETE_PIN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PO_DELETE_PINColumn {
                get {
                    return this.columnPO_DELETE_PIN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOGO_IMAGEColumn {
                get {
                    return this.columnLOGO_IMAGE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_NAME_FONTColumn {
                get {
                    return this.columnCOMPANY_NAME_FONT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_NAME_COLOURColumn {
                get {
                    return this.columnCOMPANY_NAME_COLOUR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPANY_NAME_FONT_HEIGHTColumn {
                get {
                    return this.columnCOMPANY_NAME_FONT_HEIGHT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTRACTOR_SETTINGRow this[int index] {
                get {
                    return ((T_CONTRACTOR_SETTINGRow)(this.Rows[index]));
                }
            }
            
            public event T_CONTRACTOR_SETTINGRowChangeEventHandler T_CONTRACTOR_SETTINGRowChanging;
            
            public event T_CONTRACTOR_SETTINGRowChangeEventHandler T_CONTRACTOR_SETTINGRowChanged;
            
            public event T_CONTRACTOR_SETTINGRowChangeEventHandler T_CONTRACTOR_SETTINGRowDeleting;
            
            public event T_CONTRACTOR_SETTINGRowChangeEventHandler T_CONTRACTOR_SETTINGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_CONTRACTOR_SETTINGRow(T_CONTRACTOR_SETTINGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTRACTOR_SETTINGRow AddT_CONTRACTOR_SETTINGRow(string SETTING_ID, string GIRO_DELETE_PIN, string PO_DELETE_PIN, byte[] LOGO_IMAGE, string COMPANY_NAME_FONT, string COMPANY_NAME_COLOUR, int COMPANY_NAME_FONT_HEIGHT) {
                T_CONTRACTOR_SETTINGRow rowT_CONTRACTOR_SETTINGRow = ((T_CONTRACTOR_SETTINGRow)(this.NewRow()));
                rowT_CONTRACTOR_SETTINGRow.ItemArray = new object[] {
                        SETTING_ID,
                        GIRO_DELETE_PIN,
                        PO_DELETE_PIN,
                        LOGO_IMAGE,
                        COMPANY_NAME_FONT,
                        COMPANY_NAME_COLOUR,
                        COMPANY_NAME_FONT_HEIGHT};
                this.Rows.Add(rowT_CONTRACTOR_SETTINGRow);
                return rowT_CONTRACTOR_SETTINGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTRACTOR_SETTINGRow FindBySETTING_ID(string SETTING_ID) {
                return ((T_CONTRACTOR_SETTINGRow)(this.Rows.Find(new object[] {
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_CONTRACTOR_SETTINGDataTable cln = ((T_CONTRACTOR_SETTINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_CONTRACTOR_SETTINGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnGIRO_DELETE_PIN = base.Columns["GIRO_DELETE_PIN"];
                this.columnPO_DELETE_PIN = base.Columns["PO_DELETE_PIN"];
                this.columnLOGO_IMAGE = base.Columns["LOGO_IMAGE"];
                this.columnCOMPANY_NAME_FONT = base.Columns["COMPANY_NAME_FONT"];
                this.columnCOMPANY_NAME_COLOUR = base.Columns["COMPANY_NAME_COLOUR"];
                this.columnCOMPANY_NAME_FONT_HEIGHT = base.Columns["COMPANY_NAME_FONT_HEIGHT"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnGIRO_DELETE_PIN = new System.Data.DataColumn("GIRO_DELETE_PIN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_DELETE_PIN);
                this.columnPO_DELETE_PIN = new System.Data.DataColumn("PO_DELETE_PIN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPO_DELETE_PIN);
                this.columnLOGO_IMAGE = new System.Data.DataColumn("LOGO_IMAGE", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGO_IMAGE);
                this.columnCOMPANY_NAME_FONT = new System.Data.DataColumn("COMPANY_NAME_FONT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_NAME_FONT);
                this.columnCOMPANY_NAME_COLOUR = new System.Data.DataColumn("COMPANY_NAME_COLOUR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_NAME_COLOUR);
                this.columnCOMPANY_NAME_FONT_HEIGHT = new System.Data.DataColumn("COMPANY_NAME_FONT_HEIGHT", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_NAME_FONT_HEIGHT);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSETTING_ID}, true));
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.Unique = true;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnGIRO_DELETE_PIN.MaxLength = 50;
                this.columnPO_DELETE_PIN.MaxLength = 50;
                this.columnCOMPANY_NAME_FONT.MaxLength = 50;
                this.columnCOMPANY_NAME_COLOUR.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTRACTOR_SETTINGRow NewT_CONTRACTOR_SETTINGRow() {
                return ((T_CONTRACTOR_SETTINGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_CONTRACTOR_SETTINGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_CONTRACTOR_SETTINGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_CONTRACTOR_SETTINGRowChanged != null)) {
                    this.T_CONTRACTOR_SETTINGRowChanged(this, new T_CONTRACTOR_SETTINGRowChangeEvent(((T_CONTRACTOR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_CONTRACTOR_SETTINGRowChanging != null)) {
                    this.T_CONTRACTOR_SETTINGRowChanging(this, new T_CONTRACTOR_SETTINGRowChangeEvent(((T_CONTRACTOR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_CONTRACTOR_SETTINGRowDeleted != null)) {
                    this.T_CONTRACTOR_SETTINGRowDeleted(this, new T_CONTRACTOR_SETTINGRowChangeEvent(((T_CONTRACTOR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_CONTRACTOR_SETTINGRowDeleting != null)) {
                    this.T_CONTRACTOR_SETTINGRowDeleting(this, new T_CONTRACTOR_SETTINGRowChangeEvent(((T_CONTRACTOR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_CONTRACTOR_SETTINGRow(T_CONTRACTOR_SETTINGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_CONTRACTOR_SETTINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_DEFAULT_ACCOUNTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDEFAULT_ACCOUNT_ID;
            
            private System.Data.DataColumn columnTRANSACTION_TYPE;
            
            private System.Data.DataColumn columnTRANSACTION_PAYMENT;
            
            private System.Data.DataColumn columnDEBET_SUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnKREDIT_SUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnDESCRIPTION;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DEFAULT_ACCOUNTDataTable() {
                this.TableName = "T_DEFAULT_ACCOUNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DEFAULT_ACCOUNTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_DEFAULT_ACCOUNTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEFAULT_ACCOUNT_IDColumn {
                get {
                    return this.columnDEFAULT_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_TYPEColumn {
                get {
                    return this.columnTRANSACTION_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_PAYMENTColumn {
                get {
                    return this.columnTRANSACTION_PAYMENT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEBET_SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnDEBET_SUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KREDIT_SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnKREDIT_SUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DEFAULT_ACCOUNTRow this[int index] {
                get {
                    return ((T_DEFAULT_ACCOUNTRow)(this.Rows[index]));
                }
            }
            
            public event T_DEFAULT_ACCOUNTRowChangeEventHandler T_DEFAULT_ACCOUNTRowChanging;
            
            public event T_DEFAULT_ACCOUNTRowChangeEventHandler T_DEFAULT_ACCOUNTRowChanged;
            
            public event T_DEFAULT_ACCOUNTRowChangeEventHandler T_DEFAULT_ACCOUNTRowDeleting;
            
            public event T_DEFAULT_ACCOUNTRowChangeEventHandler T_DEFAULT_ACCOUNTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_DEFAULT_ACCOUNTRow(T_DEFAULT_ACCOUNTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DEFAULT_ACCOUNTRow AddT_DEFAULT_ACCOUNTRow(string TRANSACTION_TYPE, string TRANSACTION_PAYMENT, string DEBET_SUB_ACCOUNT_ID, string KREDIT_SUB_ACCOUNT_ID, string DESCRIPTION, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_DEFAULT_ACCOUNTRow rowT_DEFAULT_ACCOUNTRow = ((T_DEFAULT_ACCOUNTRow)(this.NewRow()));
                rowT_DEFAULT_ACCOUNTRow.ItemArray = new object[] {
                        null,
                        TRANSACTION_TYPE,
                        TRANSACTION_PAYMENT,
                        DEBET_SUB_ACCOUNT_ID,
                        KREDIT_SUB_ACCOUNT_ID,
                        DESCRIPTION,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_DEFAULT_ACCOUNTRow);
                return rowT_DEFAULT_ACCOUNTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DEFAULT_ACCOUNTRow FindByDEFAULT_ACCOUNT_ID(int DEFAULT_ACCOUNT_ID) {
                return ((T_DEFAULT_ACCOUNTRow)(this.Rows.Find(new object[] {
                            DEFAULT_ACCOUNT_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_DEFAULT_ACCOUNTDataTable cln = ((T_DEFAULT_ACCOUNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_DEFAULT_ACCOUNTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDEFAULT_ACCOUNT_ID = base.Columns["DEFAULT_ACCOUNT_ID"];
                this.columnTRANSACTION_TYPE = base.Columns["TRANSACTION_TYPE"];
                this.columnTRANSACTION_PAYMENT = base.Columns["TRANSACTION_PAYMENT"];
                this.columnDEBET_SUB_ACCOUNT_ID = base.Columns["DEBET_SUB_ACCOUNT_ID"];
                this.columnKREDIT_SUB_ACCOUNT_ID = base.Columns["KREDIT_SUB_ACCOUNT_ID"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDEFAULT_ACCOUNT_ID = new System.Data.DataColumn("DEFAULT_ACCOUNT_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_ACCOUNT_ID);
                this.columnTRANSACTION_TYPE = new System.Data.DataColumn("TRANSACTION_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_TYPE);
                this.columnTRANSACTION_PAYMENT = new System.Data.DataColumn("TRANSACTION_PAYMENT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_PAYMENT);
                this.columnDEBET_SUB_ACCOUNT_ID = new System.Data.DataColumn("DEBET_SUB_ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEBET_SUB_ACCOUNT_ID);
                this.columnKREDIT_SUB_ACCOUNT_ID = new System.Data.DataColumn("KREDIT_SUB_ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKREDIT_SUB_ACCOUNT_ID);
                this.columnDESCRIPTION = new System.Data.DataColumn("DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnDEFAULT_ACCOUNT_ID}, true));
                this.columnDEFAULT_ACCOUNT_ID.AutoIncrement = true;
                this.columnDEFAULT_ACCOUNT_ID.AllowDBNull = false;
                this.columnDEFAULT_ACCOUNT_ID.ReadOnly = true;
                this.columnDEFAULT_ACCOUNT_ID.Unique = true;
                this.columnTRANSACTION_TYPE.MaxLength = 50;
                this.columnTRANSACTION_PAYMENT.MaxLength = 50;
                this.columnDEBET_SUB_ACCOUNT_ID.MaxLength = 50;
                this.columnKREDIT_SUB_ACCOUNT_ID.MaxLength = 50;
                this.columnDESCRIPTION.MaxLength = 2147483647;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DEFAULT_ACCOUNTRow NewT_DEFAULT_ACCOUNTRow() {
                return ((T_DEFAULT_ACCOUNTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_DEFAULT_ACCOUNTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_DEFAULT_ACCOUNTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DEFAULT_ACCOUNTRowChanged != null)) {
                    this.T_DEFAULT_ACCOUNTRowChanged(this, new T_DEFAULT_ACCOUNTRowChangeEvent(((T_DEFAULT_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DEFAULT_ACCOUNTRowChanging != null)) {
                    this.T_DEFAULT_ACCOUNTRowChanging(this, new T_DEFAULT_ACCOUNTRowChangeEvent(((T_DEFAULT_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DEFAULT_ACCOUNTRowDeleted != null)) {
                    this.T_DEFAULT_ACCOUNTRowDeleted(this, new T_DEFAULT_ACCOUNTRowChangeEvent(((T_DEFAULT_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DEFAULT_ACCOUNTRowDeleting != null)) {
                    this.T_DEFAULT_ACCOUNTRowDeleting(this, new T_DEFAULT_ACCOUNTRowChangeEvent(((T_DEFAULT_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_DEFAULT_ACCOUNTRow(T_DEFAULT_ACCOUNTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_DEFAULT_ACCOUNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_DESKDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnT_DESK_ID;
            
            private System.Data.DataColumn columnDESK_ID;
            
            private System.Data.DataColumn columnDESK_BOOKING_DATE;
            
            private System.Data.DataColumn columnDESK_IN_DATE;
            
            private System.Data.DataColumn columnDESK_OUT_DATE;
            
            private System.Data.DataColumn columnDESK_CUST_ID;
            
            private System.Data.DataColumn columnDESK_LONG_PLAY_MINUTES;
            
            private System.Data.DataColumn columnDESK_STATUS;
            
            private System.Data.DataColumn columnDESK_TRANSACTION_ID;
            
            private System.Data.DataColumn columnDESK_GRAND_TOTAL;
            
            private System.Data.DataColumn columnEMPLOYEE_ID;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DESKDataTable() {
                this.TableName = "T_DESK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DESKDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_DESKDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn T_DESK_IDColumn {
                get {
                    return this.columnT_DESK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_IDColumn {
                get {
                    return this.columnDESK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_BOOKING_DATEColumn {
                get {
                    return this.columnDESK_BOOKING_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_IN_DATEColumn {
                get {
                    return this.columnDESK_IN_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_OUT_DATEColumn {
                get {
                    return this.columnDESK_OUT_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_CUST_IDColumn {
                get {
                    return this.columnDESK_CUST_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_LONG_PLAY_MINUTESColumn {
                get {
                    return this.columnDESK_LONG_PLAY_MINUTES;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_STATUSColumn {
                get {
                    return this.columnDESK_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_TRANSACTION_IDColumn {
                get {
                    return this.columnDESK_TRANSACTION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_GRAND_TOTALColumn {
                get {
                    return this.columnDESK_GRAND_TOTAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_IDColumn {
                get {
                    return this.columnEMPLOYEE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DESKRow this[int index] {
                get {
                    return ((T_DESKRow)(this.Rows[index]));
                }
            }
            
            public event T_DESKRowChangeEventHandler T_DESKRowChanging;
            
            public event T_DESKRowChangeEventHandler T_DESKRowChanged;
            
            public event T_DESKRowChangeEventHandler T_DESKRowDeleting;
            
            public event T_DESKRowChangeEventHandler T_DESKRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_DESKRow(T_DESKRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DESKRow AddT_DESKRow(string DESK_ID, System.DateTime DESK_BOOKING_DATE, System.DateTime DESK_IN_DATE, System.DateTime DESK_OUT_DATE, string DESK_CUST_ID, decimal DESK_LONG_PLAY_MINUTES, string DESK_STATUS, decimal DESK_TRANSACTION_ID, decimal DESK_GRAND_TOTAL, string EMPLOYEE_ID, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_DESKRow rowT_DESKRow = ((T_DESKRow)(this.NewRow()));
                rowT_DESKRow.ItemArray = new object[] {
                        null,
                        DESK_ID,
                        DESK_BOOKING_DATE,
                        DESK_IN_DATE,
                        DESK_OUT_DATE,
                        DESK_CUST_ID,
                        DESK_LONG_PLAY_MINUTES,
                        DESK_STATUS,
                        DESK_TRANSACTION_ID,
                        DESK_GRAND_TOTAL,
                        EMPLOYEE_ID,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_DESKRow);
                return rowT_DESKRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DESKRow FindByT_DESK_ID(decimal T_DESK_ID) {
                return ((T_DESKRow)(this.Rows.Find(new object[] {
                            T_DESK_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_DESKDataTable cln = ((T_DESKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_DESKDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnT_DESK_ID = base.Columns["T_DESK_ID"];
                this.columnDESK_ID = base.Columns["DESK_ID"];
                this.columnDESK_BOOKING_DATE = base.Columns["DESK_BOOKING_DATE"];
                this.columnDESK_IN_DATE = base.Columns["DESK_IN_DATE"];
                this.columnDESK_OUT_DATE = base.Columns["DESK_OUT_DATE"];
                this.columnDESK_CUST_ID = base.Columns["DESK_CUST_ID"];
                this.columnDESK_LONG_PLAY_MINUTES = base.Columns["DESK_LONG_PLAY_MINUTES"];
                this.columnDESK_STATUS = base.Columns["DESK_STATUS"];
                this.columnDESK_TRANSACTION_ID = base.Columns["DESK_TRANSACTION_ID"];
                this.columnDESK_GRAND_TOTAL = base.Columns["DESK_GRAND_TOTAL"];
                this.columnEMPLOYEE_ID = base.Columns["EMPLOYEE_ID"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnT_DESK_ID = new System.Data.DataColumn("T_DESK_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnT_DESK_ID);
                this.columnDESK_ID = new System.Data.DataColumn("DESK_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_ID);
                this.columnDESK_BOOKING_DATE = new System.Data.DataColumn("DESK_BOOKING_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_BOOKING_DATE);
                this.columnDESK_IN_DATE = new System.Data.DataColumn("DESK_IN_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_IN_DATE);
                this.columnDESK_OUT_DATE = new System.Data.DataColumn("DESK_OUT_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_OUT_DATE);
                this.columnDESK_CUST_ID = new System.Data.DataColumn("DESK_CUST_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_CUST_ID);
                this.columnDESK_LONG_PLAY_MINUTES = new System.Data.DataColumn("DESK_LONG_PLAY_MINUTES", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_LONG_PLAY_MINUTES);
                this.columnDESK_STATUS = new System.Data.DataColumn("DESK_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_STATUS);
                this.columnDESK_TRANSACTION_ID = new System.Data.DataColumn("DESK_TRANSACTION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_TRANSACTION_ID);
                this.columnDESK_GRAND_TOTAL = new System.Data.DataColumn("DESK_GRAND_TOTAL", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_GRAND_TOTAL);
                this.columnEMPLOYEE_ID = new System.Data.DataColumn("EMPLOYEE_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ID);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnT_DESK_ID}, true));
                this.columnT_DESK_ID.AutoIncrement = true;
                this.columnT_DESK_ID.AllowDBNull = false;
                this.columnT_DESK_ID.ReadOnly = true;
                this.columnT_DESK_ID.Unique = true;
                this.columnDESK_ID.MaxLength = 20;
                this.columnDESK_CUST_ID.MaxLength = 20;
                this.columnDESK_STATUS.MaxLength = 50;
                this.columnEMPLOYEE_ID.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DESKRow NewT_DESKRow() {
                return ((T_DESKRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_DESKRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_DESKRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DESKRowChanged != null)) {
                    this.T_DESKRowChanged(this, new T_DESKRowChangeEvent(((T_DESKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DESKRowChanging != null)) {
                    this.T_DESKRowChanging(this, new T_DESKRowChangeEvent(((T_DESKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DESKRowDeleted != null)) {
                    this.T_DESKRowDeleted(this, new T_DESKRowChangeEvent(((T_DESKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DESKRowDeleting != null)) {
                    this.T_DESKRowDeleting(this, new T_DESKRowChangeEvent(((T_DESKRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_DESKRow(T_DESKRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_DESKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_GIRODataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnGIRO_ID;
            
            private System.Data.DataColumn columnCURRENCY_ID;
            
            private System.Data.DataColumn columnBANK_ID;
            
            private System.Data.DataColumn columnGIRO_NO;
            
            private System.Data.DataColumn columnPI_HUTANG_ID;
            
            private System.Data.DataColumn columnGIRO_OUT_DATE;
            
            private System.Data.DataColumn columnGIRO_MATURITY_DATE;
            
            private System.Data.DataColumn columnGIRO_STATUS;
            
            private System.Data.DataColumn columnGIRO_TO;
            
            private System.Data.DataColumn columnGIRO_FROM;
            
            private System.Data.DataColumn columnGIRO_CAIR_DATE;
            
            private System.Data.DataColumn columnGIRO_AMMOUNT;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GIRODataTable() {
                this.TableName = "T_GIRO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_GIRODataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_GIRODataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_IDColumn {
                get {
                    return this.columnGIRO_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CURRENCY_IDColumn {
                get {
                    return this.columnCURRENCY_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BANK_IDColumn {
                get {
                    return this.columnBANK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_NOColumn {
                get {
                    return this.columnGIRO_NO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_IDColumn {
                get {
                    return this.columnPI_HUTANG_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_OUT_DATEColumn {
                get {
                    return this.columnGIRO_OUT_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_MATURITY_DATEColumn {
                get {
                    return this.columnGIRO_MATURITY_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_STATUSColumn {
                get {
                    return this.columnGIRO_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_TOColumn {
                get {
                    return this.columnGIRO_TO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_FROMColumn {
                get {
                    return this.columnGIRO_FROM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_CAIR_DATEColumn {
                get {
                    return this.columnGIRO_CAIR_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GIRO_AMMOUNTColumn {
                get {
                    return this.columnGIRO_AMMOUNT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GIRORow this[int index] {
                get {
                    return ((T_GIRORow)(this.Rows[index]));
                }
            }
            
            public event T_GIRORowChangeEventHandler T_GIRORowChanging;
            
            public event T_GIRORowChangeEventHandler T_GIRORowChanged;
            
            public event T_GIRORowChangeEventHandler T_GIRORowDeleting;
            
            public event T_GIRORowChangeEventHandler T_GIRORowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_GIRORow(T_GIRORow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GIRORow AddT_GIRORow(string CURRENCY_ID, string BANK_ID, string GIRO_NO, decimal PI_HUTANG_ID, System.DateTime GIRO_OUT_DATE, System.DateTime GIRO_MATURITY_DATE, string GIRO_STATUS, string GIRO_TO, string GIRO_FROM, System.DateTime GIRO_CAIR_DATE, decimal GIRO_AMMOUNT, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_GIRORow rowT_GIRORow = ((T_GIRORow)(this.NewRow()));
                rowT_GIRORow.ItemArray = new object[] {
                        null,
                        CURRENCY_ID,
                        BANK_ID,
                        GIRO_NO,
                        PI_HUTANG_ID,
                        GIRO_OUT_DATE,
                        GIRO_MATURITY_DATE,
                        GIRO_STATUS,
                        GIRO_TO,
                        GIRO_FROM,
                        GIRO_CAIR_DATE,
                        GIRO_AMMOUNT,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_GIRORow);
                return rowT_GIRORow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GIRORow FindByGIRO_ID(decimal GIRO_ID) {
                return ((T_GIRORow)(this.Rows.Find(new object[] {
                            GIRO_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_GIRODataTable cln = ((T_GIRODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_GIRODataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGIRO_ID = base.Columns["GIRO_ID"];
                this.columnCURRENCY_ID = base.Columns["CURRENCY_ID"];
                this.columnBANK_ID = base.Columns["BANK_ID"];
                this.columnGIRO_NO = base.Columns["GIRO_NO"];
                this.columnPI_HUTANG_ID = base.Columns["PI_HUTANG_ID"];
                this.columnGIRO_OUT_DATE = base.Columns["GIRO_OUT_DATE"];
                this.columnGIRO_MATURITY_DATE = base.Columns["GIRO_MATURITY_DATE"];
                this.columnGIRO_STATUS = base.Columns["GIRO_STATUS"];
                this.columnGIRO_TO = base.Columns["GIRO_TO"];
                this.columnGIRO_FROM = base.Columns["GIRO_FROM"];
                this.columnGIRO_CAIR_DATE = base.Columns["GIRO_CAIR_DATE"];
                this.columnGIRO_AMMOUNT = base.Columns["GIRO_AMMOUNT"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGIRO_ID = new System.Data.DataColumn("GIRO_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_ID);
                this.columnCURRENCY_ID = new System.Data.DataColumn("CURRENCY_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENCY_ID);
                this.columnBANK_ID = new System.Data.DataColumn("BANK_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANK_ID);
                this.columnGIRO_NO = new System.Data.DataColumn("GIRO_NO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_NO);
                this.columnPI_HUTANG_ID = new System.Data.DataColumn("PI_HUTANG_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_ID);
                this.columnGIRO_OUT_DATE = new System.Data.DataColumn("GIRO_OUT_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_OUT_DATE);
                this.columnGIRO_MATURITY_DATE = new System.Data.DataColumn("GIRO_MATURITY_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_MATURITY_DATE);
                this.columnGIRO_STATUS = new System.Data.DataColumn("GIRO_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_STATUS);
                this.columnGIRO_TO = new System.Data.DataColumn("GIRO_TO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_TO);
                this.columnGIRO_FROM = new System.Data.DataColumn("GIRO_FROM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_FROM);
                this.columnGIRO_CAIR_DATE = new System.Data.DataColumn("GIRO_CAIR_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_CAIR_DATE);
                this.columnGIRO_AMMOUNT = new System.Data.DataColumn("GIRO_AMMOUNT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIRO_AMMOUNT);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnGIRO_ID}, true));
                this.columnGIRO_ID.AutoIncrement = true;
                this.columnGIRO_ID.AllowDBNull = false;
                this.columnGIRO_ID.ReadOnly = true;
                this.columnGIRO_ID.Unique = true;
                this.columnCURRENCY_ID.MaxLength = 50;
                this.columnBANK_ID.MaxLength = 50;
                this.columnGIRO_NO.MaxLength = 50;
                this.columnGIRO_STATUS.MaxLength = 50;
                this.columnGIRO_TO.MaxLength = 50;
                this.columnGIRO_FROM.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GIRORow NewT_GIRORow() {
                return ((T_GIRORow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_GIRORow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_GIRORow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_GIRORowChanged != null)) {
                    this.T_GIRORowChanged(this, new T_GIRORowChangeEvent(((T_GIRORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_GIRORowChanging != null)) {
                    this.T_GIRORowChanging(this, new T_GIRORowChangeEvent(((T_GIRORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_GIRORowDeleted != null)) {
                    this.T_GIRORowDeleted(this, new T_GIRORowChangeEvent(((T_GIRORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_GIRORowDeleting != null)) {
                    this.T_GIRORowDeleting(this, new T_GIRORowChangeEvent(((T_GIRORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_GIRORow(T_GIRORow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_GIRODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_GROSIR_SETTINGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnDEFAULT_PIUTANG_CREDIT_LONG;
            
            private System.Data.DataColumn columnDISCOUNT_PIN;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GROSIR_SETTINGDataTable() {
                this.TableName = "T_GROSIR_SETTING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_GROSIR_SETTINGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_GROSIR_SETTINGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEFAULT_PIUTANG_CREDIT_LONGColumn {
                get {
                    return this.columnDEFAULT_PIUTANG_CREDIT_LONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISCOUNT_PINColumn {
                get {
                    return this.columnDISCOUNT_PIN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GROSIR_SETTINGRow this[int index] {
                get {
                    return ((T_GROSIR_SETTINGRow)(this.Rows[index]));
                }
            }
            
            public event T_GROSIR_SETTINGRowChangeEventHandler T_GROSIR_SETTINGRowChanging;
            
            public event T_GROSIR_SETTINGRowChangeEventHandler T_GROSIR_SETTINGRowChanged;
            
            public event T_GROSIR_SETTINGRowChangeEventHandler T_GROSIR_SETTINGRowDeleting;
            
            public event T_GROSIR_SETTINGRowChangeEventHandler T_GROSIR_SETTINGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_GROSIR_SETTINGRow(T_GROSIR_SETTINGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GROSIR_SETTINGRow AddT_GROSIR_SETTINGRow(string SETTING_ID, int DEFAULT_PIUTANG_CREDIT_LONG, string DISCOUNT_PIN, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_GROSIR_SETTINGRow rowT_GROSIR_SETTINGRow = ((T_GROSIR_SETTINGRow)(this.NewRow()));
                rowT_GROSIR_SETTINGRow.ItemArray = new object[] {
                        SETTING_ID,
                        DEFAULT_PIUTANG_CREDIT_LONG,
                        DISCOUNT_PIN,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_GROSIR_SETTINGRow);
                return rowT_GROSIR_SETTINGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GROSIR_SETTINGRow FindBySETTING_ID(string SETTING_ID) {
                return ((T_GROSIR_SETTINGRow)(this.Rows.Find(new object[] {
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_GROSIR_SETTINGDataTable cln = ((T_GROSIR_SETTINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_GROSIR_SETTINGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnDEFAULT_PIUTANG_CREDIT_LONG = base.Columns["DEFAULT_PIUTANG_CREDIT_LONG"];
                this.columnDISCOUNT_PIN = base.Columns["DISCOUNT_PIN"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnDEFAULT_PIUTANG_CREDIT_LONG = new System.Data.DataColumn("DEFAULT_PIUTANG_CREDIT_LONG", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_PIUTANG_CREDIT_LONG);
                this.columnDISCOUNT_PIN = new System.Data.DataColumn("DISCOUNT_PIN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT_PIN);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSETTING_ID}, true));
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.Unique = true;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnDISCOUNT_PIN.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GROSIR_SETTINGRow NewT_GROSIR_SETTINGRow() {
                return ((T_GROSIR_SETTINGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_GROSIR_SETTINGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_GROSIR_SETTINGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_GROSIR_SETTINGRowChanged != null)) {
                    this.T_GROSIR_SETTINGRowChanged(this, new T_GROSIR_SETTINGRowChangeEvent(((T_GROSIR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_GROSIR_SETTINGRowChanging != null)) {
                    this.T_GROSIR_SETTINGRowChanging(this, new T_GROSIR_SETTINGRowChangeEvent(((T_GROSIR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_GROSIR_SETTINGRowDeleted != null)) {
                    this.T_GROSIR_SETTINGRowDeleted(this, new T_GROSIR_SETTINGRowChangeEvent(((T_GROSIR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_GROSIR_SETTINGRowDeleting != null)) {
                    this.T_GROSIR_SETTINGRowDeleting(this, new T_GROSIR_SETTINGRowChangeEvent(((T_GROSIR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_GROSIR_SETTINGRow(T_GROSIR_SETTINGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_GROSIR_SETTINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_JOURNALDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnJOURNAL_ID;
            
            private System.Data.DataColumn columnACCOUNT_ID;
            
            private System.Data.DataColumn columnSUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnVOUCHER_NO;
            
            private System.Data.DataColumn columnJOURNAL_PIC;
            
            private System.Data.DataColumn columnJOURNAL_DATE;
            
            private System.Data.DataColumn columnJOURNAL_JUMLAH;
            
            private System.Data.DataColumn columnJOURNAL_STATUS;
            
            private System.Data.DataColumn columnJOURNAL_DESC;
            
            private System.Data.DataColumn columnACCOUNT_SALDO;
            
            private System.Data.DataColumn columnSUB_ACCONT_SALDO;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOURNALDataTable() {
                this.TableName = "T_JOURNAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_JOURNALDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_JOURNALDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JOURNAL_IDColumn {
                get {
                    return this.columnJOURNAL_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_IDColumn {
                get {
                    return this.columnACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnSUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VOUCHER_NOColumn {
                get {
                    return this.columnVOUCHER_NO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JOURNAL_PICColumn {
                get {
                    return this.columnJOURNAL_PIC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JOURNAL_DATEColumn {
                get {
                    return this.columnJOURNAL_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JOURNAL_JUMLAHColumn {
                get {
                    return this.columnJOURNAL_JUMLAH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JOURNAL_STATUSColumn {
                get {
                    return this.columnJOURNAL_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JOURNAL_DESCColumn {
                get {
                    return this.columnJOURNAL_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_SALDOColumn {
                get {
                    return this.columnACCOUNT_SALDO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCONT_SALDOColumn {
                get {
                    return this.columnSUB_ACCONT_SALDO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOURNALRow this[int index] {
                get {
                    return ((T_JOURNALRow)(this.Rows[index]));
                }
            }
            
            public event T_JOURNALRowChangeEventHandler T_JOURNALRowChanging;
            
            public event T_JOURNALRowChangeEventHandler T_JOURNALRowChanged;
            
            public event T_JOURNALRowChangeEventHandler T_JOURNALRowDeleting;
            
            public event T_JOURNALRowChangeEventHandler T_JOURNALRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_JOURNALRow(T_JOURNALRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOURNALRow AddT_JOURNALRow(string ACCOUNT_ID, string SUB_ACCOUNT_ID, string VOUCHER_NO, string JOURNAL_PIC, System.DateTime JOURNAL_DATE, decimal JOURNAL_JUMLAH, string JOURNAL_STATUS, string JOURNAL_DESC, decimal ACCOUNT_SALDO, decimal SUB_ACCONT_SALDO, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_JOURNALRow rowT_JOURNALRow = ((T_JOURNALRow)(this.NewRow()));
                rowT_JOURNALRow.ItemArray = new object[] {
                        null,
                        ACCOUNT_ID,
                        SUB_ACCOUNT_ID,
                        VOUCHER_NO,
                        JOURNAL_PIC,
                        JOURNAL_DATE,
                        JOURNAL_JUMLAH,
                        JOURNAL_STATUS,
                        JOURNAL_DESC,
                        ACCOUNT_SALDO,
                        SUB_ACCONT_SALDO,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_JOURNALRow);
                return rowT_JOURNALRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOURNALRow FindByJOURNAL_ID(decimal JOURNAL_ID) {
                return ((T_JOURNALRow)(this.Rows.Find(new object[] {
                            JOURNAL_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_JOURNALDataTable cln = ((T_JOURNALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_JOURNALDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnJOURNAL_ID = base.Columns["JOURNAL_ID"];
                this.columnACCOUNT_ID = base.Columns["ACCOUNT_ID"];
                this.columnSUB_ACCOUNT_ID = base.Columns["SUB_ACCOUNT_ID"];
                this.columnVOUCHER_NO = base.Columns["VOUCHER_NO"];
                this.columnJOURNAL_PIC = base.Columns["JOURNAL_PIC"];
                this.columnJOURNAL_DATE = base.Columns["JOURNAL_DATE"];
                this.columnJOURNAL_JUMLAH = base.Columns["JOURNAL_JUMLAH"];
                this.columnJOURNAL_STATUS = base.Columns["JOURNAL_STATUS"];
                this.columnJOURNAL_DESC = base.Columns["JOURNAL_DESC"];
                this.columnACCOUNT_SALDO = base.Columns["ACCOUNT_SALDO"];
                this.columnSUB_ACCONT_SALDO = base.Columns["SUB_ACCONT_SALDO"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnJOURNAL_ID = new System.Data.DataColumn("JOURNAL_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOURNAL_ID);
                this.columnACCOUNT_ID = new System.Data.DataColumn("ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_ID);
                this.columnSUB_ACCOUNT_ID = new System.Data.DataColumn("SUB_ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_ID);
                this.columnVOUCHER_NO = new System.Data.DataColumn("VOUCHER_NO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOUCHER_NO);
                this.columnJOURNAL_PIC = new System.Data.DataColumn("JOURNAL_PIC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOURNAL_PIC);
                this.columnJOURNAL_DATE = new System.Data.DataColumn("JOURNAL_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOURNAL_DATE);
                this.columnJOURNAL_JUMLAH = new System.Data.DataColumn("JOURNAL_JUMLAH", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOURNAL_JUMLAH);
                this.columnJOURNAL_STATUS = new System.Data.DataColumn("JOURNAL_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOURNAL_STATUS);
                this.columnJOURNAL_DESC = new System.Data.DataColumn("JOURNAL_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOURNAL_DESC);
                this.columnACCOUNT_SALDO = new System.Data.DataColumn("ACCOUNT_SALDO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_SALDO);
                this.columnSUB_ACCONT_SALDO = new System.Data.DataColumn("SUB_ACCONT_SALDO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCONT_SALDO);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnJOURNAL_ID}, true));
                this.columnJOURNAL_ID.AutoIncrement = true;
                this.columnJOURNAL_ID.AllowDBNull = false;
                this.columnJOURNAL_ID.ReadOnly = true;
                this.columnJOURNAL_ID.Unique = true;
                this.columnACCOUNT_ID.MaxLength = 50;
                this.columnSUB_ACCOUNT_ID.MaxLength = 50;
                this.columnVOUCHER_NO.MaxLength = 50;
                this.columnJOURNAL_PIC.MaxLength = 50;
                this.columnJOURNAL_STATUS.MaxLength = 50;
                this.columnJOURNAL_DESC.MaxLength = 200;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOURNALRow NewT_JOURNALRow() {
                return ((T_JOURNALRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_JOURNALRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_JOURNALRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_JOURNALRowChanged != null)) {
                    this.T_JOURNALRowChanged(this, new T_JOURNALRowChangeEvent(((T_JOURNALRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_JOURNALRowChanging != null)) {
                    this.T_JOURNALRowChanging(this, new T_JOURNALRowChangeEvent(((T_JOURNALRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_JOURNALRowDeleted != null)) {
                    this.T_JOURNALRowDeleted(this, new T_JOURNALRowChangeEvent(((T_JOURNALRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_JOURNALRowDeleting != null)) {
                    this.T_JOURNALRowDeleting(this, new T_JOURNALRowChangeEvent(((T_JOURNALRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_JOURNALRow(T_JOURNALRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_JOURNALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_LOGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnLOG_ID;
            
            private System.Data.DataColumn columnLOG_DATE;
            
            private System.Data.DataColumn columnLOG_USER;
            
            private System.Data.DataColumn columnLOG_COMP_NAME;
            
            private System.Data.DataColumn columnLOG_IP;
            
            private System.Data.DataColumn columnLOG_ACTION;
            
            private System.Data.DataColumn columnLOG_TABLE;
            
            private System.Data.DataColumn columnLOG_DESC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOGDataTable() {
                this.TableName = "T_LOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LOGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_LOGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOG_IDColumn {
                get {
                    return this.columnLOG_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOG_DATEColumn {
                get {
                    return this.columnLOG_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOG_USERColumn {
                get {
                    return this.columnLOG_USER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOG_COMP_NAMEColumn {
                get {
                    return this.columnLOG_COMP_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOG_IPColumn {
                get {
                    return this.columnLOG_IP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOG_ACTIONColumn {
                get {
                    return this.columnLOG_ACTION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOG_TABLEColumn {
                get {
                    return this.columnLOG_TABLE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOG_DESCColumn {
                get {
                    return this.columnLOG_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOGRow this[int index] {
                get {
                    return ((T_LOGRow)(this.Rows[index]));
                }
            }
            
            public event T_LOGRowChangeEventHandler T_LOGRowChanging;
            
            public event T_LOGRowChangeEventHandler T_LOGRowChanged;
            
            public event T_LOGRowChangeEventHandler T_LOGRowDeleting;
            
            public event T_LOGRowChangeEventHandler T_LOGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_LOGRow(T_LOGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOGRow AddT_LOGRow(System.DateTime LOG_DATE, string LOG_USER, string LOG_COMP_NAME, string LOG_IP, string LOG_ACTION, string LOG_TABLE, string LOG_DESC) {
                T_LOGRow rowT_LOGRow = ((T_LOGRow)(this.NewRow()));
                rowT_LOGRow.ItemArray = new object[] {
                        null,
                        LOG_DATE,
                        LOG_USER,
                        LOG_COMP_NAME,
                        LOG_IP,
                        LOG_ACTION,
                        LOG_TABLE,
                        LOG_DESC};
                this.Rows.Add(rowT_LOGRow);
                return rowT_LOGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOGRow FindByLOG_ID(decimal LOG_ID) {
                return ((T_LOGRow)(this.Rows.Find(new object[] {
                            LOG_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_LOGDataTable cln = ((T_LOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_LOGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLOG_ID = base.Columns["LOG_ID"];
                this.columnLOG_DATE = base.Columns["LOG_DATE"];
                this.columnLOG_USER = base.Columns["LOG_USER"];
                this.columnLOG_COMP_NAME = base.Columns["LOG_COMP_NAME"];
                this.columnLOG_IP = base.Columns["LOG_IP"];
                this.columnLOG_ACTION = base.Columns["LOG_ACTION"];
                this.columnLOG_TABLE = base.Columns["LOG_TABLE"];
                this.columnLOG_DESC = base.Columns["LOG_DESC"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLOG_ID = new System.Data.DataColumn("LOG_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_ID);
                this.columnLOG_DATE = new System.Data.DataColumn("LOG_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_DATE);
                this.columnLOG_USER = new System.Data.DataColumn("LOG_USER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_USER);
                this.columnLOG_COMP_NAME = new System.Data.DataColumn("LOG_COMP_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_COMP_NAME);
                this.columnLOG_IP = new System.Data.DataColumn("LOG_IP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_IP);
                this.columnLOG_ACTION = new System.Data.DataColumn("LOG_ACTION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_ACTION);
                this.columnLOG_TABLE = new System.Data.DataColumn("LOG_TABLE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_TABLE);
                this.columnLOG_DESC = new System.Data.DataColumn("LOG_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOG_DESC);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnLOG_ID}, true));
                this.columnLOG_ID.AutoIncrement = true;
                this.columnLOG_ID.AllowDBNull = false;
                this.columnLOG_ID.ReadOnly = true;
                this.columnLOG_ID.Unique = true;
                this.columnLOG_USER.MaxLength = 50;
                this.columnLOG_COMP_NAME.MaxLength = 50;
                this.columnLOG_IP.MaxLength = 50;
                this.columnLOG_ACTION.MaxLength = 50;
                this.columnLOG_TABLE.MaxLength = 50;
                this.columnLOG_DESC.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOGRow NewT_LOGRow() {
                return ((T_LOGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_LOGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_LOGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_LOGRowChanged != null)) {
                    this.T_LOGRowChanged(this, new T_LOGRowChangeEvent(((T_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_LOGRowChanging != null)) {
                    this.T_LOGRowChanging(this, new T_LOGRowChangeEvent(((T_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_LOGRowDeleted != null)) {
                    this.T_LOGRowDeleted(this, new T_LOGRowChangeEvent(((T_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_LOGRowDeleting != null)) {
                    this.T_LOGRowDeleting(this, new T_LOGRowChangeEvent(((T_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_LOGRow(T_LOGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_LOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_MENU_USERDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMENU_ID;
            
            private System.Data.DataColumn columnUSER_NAME;
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnHAS_ACCESS;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MENU_USERDataTable() {
                this.TableName = "T_MENU_USER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_MENU_USERDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_MENU_USERDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MENU_IDColumn {
                get {
                    return this.columnMENU_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HAS_ACCESSColumn {
                get {
                    return this.columnHAS_ACCESS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MENU_USERRow this[int index] {
                get {
                    return ((T_MENU_USERRow)(this.Rows[index]));
                }
            }
            
            public event T_MENU_USERRowChangeEventHandler T_MENU_USERRowChanging;
            
            public event T_MENU_USERRowChangeEventHandler T_MENU_USERRowChanged;
            
            public event T_MENU_USERRowChangeEventHandler T_MENU_USERRowDeleting;
            
            public event T_MENU_USERRowChangeEventHandler T_MENU_USERRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_MENU_USERRow(T_MENU_USERRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MENU_USERRow AddT_MENU_USERRow(decimal MENU_ID, string USER_NAME, string SETTING_ID, bool HAS_ACCESS, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_MENU_USERRow rowT_MENU_USERRow = ((T_MENU_USERRow)(this.NewRow()));
                rowT_MENU_USERRow.ItemArray = new object[] {
                        MENU_ID,
                        USER_NAME,
                        SETTING_ID,
                        HAS_ACCESS,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_MENU_USERRow);
                return rowT_MENU_USERRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MENU_USERRow FindByMENU_IDUSER_NAMESETTING_ID(decimal MENU_ID, string USER_NAME, string SETTING_ID) {
                return ((T_MENU_USERRow)(this.Rows.Find(new object[] {
                            MENU_ID,
                            USER_NAME,
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_MENU_USERDataTable cln = ((T_MENU_USERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_MENU_USERDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMENU_ID = base.Columns["MENU_ID"];
                this.columnUSER_NAME = base.Columns["USER_NAME"];
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnHAS_ACCESS = base.Columns["HAS_ACCESS"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMENU_ID = new System.Data.DataColumn("MENU_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENU_ID);
                this.columnUSER_NAME = new System.Data.DataColumn("USER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnHAS_ACCESS = new System.Data.DataColumn("HAS_ACCESS", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAS_ACCESS);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMENU_ID,
                                this.columnUSER_NAME,
                                this.columnSETTING_ID}, true));
                this.columnMENU_ID.AllowDBNull = false;
                this.columnUSER_NAME.AllowDBNull = false;
                this.columnUSER_NAME.MaxLength = 20;
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MENU_USERRow NewT_MENU_USERRow() {
                return ((T_MENU_USERRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_MENU_USERRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_MENU_USERRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_MENU_USERRowChanged != null)) {
                    this.T_MENU_USERRowChanged(this, new T_MENU_USERRowChangeEvent(((T_MENU_USERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_MENU_USERRowChanging != null)) {
                    this.T_MENU_USERRowChanging(this, new T_MENU_USERRowChangeEvent(((T_MENU_USERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_MENU_USERRowDeleted != null)) {
                    this.T_MENU_USERRowDeleted(this, new T_MENU_USERRowChangeEvent(((T_MENU_USERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_MENU_USERRowDeleting != null)) {
                    this.T_MENU_USERRowDeleting(this, new T_MENU_USERRowChangeEvent(((T_MENU_USERRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_MENU_USERRow(T_MENU_USERRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_MENU_USERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_MOTOR_SETTINGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTING_ID;
            
            private System.Data.DataColumn columnDEFAULT_PIUTANG_CREDIT_LONG;
            
            private System.Data.DataColumn columnDISCOUNT_PIN;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MOTOR_SETTINGDataTable() {
                this.TableName = "T_MOTOR_SETTING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_MOTOR_SETTINGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_MOTOR_SETTINGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTING_IDColumn {
                get {
                    return this.columnSETTING_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DEFAULT_PIUTANG_CREDIT_LONGColumn {
                get {
                    return this.columnDEFAULT_PIUTANG_CREDIT_LONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISCOUNT_PINColumn {
                get {
                    return this.columnDISCOUNT_PIN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MOTOR_SETTINGRow this[int index] {
                get {
                    return ((T_MOTOR_SETTINGRow)(this.Rows[index]));
                }
            }
            
            public event T_MOTOR_SETTINGRowChangeEventHandler T_MOTOR_SETTINGRowChanging;
            
            public event T_MOTOR_SETTINGRowChangeEventHandler T_MOTOR_SETTINGRowChanged;
            
            public event T_MOTOR_SETTINGRowChangeEventHandler T_MOTOR_SETTINGRowDeleting;
            
            public event T_MOTOR_SETTINGRowChangeEventHandler T_MOTOR_SETTINGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_MOTOR_SETTINGRow(T_MOTOR_SETTINGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MOTOR_SETTINGRow AddT_MOTOR_SETTINGRow(string SETTING_ID, int DEFAULT_PIUTANG_CREDIT_LONG, string DISCOUNT_PIN, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_MOTOR_SETTINGRow rowT_MOTOR_SETTINGRow = ((T_MOTOR_SETTINGRow)(this.NewRow()));
                rowT_MOTOR_SETTINGRow.ItemArray = new object[] {
                        SETTING_ID,
                        DEFAULT_PIUTANG_CREDIT_LONG,
                        DISCOUNT_PIN,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_MOTOR_SETTINGRow);
                return rowT_MOTOR_SETTINGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MOTOR_SETTINGRow FindBySETTING_ID(string SETTING_ID) {
                return ((T_MOTOR_SETTINGRow)(this.Rows.Find(new object[] {
                            SETTING_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_MOTOR_SETTINGDataTable cln = ((T_MOTOR_SETTINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_MOTOR_SETTINGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTING_ID = base.Columns["SETTING_ID"];
                this.columnDEFAULT_PIUTANG_CREDIT_LONG = base.Columns["DEFAULT_PIUTANG_CREDIT_LONG"];
                this.columnDISCOUNT_PIN = base.Columns["DISCOUNT_PIN"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTING_ID = new System.Data.DataColumn("SETTING_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTING_ID);
                this.columnDEFAULT_PIUTANG_CREDIT_LONG = new System.Data.DataColumn("DEFAULT_PIUTANG_CREDIT_LONG", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_PIUTANG_CREDIT_LONG);
                this.columnDISCOUNT_PIN = new System.Data.DataColumn("DISCOUNT_PIN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT_PIN);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSETTING_ID}, true));
                this.columnSETTING_ID.AllowDBNull = false;
                this.columnSETTING_ID.Unique = true;
                this.columnSETTING_ID.MaxLength = 50;
                this.columnDISCOUNT_PIN.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MOTOR_SETTINGRow NewT_MOTOR_SETTINGRow() {
                return ((T_MOTOR_SETTINGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_MOTOR_SETTINGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_MOTOR_SETTINGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_MOTOR_SETTINGRowChanged != null)) {
                    this.T_MOTOR_SETTINGRowChanged(this, new T_MOTOR_SETTINGRowChangeEvent(((T_MOTOR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_MOTOR_SETTINGRowChanging != null)) {
                    this.T_MOTOR_SETTINGRowChanging(this, new T_MOTOR_SETTINGRowChangeEvent(((T_MOTOR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_MOTOR_SETTINGRowDeleted != null)) {
                    this.T_MOTOR_SETTINGRowDeleted(this, new T_MOTOR_SETTINGRowChangeEvent(((T_MOTOR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_MOTOR_SETTINGRowDeleting != null)) {
                    this.T_MOTOR_SETTINGRowDeleting(this, new T_MOTOR_SETTINGRowChangeEvent(((T_MOTOR_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_MOTOR_SETTINGRow(T_MOTOR_SETTINGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_MOTOR_SETTINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PI_HUTANGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPI_HUTANG_ID;
            
            private System.Data.DataColumn columnPI_HUTANG_STATUS;
            
            private System.Data.DataColumn columnTRANSACTION_ID;
            
            private System.Data.DataColumn columnSUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnPI_HUTANG_PIC;
            
            private System.Data.DataColumn columnPI_HUTANG_DATE;
            
            private System.Data.DataColumn columnPI_HUTANG_JATUH_TEMPO;
            
            private System.Data.DataColumn columnPI_HUTANG_JUMLAH;
            
            private System.Data.DataColumn columnPI_HUTANG_DIBAYAR;
            
            private System.Data.DataColumn columnPI_HUTANG_RETUR;
            
            private System.Data.DataColumn columnPI_HUTANG_SISA;
            
            private System.Data.DataColumn columnPI_HUTANG_LUNAS_DATE;
            
            private System.Data.DataColumn columnPI_HUTANG_CREDIT_LONG;
            
            private System.Data.DataColumn columnPI_HUTANG_DESC;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PI_HUTANGDataTable() {
                this.TableName = "T_PI_HUTANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PI_HUTANGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PI_HUTANGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_IDColumn {
                get {
                    return this.columnPI_HUTANG_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_STATUSColumn {
                get {
                    return this.columnPI_HUTANG_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_IDColumn {
                get {
                    return this.columnTRANSACTION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnSUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_PICColumn {
                get {
                    return this.columnPI_HUTANG_PIC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_DATEColumn {
                get {
                    return this.columnPI_HUTANG_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_JATUH_TEMPOColumn {
                get {
                    return this.columnPI_HUTANG_JATUH_TEMPO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_JUMLAHColumn {
                get {
                    return this.columnPI_HUTANG_JUMLAH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_DIBAYARColumn {
                get {
                    return this.columnPI_HUTANG_DIBAYAR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_RETURColumn {
                get {
                    return this.columnPI_HUTANG_RETUR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_SISAColumn {
                get {
                    return this.columnPI_HUTANG_SISA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_LUNAS_DATEColumn {
                get {
                    return this.columnPI_HUTANG_LUNAS_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_CREDIT_LONGColumn {
                get {
                    return this.columnPI_HUTANG_CREDIT_LONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PI_HUTANG_DESCColumn {
                get {
                    return this.columnPI_HUTANG_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PI_HUTANGRow this[int index] {
                get {
                    return ((T_PI_HUTANGRow)(this.Rows[index]));
                }
            }
            
            public event T_PI_HUTANGRowChangeEventHandler T_PI_HUTANGRowChanging;
            
            public event T_PI_HUTANGRowChangeEventHandler T_PI_HUTANGRowChanged;
            
            public event T_PI_HUTANGRowChangeEventHandler T_PI_HUTANGRowDeleting;
            
            public event T_PI_HUTANGRowChangeEventHandler T_PI_HUTANGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PI_HUTANGRow(T_PI_HUTANGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PI_HUTANGRow AddT_PI_HUTANGRow(string PI_HUTANG_STATUS, decimal TRANSACTION_ID, string SUB_ACCOUNT_ID, string PI_HUTANG_PIC, System.DateTime PI_HUTANG_DATE, System.DateTime PI_HUTANG_JATUH_TEMPO, decimal PI_HUTANG_JUMLAH, decimal PI_HUTANG_DIBAYAR, decimal PI_HUTANG_RETUR, decimal PI_HUTANG_SISA, System.DateTime PI_HUTANG_LUNAS_DATE, decimal PI_HUTANG_CREDIT_LONG, string PI_HUTANG_DESC, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_PI_HUTANGRow rowT_PI_HUTANGRow = ((T_PI_HUTANGRow)(this.NewRow()));
                rowT_PI_HUTANGRow.ItemArray = new object[] {
                        null,
                        PI_HUTANG_STATUS,
                        TRANSACTION_ID,
                        SUB_ACCOUNT_ID,
                        PI_HUTANG_PIC,
                        PI_HUTANG_DATE,
                        PI_HUTANG_JATUH_TEMPO,
                        PI_HUTANG_JUMLAH,
                        PI_HUTANG_DIBAYAR,
                        PI_HUTANG_RETUR,
                        PI_HUTANG_SISA,
                        PI_HUTANG_LUNAS_DATE,
                        PI_HUTANG_CREDIT_LONG,
                        PI_HUTANG_DESC,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_PI_HUTANGRow);
                return rowT_PI_HUTANGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PI_HUTANGRow FindByPI_HUTANG_ID(decimal PI_HUTANG_ID) {
                return ((T_PI_HUTANGRow)(this.Rows.Find(new object[] {
                            PI_HUTANG_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_PI_HUTANGDataTable cln = ((T_PI_HUTANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_PI_HUTANGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPI_HUTANG_ID = base.Columns["PI_HUTANG_ID"];
                this.columnPI_HUTANG_STATUS = base.Columns["PI_HUTANG_STATUS"];
                this.columnTRANSACTION_ID = base.Columns["TRANSACTION_ID"];
                this.columnSUB_ACCOUNT_ID = base.Columns["SUB_ACCOUNT_ID"];
                this.columnPI_HUTANG_PIC = base.Columns["PI_HUTANG_PIC"];
                this.columnPI_HUTANG_DATE = base.Columns["PI_HUTANG_DATE"];
                this.columnPI_HUTANG_JATUH_TEMPO = base.Columns["PI_HUTANG_JATUH_TEMPO"];
                this.columnPI_HUTANG_JUMLAH = base.Columns["PI_HUTANG_JUMLAH"];
                this.columnPI_HUTANG_DIBAYAR = base.Columns["PI_HUTANG_DIBAYAR"];
                this.columnPI_HUTANG_RETUR = base.Columns["PI_HUTANG_RETUR"];
                this.columnPI_HUTANG_SISA = base.Columns["PI_HUTANG_SISA"];
                this.columnPI_HUTANG_LUNAS_DATE = base.Columns["PI_HUTANG_LUNAS_DATE"];
                this.columnPI_HUTANG_CREDIT_LONG = base.Columns["PI_HUTANG_CREDIT_LONG"];
                this.columnPI_HUTANG_DESC = base.Columns["PI_HUTANG_DESC"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPI_HUTANG_ID = new System.Data.DataColumn("PI_HUTANG_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_ID);
                this.columnPI_HUTANG_STATUS = new System.Data.DataColumn("PI_HUTANG_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_STATUS);
                this.columnTRANSACTION_ID = new System.Data.DataColumn("TRANSACTION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_ID);
                this.columnSUB_ACCOUNT_ID = new System.Data.DataColumn("SUB_ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_ID);
                this.columnPI_HUTANG_PIC = new System.Data.DataColumn("PI_HUTANG_PIC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_PIC);
                this.columnPI_HUTANG_DATE = new System.Data.DataColumn("PI_HUTANG_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_DATE);
                this.columnPI_HUTANG_JATUH_TEMPO = new System.Data.DataColumn("PI_HUTANG_JATUH_TEMPO", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_JATUH_TEMPO);
                this.columnPI_HUTANG_JUMLAH = new System.Data.DataColumn("PI_HUTANG_JUMLAH", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_JUMLAH);
                this.columnPI_HUTANG_DIBAYAR = new System.Data.DataColumn("PI_HUTANG_DIBAYAR", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_DIBAYAR);
                this.columnPI_HUTANG_RETUR = new System.Data.DataColumn("PI_HUTANG_RETUR", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_RETUR);
                this.columnPI_HUTANG_SISA = new System.Data.DataColumn("PI_HUTANG_SISA", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_SISA);
                this.columnPI_HUTANG_LUNAS_DATE = new System.Data.DataColumn("PI_HUTANG_LUNAS_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_LUNAS_DATE);
                this.columnPI_HUTANG_CREDIT_LONG = new System.Data.DataColumn("PI_HUTANG_CREDIT_LONG", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_CREDIT_LONG);
                this.columnPI_HUTANG_DESC = new System.Data.DataColumn("PI_HUTANG_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPI_HUTANG_DESC);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnPI_HUTANG_ID}, true));
                this.columnPI_HUTANG_ID.AutoIncrement = true;
                this.columnPI_HUTANG_ID.AllowDBNull = false;
                this.columnPI_HUTANG_ID.ReadOnly = true;
                this.columnPI_HUTANG_ID.Unique = true;
                this.columnPI_HUTANG_STATUS.MaxLength = 50;
                this.columnSUB_ACCOUNT_ID.MaxLength = 50;
                this.columnPI_HUTANG_PIC.MaxLength = 50;
                this.columnPI_HUTANG_DESC.MaxLength = 2147483647;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PI_HUTANGRow NewT_PI_HUTANGRow() {
                return ((T_PI_HUTANGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_PI_HUTANGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_PI_HUTANGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PI_HUTANGRowChanged != null)) {
                    this.T_PI_HUTANGRowChanged(this, new T_PI_HUTANGRowChangeEvent(((T_PI_HUTANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PI_HUTANGRowChanging != null)) {
                    this.T_PI_HUTANGRowChanging(this, new T_PI_HUTANGRowChangeEvent(((T_PI_HUTANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PI_HUTANGRowDeleted != null)) {
                    this.T_PI_HUTANGRowDeleted(this, new T_PI_HUTANGRowChangeEvent(((T_PI_HUTANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PI_HUTANGRowDeleting != null)) {
                    this.T_PI_HUTANGRowDeleting(this, new T_PI_HUTANGRowChangeEvent(((T_PI_HUTANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PI_HUTANGRow(T_PI_HUTANGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PI_HUTANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_REFERENCEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnREFERENCE_ID;
            
            private System.Data.DataColumn columnREFERENCE_TYPE;
            
            private System.Data.DataColumn columnNEXT_ID;
            
            private System.Data.DataColumn columnREFERENCE_DESC;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REFERENCEDataTable() {
                this.TableName = "T_REFERENCE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_REFERENCEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_REFERENCEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REFERENCE_IDColumn {
                get {
                    return this.columnREFERENCE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REFERENCE_TYPEColumn {
                get {
                    return this.columnREFERENCE_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NEXT_IDColumn {
                get {
                    return this.columnNEXT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REFERENCE_DESCColumn {
                get {
                    return this.columnREFERENCE_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REFERENCERow this[int index] {
                get {
                    return ((T_REFERENCERow)(this.Rows[index]));
                }
            }
            
            public event T_REFERENCERowChangeEventHandler T_REFERENCERowChanging;
            
            public event T_REFERENCERowChangeEventHandler T_REFERENCERowChanged;
            
            public event T_REFERENCERowChangeEventHandler T_REFERENCERowDeleting;
            
            public event T_REFERENCERowChangeEventHandler T_REFERENCERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_REFERENCERow(T_REFERENCERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REFERENCERow AddT_REFERENCERow(string REFERENCE_TYPE, string NEXT_ID, string REFERENCE_DESC) {
                T_REFERENCERow rowT_REFERENCERow = ((T_REFERENCERow)(this.NewRow()));
                rowT_REFERENCERow.ItemArray = new object[] {
                        null,
                        REFERENCE_TYPE,
                        NEXT_ID,
                        REFERENCE_DESC};
                this.Rows.Add(rowT_REFERENCERow);
                return rowT_REFERENCERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REFERENCERow FindByREFERENCE_ID(decimal REFERENCE_ID) {
                return ((T_REFERENCERow)(this.Rows.Find(new object[] {
                            REFERENCE_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_REFERENCEDataTable cln = ((T_REFERENCEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_REFERENCEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnREFERENCE_ID = base.Columns["REFERENCE_ID"];
                this.columnREFERENCE_TYPE = base.Columns["REFERENCE_TYPE"];
                this.columnNEXT_ID = base.Columns["NEXT_ID"];
                this.columnREFERENCE_DESC = base.Columns["REFERENCE_DESC"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnREFERENCE_ID = new System.Data.DataColumn("REFERENCE_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_ID);
                this.columnREFERENCE_TYPE = new System.Data.DataColumn("REFERENCE_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_TYPE);
                this.columnNEXT_ID = new System.Data.DataColumn("NEXT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEXT_ID);
                this.columnREFERENCE_DESC = new System.Data.DataColumn("REFERENCE_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFERENCE_DESC);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnREFERENCE_ID}, true));
                this.columnREFERENCE_ID.AutoIncrement = true;
                this.columnREFERENCE_ID.AllowDBNull = false;
                this.columnREFERENCE_ID.ReadOnly = true;
                this.columnREFERENCE_ID.Unique = true;
                this.columnREFERENCE_TYPE.MaxLength = 50;
                this.columnNEXT_ID.MaxLength = 50;
                this.columnREFERENCE_DESC.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REFERENCERow NewT_REFERENCERow() {
                return ((T_REFERENCERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_REFERENCERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_REFERENCERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_REFERENCERowChanged != null)) {
                    this.T_REFERENCERowChanged(this, new T_REFERENCERowChangeEvent(((T_REFERENCERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_REFERENCERowChanging != null)) {
                    this.T_REFERENCERowChanging(this, new T_REFERENCERowChangeEvent(((T_REFERENCERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_REFERENCERowDeleted != null)) {
                    this.T_REFERENCERowDeleted(this, new T_REFERENCERowChangeEvent(((T_REFERENCERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_REFERENCERowDeleting != null)) {
                    this.T_REFERENCERowDeleting(this, new T_REFERENCERowChangeEvent(((T_REFERENCERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_REFERENCERow(T_REFERENCERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_REFERENCEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_REKAP_COMMISSIONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnREKAP_DATE_FROM;
            
            private System.Data.DataColumn columnREKAP_DATE_TO;
            
            private System.Data.DataColumn columnEMPLOYEE_ID;
            
            private System.Data.DataColumn columnREKAP_TOTAL_DURATION;
            
            private System.Data.DataColumn columnREFEREE_PRICE;
            
            private System.Data.DataColumn columnREFEREE_PRICE_VIP;
            
            private System.Data.DataColumn columnREKAP_BONUS;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_COMMISSIONDataTable() {
                this.TableName = "T_REKAP_COMMISSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_REKAP_COMMISSIONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_REKAP_COMMISSIONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_DATE_FROMColumn {
                get {
                    return this.columnREKAP_DATE_FROM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_DATE_TOColumn {
                get {
                    return this.columnREKAP_DATE_TO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_IDColumn {
                get {
                    return this.columnEMPLOYEE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_TOTAL_DURATIONColumn {
                get {
                    return this.columnREKAP_TOTAL_DURATION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REFEREE_PRICEColumn {
                get {
                    return this.columnREFEREE_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REFEREE_PRICE_VIPColumn {
                get {
                    return this.columnREFEREE_PRICE_VIP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_BONUSColumn {
                get {
                    return this.columnREKAP_BONUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_COMMISSIONRow this[int index] {
                get {
                    return ((T_REKAP_COMMISSIONRow)(this.Rows[index]));
                }
            }
            
            public event T_REKAP_COMMISSIONRowChangeEventHandler T_REKAP_COMMISSIONRowChanging;
            
            public event T_REKAP_COMMISSIONRowChangeEventHandler T_REKAP_COMMISSIONRowChanged;
            
            public event T_REKAP_COMMISSIONRowChangeEventHandler T_REKAP_COMMISSIONRowDeleting;
            
            public event T_REKAP_COMMISSIONRowChangeEventHandler T_REKAP_COMMISSIONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_REKAP_COMMISSIONRow(T_REKAP_COMMISSIONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_COMMISSIONRow AddT_REKAP_COMMISSIONRow(System.DateTime REKAP_DATE_FROM, System.DateTime REKAP_DATE_TO, string EMPLOYEE_ID, decimal REKAP_TOTAL_DURATION, decimal REFEREE_PRICE, decimal REFEREE_PRICE_VIP, decimal REKAP_BONUS, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_REKAP_COMMISSIONRow rowT_REKAP_COMMISSIONRow = ((T_REKAP_COMMISSIONRow)(this.NewRow()));
                rowT_REKAP_COMMISSIONRow.ItemArray = new object[] {
                        REKAP_DATE_FROM,
                        REKAP_DATE_TO,
                        EMPLOYEE_ID,
                        REKAP_TOTAL_DURATION,
                        REFEREE_PRICE,
                        REFEREE_PRICE_VIP,
                        REKAP_BONUS,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_REKAP_COMMISSIONRow);
                return rowT_REKAP_COMMISSIONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_COMMISSIONRow FindByREKAP_DATE_FROMEMPLOYEE_ID(System.DateTime REKAP_DATE_FROM, string EMPLOYEE_ID) {
                return ((T_REKAP_COMMISSIONRow)(this.Rows.Find(new object[] {
                            REKAP_DATE_FROM,
                            EMPLOYEE_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_REKAP_COMMISSIONDataTable cln = ((T_REKAP_COMMISSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_REKAP_COMMISSIONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnREKAP_DATE_FROM = base.Columns["REKAP_DATE_FROM"];
                this.columnREKAP_DATE_TO = base.Columns["REKAP_DATE_TO"];
                this.columnEMPLOYEE_ID = base.Columns["EMPLOYEE_ID"];
                this.columnREKAP_TOTAL_DURATION = base.Columns["REKAP_TOTAL_DURATION"];
                this.columnREFEREE_PRICE = base.Columns["REFEREE_PRICE"];
                this.columnREFEREE_PRICE_VIP = base.Columns["REFEREE_PRICE_VIP"];
                this.columnREKAP_BONUS = base.Columns["REKAP_BONUS"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnREKAP_DATE_FROM = new System.Data.DataColumn("REKAP_DATE_FROM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_DATE_FROM);
                this.columnREKAP_DATE_TO = new System.Data.DataColumn("REKAP_DATE_TO", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_DATE_TO);
                this.columnEMPLOYEE_ID = new System.Data.DataColumn("EMPLOYEE_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ID);
                this.columnREKAP_TOTAL_DURATION = new System.Data.DataColumn("REKAP_TOTAL_DURATION", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_TOTAL_DURATION);
                this.columnREFEREE_PRICE = new System.Data.DataColumn("REFEREE_PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFEREE_PRICE);
                this.columnREFEREE_PRICE_VIP = new System.Data.DataColumn("REFEREE_PRICE_VIP", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFEREE_PRICE_VIP);
                this.columnREKAP_BONUS = new System.Data.DataColumn("REKAP_BONUS", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_BONUS);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnREKAP_DATE_FROM,
                                this.columnEMPLOYEE_ID}, true));
                this.columnREKAP_DATE_FROM.AllowDBNull = false;
                this.columnEMPLOYEE_ID.AllowDBNull = false;
                this.columnEMPLOYEE_ID.MaxLength = 20;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_COMMISSIONRow NewT_REKAP_COMMISSIONRow() {
                return ((T_REKAP_COMMISSIONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_REKAP_COMMISSIONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_REKAP_COMMISSIONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_REKAP_COMMISSIONRowChanged != null)) {
                    this.T_REKAP_COMMISSIONRowChanged(this, new T_REKAP_COMMISSIONRowChangeEvent(((T_REKAP_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_REKAP_COMMISSIONRowChanging != null)) {
                    this.T_REKAP_COMMISSIONRowChanging(this, new T_REKAP_COMMISSIONRowChangeEvent(((T_REKAP_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_REKAP_COMMISSIONRowDeleted != null)) {
                    this.T_REKAP_COMMISSIONRowDeleted(this, new T_REKAP_COMMISSIONRowChangeEvent(((T_REKAP_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_REKAP_COMMISSIONRowDeleting != null)) {
                    this.T_REKAP_COMMISSIONRowDeleting(this, new T_REKAP_COMMISSIONRowChangeEvent(((T_REKAP_COMMISSIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_REKAP_COMMISSIONRow(T_REKAP_COMMISSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_REKAP_COMMISSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_REKAP_SUB_ACCOUNTDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnREKAP_SUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnREKAP_SUB_ACCOUNT_PERIODE;
            
            private System.Data.DataColumn columnACCOUNT_ID;
            
            private System.Data.DataColumn columnSUB_ACCOUNT_ID;
            
            private System.Data.DataColumn columnREKAP_SUBACCOUNT_SALDO;
            
            private System.Data.DataColumn columnREKAP_SUBACCOUNT_DESC;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_SUB_ACCOUNTDataTable() {
                this.TableName = "T_REKAP_SUB_ACCOUNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_REKAP_SUB_ACCOUNTDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_REKAP_SUB_ACCOUNTDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnREKAP_SUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_SUB_ACCOUNT_PERIODEColumn {
                get {
                    return this.columnREKAP_SUB_ACCOUNT_PERIODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ACCOUNT_IDColumn {
                get {
                    return this.columnACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUB_ACCOUNT_IDColumn {
                get {
                    return this.columnSUB_ACCOUNT_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_SUBACCOUNT_SALDOColumn {
                get {
                    return this.columnREKAP_SUBACCOUNT_SALDO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_SUBACCOUNT_DESCColumn {
                get {
                    return this.columnREKAP_SUBACCOUNT_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_SUB_ACCOUNTRow this[int index] {
                get {
                    return ((T_REKAP_SUB_ACCOUNTRow)(this.Rows[index]));
                }
            }
            
            public event T_REKAP_SUB_ACCOUNTRowChangeEventHandler T_REKAP_SUB_ACCOUNTRowChanging;
            
            public event T_REKAP_SUB_ACCOUNTRowChangeEventHandler T_REKAP_SUB_ACCOUNTRowChanged;
            
            public event T_REKAP_SUB_ACCOUNTRowChangeEventHandler T_REKAP_SUB_ACCOUNTRowDeleting;
            
            public event T_REKAP_SUB_ACCOUNTRowChangeEventHandler T_REKAP_SUB_ACCOUNTRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_REKAP_SUB_ACCOUNTRow(T_REKAP_SUB_ACCOUNTRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_SUB_ACCOUNTRow AddT_REKAP_SUB_ACCOUNTRow(string REKAP_SUB_ACCOUNT_PERIODE, string ACCOUNT_ID, string SUB_ACCOUNT_ID, decimal REKAP_SUBACCOUNT_SALDO, string REKAP_SUBACCOUNT_DESC, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_REKAP_SUB_ACCOUNTRow rowT_REKAP_SUB_ACCOUNTRow = ((T_REKAP_SUB_ACCOUNTRow)(this.NewRow()));
                rowT_REKAP_SUB_ACCOUNTRow.ItemArray = new object[] {
                        null,
                        REKAP_SUB_ACCOUNT_PERIODE,
                        ACCOUNT_ID,
                        SUB_ACCOUNT_ID,
                        REKAP_SUBACCOUNT_SALDO,
                        REKAP_SUBACCOUNT_DESC,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_REKAP_SUB_ACCOUNTRow);
                return rowT_REKAP_SUB_ACCOUNTRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_SUB_ACCOUNTRow FindByREKAP_SUB_ACCOUNT_ID(decimal REKAP_SUB_ACCOUNT_ID) {
                return ((T_REKAP_SUB_ACCOUNTRow)(this.Rows.Find(new object[] {
                            REKAP_SUB_ACCOUNT_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_REKAP_SUB_ACCOUNTDataTable cln = ((T_REKAP_SUB_ACCOUNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_REKAP_SUB_ACCOUNTDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnREKAP_SUB_ACCOUNT_ID = base.Columns["REKAP_SUB_ACCOUNT_ID"];
                this.columnREKAP_SUB_ACCOUNT_PERIODE = base.Columns["REKAP_SUB_ACCOUNT_PERIODE"];
                this.columnACCOUNT_ID = base.Columns["ACCOUNT_ID"];
                this.columnSUB_ACCOUNT_ID = base.Columns["SUB_ACCOUNT_ID"];
                this.columnREKAP_SUBACCOUNT_SALDO = base.Columns["REKAP_SUBACCOUNT_SALDO"];
                this.columnREKAP_SUBACCOUNT_DESC = base.Columns["REKAP_SUBACCOUNT_DESC"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnREKAP_SUB_ACCOUNT_ID = new System.Data.DataColumn("REKAP_SUB_ACCOUNT_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_SUB_ACCOUNT_ID);
                this.columnREKAP_SUB_ACCOUNT_PERIODE = new System.Data.DataColumn("REKAP_SUB_ACCOUNT_PERIODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_SUB_ACCOUNT_PERIODE);
                this.columnACCOUNT_ID = new System.Data.DataColumn("ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_ID);
                this.columnSUB_ACCOUNT_ID = new System.Data.DataColumn("SUB_ACCOUNT_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_ACCOUNT_ID);
                this.columnREKAP_SUBACCOUNT_SALDO = new System.Data.DataColumn("REKAP_SUBACCOUNT_SALDO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_SUBACCOUNT_SALDO);
                this.columnREKAP_SUBACCOUNT_DESC = new System.Data.DataColumn("REKAP_SUBACCOUNT_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_SUBACCOUNT_DESC);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnREKAP_SUB_ACCOUNT_ID}, true));
                this.columnREKAP_SUB_ACCOUNT_ID.AutoIncrement = true;
                this.columnREKAP_SUB_ACCOUNT_ID.AllowDBNull = false;
                this.columnREKAP_SUB_ACCOUNT_ID.ReadOnly = true;
                this.columnREKAP_SUB_ACCOUNT_ID.Unique = true;
                this.columnREKAP_SUB_ACCOUNT_PERIODE.MaxLength = 50;
                this.columnACCOUNT_ID.MaxLength = 50;
                this.columnSUB_ACCOUNT_ID.MaxLength = 50;
                this.columnREKAP_SUBACCOUNT_DESC.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_SUB_ACCOUNTRow NewT_REKAP_SUB_ACCOUNTRow() {
                return ((T_REKAP_SUB_ACCOUNTRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_REKAP_SUB_ACCOUNTRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_REKAP_SUB_ACCOUNTRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_REKAP_SUB_ACCOUNTRowChanged != null)) {
                    this.T_REKAP_SUB_ACCOUNTRowChanged(this, new T_REKAP_SUB_ACCOUNTRowChangeEvent(((T_REKAP_SUB_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_REKAP_SUB_ACCOUNTRowChanging != null)) {
                    this.T_REKAP_SUB_ACCOUNTRowChanging(this, new T_REKAP_SUB_ACCOUNTRowChangeEvent(((T_REKAP_SUB_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_REKAP_SUB_ACCOUNTRowDeleted != null)) {
                    this.T_REKAP_SUB_ACCOUNTRowDeleted(this, new T_REKAP_SUB_ACCOUNTRowChangeEvent(((T_REKAP_SUB_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_REKAP_SUB_ACCOUNTRowDeleting != null)) {
                    this.T_REKAP_SUB_ACCOUNTRowDeleting(this, new T_REKAP_SUB_ACCOUNTRowChangeEvent(((T_REKAP_SUB_ACCOUNTRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_REKAP_SUB_ACCOUNTRow(T_REKAP_SUB_ACCOUNTRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_REKAP_SUB_ACCOUNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_REKAP_TRANSACTIONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnREKAP_DATE_FROM;
            
            private System.Data.DataColumn columnREKAP_DATE_TO;
            
            private System.Data.DataColumn columnDESK_ID;
            
            private System.Data.DataColumn columnTOTAL_SALES;
            
            private System.Data.DataColumn columnTOTAL_SALES_VIP;
            
            private System.Data.DataColumn columnTOTAL_PURCHASE;
            
            private System.Data.DataColumn columnTOTAL_RETUR_SALES;
            
            private System.Data.DataColumn columnTOTAL_RETUR_SALES_VIP;
            
            private System.Data.DataColumn columnTOTAL_RETUR_PURCHASE;
            
            private System.Data.DataColumn columnTOTAL_CORRECTION;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_TRANSACTIONDataTable() {
                this.TableName = "T_REKAP_TRANSACTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_REKAP_TRANSACTIONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_REKAP_TRANSACTIONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_DATE_FROMColumn {
                get {
                    return this.columnREKAP_DATE_FROM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REKAP_DATE_TOColumn {
                get {
                    return this.columnREKAP_DATE_TO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESK_IDColumn {
                get {
                    return this.columnDESK_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTAL_SALESColumn {
                get {
                    return this.columnTOTAL_SALES;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTAL_SALES_VIPColumn {
                get {
                    return this.columnTOTAL_SALES_VIP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTAL_PURCHASEColumn {
                get {
                    return this.columnTOTAL_PURCHASE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTAL_RETUR_SALESColumn {
                get {
                    return this.columnTOTAL_RETUR_SALES;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTAL_RETUR_SALES_VIPColumn {
                get {
                    return this.columnTOTAL_RETUR_SALES_VIP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTAL_RETUR_PURCHASEColumn {
                get {
                    return this.columnTOTAL_RETUR_PURCHASE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTAL_CORRECTIONColumn {
                get {
                    return this.columnTOTAL_CORRECTION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_TRANSACTIONRow this[int index] {
                get {
                    return ((T_REKAP_TRANSACTIONRow)(this.Rows[index]));
                }
            }
            
            public event T_REKAP_TRANSACTIONRowChangeEventHandler T_REKAP_TRANSACTIONRowChanging;
            
            public event T_REKAP_TRANSACTIONRowChangeEventHandler T_REKAP_TRANSACTIONRowChanged;
            
            public event T_REKAP_TRANSACTIONRowChangeEventHandler T_REKAP_TRANSACTIONRowDeleting;
            
            public event T_REKAP_TRANSACTIONRowChangeEventHandler T_REKAP_TRANSACTIONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_REKAP_TRANSACTIONRow(T_REKAP_TRANSACTIONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_TRANSACTIONRow AddT_REKAP_TRANSACTIONRow(System.DateTime REKAP_DATE_FROM, System.DateTime REKAP_DATE_TO, string DESK_ID, decimal TOTAL_SALES, decimal TOTAL_SALES_VIP, decimal TOTAL_PURCHASE, decimal TOTAL_RETUR_SALES, decimal TOTAL_RETUR_SALES_VIP, decimal TOTAL_RETUR_PURCHASE, decimal TOTAL_CORRECTION, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_REKAP_TRANSACTIONRow rowT_REKAP_TRANSACTIONRow = ((T_REKAP_TRANSACTIONRow)(this.NewRow()));
                rowT_REKAP_TRANSACTIONRow.ItemArray = new object[] {
                        REKAP_DATE_FROM,
                        REKAP_DATE_TO,
                        DESK_ID,
                        TOTAL_SALES,
                        TOTAL_SALES_VIP,
                        TOTAL_PURCHASE,
                        TOTAL_RETUR_SALES,
                        TOTAL_RETUR_SALES_VIP,
                        TOTAL_RETUR_PURCHASE,
                        TOTAL_CORRECTION,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_REKAP_TRANSACTIONRow);
                return rowT_REKAP_TRANSACTIONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_TRANSACTIONRow FindByREKAP_DATE_FROM(System.DateTime REKAP_DATE_FROM) {
                return ((T_REKAP_TRANSACTIONRow)(this.Rows.Find(new object[] {
                            REKAP_DATE_FROM})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_REKAP_TRANSACTIONDataTable cln = ((T_REKAP_TRANSACTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_REKAP_TRANSACTIONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnREKAP_DATE_FROM = base.Columns["REKAP_DATE_FROM"];
                this.columnREKAP_DATE_TO = base.Columns["REKAP_DATE_TO"];
                this.columnDESK_ID = base.Columns["DESK_ID"];
                this.columnTOTAL_SALES = base.Columns["TOTAL_SALES"];
                this.columnTOTAL_SALES_VIP = base.Columns["TOTAL_SALES_VIP"];
                this.columnTOTAL_PURCHASE = base.Columns["TOTAL_PURCHASE"];
                this.columnTOTAL_RETUR_SALES = base.Columns["TOTAL_RETUR_SALES"];
                this.columnTOTAL_RETUR_SALES_VIP = base.Columns["TOTAL_RETUR_SALES_VIP"];
                this.columnTOTAL_RETUR_PURCHASE = base.Columns["TOTAL_RETUR_PURCHASE"];
                this.columnTOTAL_CORRECTION = base.Columns["TOTAL_CORRECTION"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnREKAP_DATE_FROM = new System.Data.DataColumn("REKAP_DATE_FROM", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_DATE_FROM);
                this.columnREKAP_DATE_TO = new System.Data.DataColumn("REKAP_DATE_TO", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREKAP_DATE_TO);
                this.columnDESK_ID = new System.Data.DataColumn("DESK_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESK_ID);
                this.columnTOTAL_SALES = new System.Data.DataColumn("TOTAL_SALES", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_SALES);
                this.columnTOTAL_SALES_VIP = new System.Data.DataColumn("TOTAL_SALES_VIP", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_SALES_VIP);
                this.columnTOTAL_PURCHASE = new System.Data.DataColumn("TOTAL_PURCHASE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_PURCHASE);
                this.columnTOTAL_RETUR_SALES = new System.Data.DataColumn("TOTAL_RETUR_SALES", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_RETUR_SALES);
                this.columnTOTAL_RETUR_SALES_VIP = new System.Data.DataColumn("TOTAL_RETUR_SALES_VIP", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_RETUR_SALES_VIP);
                this.columnTOTAL_RETUR_PURCHASE = new System.Data.DataColumn("TOTAL_RETUR_PURCHASE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_RETUR_PURCHASE);
                this.columnTOTAL_CORRECTION = new System.Data.DataColumn("TOTAL_CORRECTION", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_CORRECTION);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnREKAP_DATE_FROM}, true));
                this.columnREKAP_DATE_FROM.AllowDBNull = false;
                this.columnREKAP_DATE_FROM.Unique = true;
                this.columnDESK_ID.MaxLength = 20;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_TRANSACTIONRow NewT_REKAP_TRANSACTIONRow() {
                return ((T_REKAP_TRANSACTIONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_REKAP_TRANSACTIONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_REKAP_TRANSACTIONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_REKAP_TRANSACTIONRowChanged != null)) {
                    this.T_REKAP_TRANSACTIONRowChanged(this, new T_REKAP_TRANSACTIONRowChangeEvent(((T_REKAP_TRANSACTIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_REKAP_TRANSACTIONRowChanging != null)) {
                    this.T_REKAP_TRANSACTIONRowChanging(this, new T_REKAP_TRANSACTIONRowChangeEvent(((T_REKAP_TRANSACTIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_REKAP_TRANSACTIONRowDeleted != null)) {
                    this.T_REKAP_TRANSACTIONRowDeleted(this, new T_REKAP_TRANSACTIONRowChangeEvent(((T_REKAP_TRANSACTIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_REKAP_TRANSACTIONRowDeleting != null)) {
                    this.T_REKAP_TRANSACTIONRowDeleting(this, new T_REKAP_TRANSACTIONRowChangeEvent(((T_REKAP_TRANSACTIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_REKAP_TRANSACTIONRow(T_REKAP_TRANSACTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_REKAP_TRANSACTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_STOK_CARDDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSTOK_CARD_ID;
            
            private System.Data.DataColumn columnITEM_ID;
            
            private System.Data.DataColumn columnGUDANG_ID;
            
            private System.Data.DataColumn columnSTOK_CARD_DATE;
            
            private System.Data.DataColumn columnTRANSACTION_ID;
            
            private System.Data.DataColumn columnSTOK_CARD_STATUS;
            
            private System.Data.DataColumn columnSTOK_CARD_QUANTITY;
            
            private System.Data.DataColumn columnSTOK_CARD_SALDO;
            
            private System.Data.DataColumn columnSTOK_CARD_PIC;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_STOK_CARDDataTable() {
                this.TableName = "T_STOK_CARD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_STOK_CARDDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_STOK_CARDDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STOK_CARD_IDColumn {
                get {
                    return this.columnSTOK_CARD_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_IDColumn {
                get {
                    return this.columnITEM_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GUDANG_IDColumn {
                get {
                    return this.columnGUDANG_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STOK_CARD_DATEColumn {
                get {
                    return this.columnSTOK_CARD_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_IDColumn {
                get {
                    return this.columnTRANSACTION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STOK_CARD_STATUSColumn {
                get {
                    return this.columnSTOK_CARD_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STOK_CARD_QUANTITYColumn {
                get {
                    return this.columnSTOK_CARD_QUANTITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STOK_CARD_SALDOColumn {
                get {
                    return this.columnSTOK_CARD_SALDO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn STOK_CARD_PICColumn {
                get {
                    return this.columnSTOK_CARD_PIC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_STOK_CARDRow this[int index] {
                get {
                    return ((T_STOK_CARDRow)(this.Rows[index]));
                }
            }
            
            public event T_STOK_CARDRowChangeEventHandler T_STOK_CARDRowChanging;
            
            public event T_STOK_CARDRowChangeEventHandler T_STOK_CARDRowChanged;
            
            public event T_STOK_CARDRowChangeEventHandler T_STOK_CARDRowDeleting;
            
            public event T_STOK_CARDRowChangeEventHandler T_STOK_CARDRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_STOK_CARDRow(T_STOK_CARDRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_STOK_CARDRow AddT_STOK_CARDRow(string ITEM_ID, int GUDANG_ID, System.DateTime STOK_CARD_DATE, decimal TRANSACTION_ID, bool STOK_CARD_STATUS, decimal STOK_CARD_QUANTITY, decimal STOK_CARD_SALDO, string STOK_CARD_PIC, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_STOK_CARDRow rowT_STOK_CARDRow = ((T_STOK_CARDRow)(this.NewRow()));
                rowT_STOK_CARDRow.ItemArray = new object[] {
                        null,
                        ITEM_ID,
                        GUDANG_ID,
                        STOK_CARD_DATE,
                        TRANSACTION_ID,
                        STOK_CARD_STATUS,
                        STOK_CARD_QUANTITY,
                        STOK_CARD_SALDO,
                        STOK_CARD_PIC,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_STOK_CARDRow);
                return rowT_STOK_CARDRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_STOK_CARDRow FindBySTOK_CARD_ID(decimal STOK_CARD_ID) {
                return ((T_STOK_CARDRow)(this.Rows.Find(new object[] {
                            STOK_CARD_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_STOK_CARDDataTable cln = ((T_STOK_CARDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_STOK_CARDDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSTOK_CARD_ID = base.Columns["STOK_CARD_ID"];
                this.columnITEM_ID = base.Columns["ITEM_ID"];
                this.columnGUDANG_ID = base.Columns["GUDANG_ID"];
                this.columnSTOK_CARD_DATE = base.Columns["STOK_CARD_DATE"];
                this.columnTRANSACTION_ID = base.Columns["TRANSACTION_ID"];
                this.columnSTOK_CARD_STATUS = base.Columns["STOK_CARD_STATUS"];
                this.columnSTOK_CARD_QUANTITY = base.Columns["STOK_CARD_QUANTITY"];
                this.columnSTOK_CARD_SALDO = base.Columns["STOK_CARD_SALDO"];
                this.columnSTOK_CARD_PIC = base.Columns["STOK_CARD_PIC"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSTOK_CARD_ID = new System.Data.DataColumn("STOK_CARD_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOK_CARD_ID);
                this.columnITEM_ID = new System.Data.DataColumn("ITEM_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_ID);
                this.columnGUDANG_ID = new System.Data.DataColumn("GUDANG_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGUDANG_ID);
                this.columnSTOK_CARD_DATE = new System.Data.DataColumn("STOK_CARD_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOK_CARD_DATE);
                this.columnTRANSACTION_ID = new System.Data.DataColumn("TRANSACTION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_ID);
                this.columnSTOK_CARD_STATUS = new System.Data.DataColumn("STOK_CARD_STATUS", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOK_CARD_STATUS);
                this.columnSTOK_CARD_QUANTITY = new System.Data.DataColumn("STOK_CARD_QUANTITY", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOK_CARD_QUANTITY);
                this.columnSTOK_CARD_SALDO = new System.Data.DataColumn("STOK_CARD_SALDO", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOK_CARD_SALDO);
                this.columnSTOK_CARD_PIC = new System.Data.DataColumn("STOK_CARD_PIC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOK_CARD_PIC);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSTOK_CARD_ID}, true));
                this.columnSTOK_CARD_ID.AutoIncrement = true;
                this.columnSTOK_CARD_ID.AllowDBNull = false;
                this.columnSTOK_CARD_ID.ReadOnly = true;
                this.columnSTOK_CARD_ID.Unique = true;
                this.columnITEM_ID.MaxLength = 50;
                this.columnSTOK_CARD_PIC.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_STOK_CARDRow NewT_STOK_CARDRow() {
                return ((T_STOK_CARDRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_STOK_CARDRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_STOK_CARDRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_STOK_CARDRowChanged != null)) {
                    this.T_STOK_CARDRowChanged(this, new T_STOK_CARDRowChangeEvent(((T_STOK_CARDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_STOK_CARDRowChanging != null)) {
                    this.T_STOK_CARDRowChanging(this, new T_STOK_CARDRowChangeEvent(((T_STOK_CARDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_STOK_CARDRowDeleted != null)) {
                    this.T_STOK_CARDRowDeleted(this, new T_STOK_CARDRowChangeEvent(((T_STOK_CARDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_STOK_CARDRowDeleting != null)) {
                    this.T_STOK_CARDRowDeleting(this, new T_STOK_CARDRowChangeEvent(((T_STOK_CARDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_STOK_CARDRow(T_STOK_CARDRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_STOK_CARDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_TRANSACTIONDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTRANSACTION_ID;
            
            private System.Data.DataColumn columnCURRENCY_ID;
            
            private System.Data.DataColumn columnGUDANG_ID;
            
            private System.Data.DataColumn columnTRANSACTION_REFERENCE_ID;
            
            private System.Data.DataColumn columnTRANSACTION_FACTUR;
            
            private System.Data.DataColumn columnTRANSACTION_BY;
            
            private System.Data.DataColumn columnTRANSACTION_BY_ADDRESS;
            
            private System.Data.DataColumn columnTRANSACTION_BY_PHONE;
            
            private System.Data.DataColumn columnTRANSACTION_BY_NAME;
            
            private System.Data.DataColumn columnTRANSACTION_DATE;
            
            private System.Data.DataColumn columnTRANSACTION_SUB_TOTAL;
            
            private System.Data.DataColumn columnTRANSACTION_DISC;
            
            private System.Data.DataColumn columnTRANSACTION_USE_PPN;
            
            private System.Data.DataColumn columnTRANSACTION_PPN;
            
            private System.Data.DataColumn columnTRANSACTION_GRAND_TOTAL;
            
            private System.Data.DataColumn columnTRANSACTION_PAID;
            
            private System.Data.DataColumn columnTRANSACTION_SISA;
            
            private System.Data.DataColumn columnTRANSACTION_STATUS;
            
            private System.Data.DataColumn columnTRANSACTION_DESK;
            
            private System.Data.DataColumn columnTRANSACTION_DESC;
            
            private System.Data.DataColumn columnTRANSACTION_DESC2;
            
            private System.Data.DataColumn columnEMPLOYEE_ID;
            
            private System.Data.DataColumn columnEMPLOYEE_ID2;
            
            private System.Data.DataColumn columnTRANSACTION_PAYMENT;
            
            private System.Data.DataColumn columnTRANSACTION_COMMISION;
            
            private System.Data.DataColumn columnTRANSACTION_POTONGAN;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTIONDataTable() {
                this.TableName = "T_TRANSACTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TRANSACTIONDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_TRANSACTIONDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_IDColumn {
                get {
                    return this.columnTRANSACTION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CURRENCY_IDColumn {
                get {
                    return this.columnCURRENCY_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GUDANG_IDColumn {
                get {
                    return this.columnGUDANG_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_REFERENCE_IDColumn {
                get {
                    return this.columnTRANSACTION_REFERENCE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_FACTURColumn {
                get {
                    return this.columnTRANSACTION_FACTUR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_BYColumn {
                get {
                    return this.columnTRANSACTION_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_BY_ADDRESSColumn {
                get {
                    return this.columnTRANSACTION_BY_ADDRESS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_BY_PHONEColumn {
                get {
                    return this.columnTRANSACTION_BY_PHONE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_BY_NAMEColumn {
                get {
                    return this.columnTRANSACTION_BY_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_DATEColumn {
                get {
                    return this.columnTRANSACTION_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_SUB_TOTALColumn {
                get {
                    return this.columnTRANSACTION_SUB_TOTAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_DISCColumn {
                get {
                    return this.columnTRANSACTION_DISC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_USE_PPNColumn {
                get {
                    return this.columnTRANSACTION_USE_PPN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_PPNColumn {
                get {
                    return this.columnTRANSACTION_PPN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_GRAND_TOTALColumn {
                get {
                    return this.columnTRANSACTION_GRAND_TOTAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_PAIDColumn {
                get {
                    return this.columnTRANSACTION_PAID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_SISAColumn {
                get {
                    return this.columnTRANSACTION_SISA;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_STATUSColumn {
                get {
                    return this.columnTRANSACTION_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_DESKColumn {
                get {
                    return this.columnTRANSACTION_DESK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_DESCColumn {
                get {
                    return this.columnTRANSACTION_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_DESC2Column {
                get {
                    return this.columnTRANSACTION_DESC2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_IDColumn {
                get {
                    return this.columnEMPLOYEE_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EMPLOYEE_ID2Column {
                get {
                    return this.columnEMPLOYEE_ID2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_PAYMENTColumn {
                get {
                    return this.columnTRANSACTION_PAYMENT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_COMMISIONColumn {
                get {
                    return this.columnTRANSACTION_COMMISION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_POTONGANColumn {
                get {
                    return this.columnTRANSACTION_POTONGAN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTIONRow this[int index] {
                get {
                    return ((T_TRANSACTIONRow)(this.Rows[index]));
                }
            }
            
            public event T_TRANSACTIONRowChangeEventHandler T_TRANSACTIONRowChanging;
            
            public event T_TRANSACTIONRowChangeEventHandler T_TRANSACTIONRowChanged;
            
            public event T_TRANSACTIONRowChangeEventHandler T_TRANSACTIONRowDeleting;
            
            public event T_TRANSACTIONRowChangeEventHandler T_TRANSACTIONRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_TRANSACTIONRow(T_TRANSACTIONRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTIONRow AddT_TRANSACTIONRow(
                        decimal TRANSACTION_ID, 
                        string CURRENCY_ID, 
                        int GUDANG_ID, 
                        decimal TRANSACTION_REFERENCE_ID, 
                        string TRANSACTION_FACTUR, 
                        string TRANSACTION_BY, 
                        string TRANSACTION_BY_ADDRESS, 
                        string TRANSACTION_BY_PHONE, 
                        string TRANSACTION_BY_NAME, 
                        System.DateTime TRANSACTION_DATE, 
                        decimal TRANSACTION_SUB_TOTAL, 
                        decimal TRANSACTION_DISC, 
                        bool TRANSACTION_USE_PPN, 
                        decimal TRANSACTION_PPN, 
                        decimal TRANSACTION_GRAND_TOTAL, 
                        decimal TRANSACTION_PAID, 
                        decimal TRANSACTION_SISA, 
                        string TRANSACTION_STATUS, 
                        string TRANSACTION_DESK, 
                        string TRANSACTION_DESC, 
                        string TRANSACTION_DESC2, 
                        string EMPLOYEE_ID, 
                        string EMPLOYEE_ID2, 
                        string TRANSACTION_PAYMENT, 
                        decimal TRANSACTION_COMMISION, 
                        decimal TRANSACTION_POTONGAN, 
                        string MODIFIED_BY, 
                        System.DateTime MODIFIED_DATE) {
                T_TRANSACTIONRow rowT_TRANSACTIONRow = ((T_TRANSACTIONRow)(this.NewRow()));
                rowT_TRANSACTIONRow.ItemArray = new object[] {
                        TRANSACTION_ID,
                        CURRENCY_ID,
                        GUDANG_ID,
                        TRANSACTION_REFERENCE_ID,
                        TRANSACTION_FACTUR,
                        TRANSACTION_BY,
                        TRANSACTION_BY_ADDRESS,
                        TRANSACTION_BY_PHONE,
                        TRANSACTION_BY_NAME,
                        TRANSACTION_DATE,
                        TRANSACTION_SUB_TOTAL,
                        TRANSACTION_DISC,
                        TRANSACTION_USE_PPN,
                        TRANSACTION_PPN,
                        TRANSACTION_GRAND_TOTAL,
                        TRANSACTION_PAID,
                        TRANSACTION_SISA,
                        TRANSACTION_STATUS,
                        TRANSACTION_DESK,
                        TRANSACTION_DESC,
                        TRANSACTION_DESC2,
                        EMPLOYEE_ID,
                        EMPLOYEE_ID2,
                        TRANSACTION_PAYMENT,
                        TRANSACTION_COMMISION,
                        TRANSACTION_POTONGAN,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_TRANSACTIONRow);
                return rowT_TRANSACTIONRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTIONRow FindByTRANSACTION_ID(decimal TRANSACTION_ID) {
                return ((T_TRANSACTIONRow)(this.Rows.Find(new object[] {
                            TRANSACTION_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_TRANSACTIONDataTable cln = ((T_TRANSACTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_TRANSACTIONDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTRANSACTION_ID = base.Columns["TRANSACTION_ID"];
                this.columnCURRENCY_ID = base.Columns["CURRENCY_ID"];
                this.columnGUDANG_ID = base.Columns["GUDANG_ID"];
                this.columnTRANSACTION_REFERENCE_ID = base.Columns["TRANSACTION_REFERENCE_ID"];
                this.columnTRANSACTION_FACTUR = base.Columns["TRANSACTION_FACTUR"];
                this.columnTRANSACTION_BY = base.Columns["TRANSACTION_BY"];
                this.columnTRANSACTION_BY_ADDRESS = base.Columns["TRANSACTION_BY_ADDRESS"];
                this.columnTRANSACTION_BY_PHONE = base.Columns["TRANSACTION_BY_PHONE"];
                this.columnTRANSACTION_BY_NAME = base.Columns["TRANSACTION_BY_NAME"];
                this.columnTRANSACTION_DATE = base.Columns["TRANSACTION_DATE"];
                this.columnTRANSACTION_SUB_TOTAL = base.Columns["TRANSACTION_SUB_TOTAL"];
                this.columnTRANSACTION_DISC = base.Columns["TRANSACTION_DISC"];
                this.columnTRANSACTION_USE_PPN = base.Columns["TRANSACTION_USE_PPN"];
                this.columnTRANSACTION_PPN = base.Columns["TRANSACTION_PPN"];
                this.columnTRANSACTION_GRAND_TOTAL = base.Columns["TRANSACTION_GRAND_TOTAL"];
                this.columnTRANSACTION_PAID = base.Columns["TRANSACTION_PAID"];
                this.columnTRANSACTION_SISA = base.Columns["TRANSACTION_SISA"];
                this.columnTRANSACTION_STATUS = base.Columns["TRANSACTION_STATUS"];
                this.columnTRANSACTION_DESK = base.Columns["TRANSACTION_DESK"];
                this.columnTRANSACTION_DESC = base.Columns["TRANSACTION_DESC"];
                this.columnTRANSACTION_DESC2 = base.Columns["TRANSACTION_DESC2"];
                this.columnEMPLOYEE_ID = base.Columns["EMPLOYEE_ID"];
                this.columnEMPLOYEE_ID2 = base.Columns["EMPLOYEE_ID2"];
                this.columnTRANSACTION_PAYMENT = base.Columns["TRANSACTION_PAYMENT"];
                this.columnTRANSACTION_COMMISION = base.Columns["TRANSACTION_COMMISION"];
                this.columnTRANSACTION_POTONGAN = base.Columns["TRANSACTION_POTONGAN"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTRANSACTION_ID = new System.Data.DataColumn("TRANSACTION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_ID);
                this.columnCURRENCY_ID = new System.Data.DataColumn("CURRENCY_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENCY_ID);
                this.columnGUDANG_ID = new System.Data.DataColumn("GUDANG_ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGUDANG_ID);
                this.columnTRANSACTION_REFERENCE_ID = new System.Data.DataColumn("TRANSACTION_REFERENCE_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_REFERENCE_ID);
                this.columnTRANSACTION_FACTUR = new System.Data.DataColumn("TRANSACTION_FACTUR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_FACTUR);
                this.columnTRANSACTION_BY = new System.Data.DataColumn("TRANSACTION_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_BY);
                this.columnTRANSACTION_BY_ADDRESS = new System.Data.DataColumn("TRANSACTION_BY_ADDRESS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_BY_ADDRESS);
                this.columnTRANSACTION_BY_PHONE = new System.Data.DataColumn("TRANSACTION_BY_PHONE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_BY_PHONE);
                this.columnTRANSACTION_BY_NAME = new System.Data.DataColumn("TRANSACTION_BY_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_BY_NAME);
                this.columnTRANSACTION_DATE = new System.Data.DataColumn("TRANSACTION_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_DATE);
                this.columnTRANSACTION_SUB_TOTAL = new System.Data.DataColumn("TRANSACTION_SUB_TOTAL", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_SUB_TOTAL);
                this.columnTRANSACTION_DISC = new System.Data.DataColumn("TRANSACTION_DISC", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_DISC);
                this.columnTRANSACTION_USE_PPN = new System.Data.DataColumn("TRANSACTION_USE_PPN", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_USE_PPN);
                this.columnTRANSACTION_PPN = new System.Data.DataColumn("TRANSACTION_PPN", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_PPN);
                this.columnTRANSACTION_GRAND_TOTAL = new System.Data.DataColumn("TRANSACTION_GRAND_TOTAL", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_GRAND_TOTAL);
                this.columnTRANSACTION_PAID = new System.Data.DataColumn("TRANSACTION_PAID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_PAID);
                this.columnTRANSACTION_SISA = new System.Data.DataColumn("TRANSACTION_SISA", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_SISA);
                this.columnTRANSACTION_STATUS = new System.Data.DataColumn("TRANSACTION_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_STATUS);
                this.columnTRANSACTION_DESK = new System.Data.DataColumn("TRANSACTION_DESK", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_DESK);
                this.columnTRANSACTION_DESC = new System.Data.DataColumn("TRANSACTION_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_DESC);
                this.columnTRANSACTION_DESC2 = new System.Data.DataColumn("TRANSACTION_DESC2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_DESC2);
                this.columnEMPLOYEE_ID = new System.Data.DataColumn("EMPLOYEE_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ID);
                this.columnEMPLOYEE_ID2 = new System.Data.DataColumn("EMPLOYEE_ID2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ID2);
                this.columnTRANSACTION_PAYMENT = new System.Data.DataColumn("TRANSACTION_PAYMENT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_PAYMENT);
                this.columnTRANSACTION_COMMISION = new System.Data.DataColumn("TRANSACTION_COMMISION", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_COMMISION);
                this.columnTRANSACTION_POTONGAN = new System.Data.DataColumn("TRANSACTION_POTONGAN", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_POTONGAN);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTRANSACTION_ID}, true));
                this.columnTRANSACTION_ID.AllowDBNull = false;
                this.columnTRANSACTION_ID.Unique = true;
                this.columnCURRENCY_ID.MaxLength = 50;
                this.columnTRANSACTION_FACTUR.MaxLength = 50;
                this.columnTRANSACTION_BY.MaxLength = 50;
                this.columnTRANSACTION_BY_ADDRESS.MaxLength = 50;
                this.columnTRANSACTION_BY_PHONE.MaxLength = 50;
                this.columnTRANSACTION_BY_NAME.MaxLength = 50;
                this.columnTRANSACTION_STATUS.MaxLength = 50;
                this.columnTRANSACTION_DESK.MaxLength = 50;
                this.columnTRANSACTION_DESC.MaxLength = 50;
                this.columnTRANSACTION_DESC2.MaxLength = 50;
                this.columnEMPLOYEE_ID.MaxLength = 50;
                this.columnEMPLOYEE_ID2.MaxLength = 50;
                this.columnTRANSACTION_PAYMENT.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTIONRow NewT_TRANSACTIONRow() {
                return ((T_TRANSACTIONRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_TRANSACTIONRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_TRANSACTIONRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_TRANSACTIONRowChanged != null)) {
                    this.T_TRANSACTIONRowChanged(this, new T_TRANSACTIONRowChangeEvent(((T_TRANSACTIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_TRANSACTIONRowChanging != null)) {
                    this.T_TRANSACTIONRowChanging(this, new T_TRANSACTIONRowChangeEvent(((T_TRANSACTIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_TRANSACTIONRowDeleted != null)) {
                    this.T_TRANSACTIONRowDeleted(this, new T_TRANSACTIONRowChangeEvent(((T_TRANSACTIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_TRANSACTIONRowDeleting != null)) {
                    this.T_TRANSACTIONRowDeleting(this, new T_TRANSACTIONRowChangeEvent(((T_TRANSACTIONRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_TRANSACTIONRow(T_TRANSACTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_TRANSACTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_TRANSACTION_SERVICEDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTRANSACTION_ID;
            
            private System.Data.DataColumn columnSERVICE_FIRST_CONDITION;
            
            private System.Data.DataColumn columnSERVICE_REQUEST_DATE;
            
            private System.Data.DataColumn columnSERVICE_START_WORK;
            
            private System.Data.DataColumn columnSERVICE_END_WORK;
            
            private System.Data.DataColumn columnSERVICE_PIC;
            
            private System.Data.DataColumn columnSERVICE_TYPE;
            
            private System.Data.DataColumn columnSERVICE_COMPLAIN;
            
            private System.Data.DataColumn columnSERVICE_DESC;
            
            private System.Data.DataColumn columnSERVICE_CHARGE;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_SERVICEDataTable() {
                this.TableName = "T_TRANSACTION_SERVICE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TRANSACTION_SERVICEDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_TRANSACTION_SERVICEDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_IDColumn {
                get {
                    return this.columnTRANSACTION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_FIRST_CONDITIONColumn {
                get {
                    return this.columnSERVICE_FIRST_CONDITION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_REQUEST_DATEColumn {
                get {
                    return this.columnSERVICE_REQUEST_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_START_WORKColumn {
                get {
                    return this.columnSERVICE_START_WORK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_END_WORKColumn {
                get {
                    return this.columnSERVICE_END_WORK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_PICColumn {
                get {
                    return this.columnSERVICE_PIC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_TYPEColumn {
                get {
                    return this.columnSERVICE_TYPE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_COMPLAINColumn {
                get {
                    return this.columnSERVICE_COMPLAIN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_DESCColumn {
                get {
                    return this.columnSERVICE_DESC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERVICE_CHARGEColumn {
                get {
                    return this.columnSERVICE_CHARGE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_SERVICERow this[int index] {
                get {
                    return ((T_TRANSACTION_SERVICERow)(this.Rows[index]));
                }
            }
            
            public event T_TRANSACTION_SERVICERowChangeEventHandler T_TRANSACTION_SERVICERowChanging;
            
            public event T_TRANSACTION_SERVICERowChangeEventHandler T_TRANSACTION_SERVICERowChanged;
            
            public event T_TRANSACTION_SERVICERowChangeEventHandler T_TRANSACTION_SERVICERowDeleting;
            
            public event T_TRANSACTION_SERVICERowChangeEventHandler T_TRANSACTION_SERVICERowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_TRANSACTION_SERVICERow(T_TRANSACTION_SERVICERow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_SERVICERow AddT_TRANSACTION_SERVICERow(decimal TRANSACTION_ID, string SERVICE_FIRST_CONDITION, System.DateTime SERVICE_REQUEST_DATE, System.DateTime SERVICE_START_WORK, System.DateTime SERVICE_END_WORK, string SERVICE_PIC, string SERVICE_TYPE, string SERVICE_COMPLAIN, string SERVICE_DESC, decimal SERVICE_CHARGE, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_TRANSACTION_SERVICERow rowT_TRANSACTION_SERVICERow = ((T_TRANSACTION_SERVICERow)(this.NewRow()));
                rowT_TRANSACTION_SERVICERow.ItemArray = new object[] {
                        TRANSACTION_ID,
                        SERVICE_FIRST_CONDITION,
                        SERVICE_REQUEST_DATE,
                        SERVICE_START_WORK,
                        SERVICE_END_WORK,
                        SERVICE_PIC,
                        SERVICE_TYPE,
                        SERVICE_COMPLAIN,
                        SERVICE_DESC,
                        SERVICE_CHARGE,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_TRANSACTION_SERVICERow);
                return rowT_TRANSACTION_SERVICERow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_SERVICERow FindByTRANSACTION_ID(decimal TRANSACTION_ID) {
                return ((T_TRANSACTION_SERVICERow)(this.Rows.Find(new object[] {
                            TRANSACTION_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_TRANSACTION_SERVICEDataTable cln = ((T_TRANSACTION_SERVICEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_TRANSACTION_SERVICEDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTRANSACTION_ID = base.Columns["TRANSACTION_ID"];
                this.columnSERVICE_FIRST_CONDITION = base.Columns["SERVICE_FIRST_CONDITION"];
                this.columnSERVICE_REQUEST_DATE = base.Columns["SERVICE_REQUEST_DATE"];
                this.columnSERVICE_START_WORK = base.Columns["SERVICE_START_WORK"];
                this.columnSERVICE_END_WORK = base.Columns["SERVICE_END_WORK"];
                this.columnSERVICE_PIC = base.Columns["SERVICE_PIC"];
                this.columnSERVICE_TYPE = base.Columns["SERVICE_TYPE"];
                this.columnSERVICE_COMPLAIN = base.Columns["SERVICE_COMPLAIN"];
                this.columnSERVICE_DESC = base.Columns["SERVICE_DESC"];
                this.columnSERVICE_CHARGE = base.Columns["SERVICE_CHARGE"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTRANSACTION_ID = new System.Data.DataColumn("TRANSACTION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_ID);
                this.columnSERVICE_FIRST_CONDITION = new System.Data.DataColumn("SERVICE_FIRST_CONDITION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_FIRST_CONDITION);
                this.columnSERVICE_REQUEST_DATE = new System.Data.DataColumn("SERVICE_REQUEST_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_REQUEST_DATE);
                this.columnSERVICE_START_WORK = new System.Data.DataColumn("SERVICE_START_WORK", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_START_WORK);
                this.columnSERVICE_END_WORK = new System.Data.DataColumn("SERVICE_END_WORK", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_END_WORK);
                this.columnSERVICE_PIC = new System.Data.DataColumn("SERVICE_PIC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_PIC);
                this.columnSERVICE_TYPE = new System.Data.DataColumn("SERVICE_TYPE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_TYPE);
                this.columnSERVICE_COMPLAIN = new System.Data.DataColumn("SERVICE_COMPLAIN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_COMPLAIN);
                this.columnSERVICE_DESC = new System.Data.DataColumn("SERVICE_DESC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_DESC);
                this.columnSERVICE_CHARGE = new System.Data.DataColumn("SERVICE_CHARGE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICE_CHARGE);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTRANSACTION_ID}, true));
                this.columnTRANSACTION_ID.AllowDBNull = false;
                this.columnTRANSACTION_ID.Unique = true;
                this.columnSERVICE_FIRST_CONDITION.MaxLength = 50;
                this.columnSERVICE_PIC.MaxLength = 50;
                this.columnSERVICE_TYPE.MaxLength = 50;
                this.columnSERVICE_COMPLAIN.MaxLength = 50;
                this.columnSERVICE_DESC.MaxLength = 50;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_SERVICERow NewT_TRANSACTION_SERVICERow() {
                return ((T_TRANSACTION_SERVICERow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_TRANSACTION_SERVICERow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_TRANSACTION_SERVICERow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_TRANSACTION_SERVICERowChanged != null)) {
                    this.T_TRANSACTION_SERVICERowChanged(this, new T_TRANSACTION_SERVICERowChangeEvent(((T_TRANSACTION_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_TRANSACTION_SERVICERowChanging != null)) {
                    this.T_TRANSACTION_SERVICERowChanging(this, new T_TRANSACTION_SERVICERowChangeEvent(((T_TRANSACTION_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_TRANSACTION_SERVICERowDeleted != null)) {
                    this.T_TRANSACTION_SERVICERowDeleted(this, new T_TRANSACTION_SERVICERowChangeEvent(((T_TRANSACTION_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_TRANSACTION_SERVICERowDeleting != null)) {
                    this.T_TRANSACTION_SERVICERowDeleting(this, new T_TRANSACTION_SERVICERowChangeEvent(((T_TRANSACTION_SERVICERow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_TRANSACTION_SERVICERow(T_TRANSACTION_SERVICERow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_TRANSACTION_SERVICEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_TRANSACTION_DETAILDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTRANSACTION_DETAIL_ID;
            
            private System.Data.DataColumn columnTRANSACTION_ID;
            
            private System.Data.DataColumn columnIS_PACKET;
            
            private System.Data.DataColumn columnITEM_ID;
            
            private System.Data.DataColumn columnQUANTITY;
            
            private System.Data.DataColumn columnPRICE;
            
            private System.Data.DataColumn columnJUMLAH;
            
            private System.Data.DataColumn columnDISC;
            
            private System.Data.DataColumn columnPPN;
            
            private System.Data.DataColumn columnTOTAL;
            
            private System.Data.DataColumn columnDESCRIPTION;
            
            private System.Data.DataColumn columnEXPIRED_DATE;
            
            private System.Data.DataColumn columnCOMMISSION;
            
            private System.Data.DataColumn columnCOST_PRICE;
            
            private System.Data.DataColumn columnMODIFIED_BY;
            
            private System.Data.DataColumn columnMODIFIED_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_DETAILDataTable() {
                this.TableName = "T_TRANSACTION_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TRANSACTION_DETAILDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_TRANSACTION_DETAILDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_DETAIL_IDColumn {
                get {
                    return this.columnTRANSACTION_DETAIL_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANSACTION_IDColumn {
                get {
                    return this.columnTRANSACTION_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IS_PACKETColumn {
                get {
                    return this.columnIS_PACKET;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ITEM_IDColumn {
                get {
                    return this.columnITEM_ID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRICEColumn {
                get {
                    return this.columnPRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JUMLAHColumn {
                get {
                    return this.columnJUMLAH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DISCColumn {
                get {
                    return this.columnDISC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PPNColumn {
                get {
                    return this.columnPPN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTALColumn {
                get {
                    return this.columnTOTAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EXPIRED_DATEColumn {
                get {
                    return this.columnEXPIRED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMMISSIONColumn {
                get {
                    return this.columnCOMMISSION;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COST_PRICEColumn {
                get {
                    return this.columnCOST_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_BYColumn {
                get {
                    return this.columnMODIFIED_BY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MODIFIED_DATEColumn {
                get {
                    return this.columnMODIFIED_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_DETAILRow this[int index] {
                get {
                    return ((T_TRANSACTION_DETAILRow)(this.Rows[index]));
                }
            }
            
            public event T_TRANSACTION_DETAILRowChangeEventHandler T_TRANSACTION_DETAILRowChanging;
            
            public event T_TRANSACTION_DETAILRowChangeEventHandler T_TRANSACTION_DETAILRowChanged;
            
            public event T_TRANSACTION_DETAILRowChangeEventHandler T_TRANSACTION_DETAILRowDeleting;
            
            public event T_TRANSACTION_DETAILRowChangeEventHandler T_TRANSACTION_DETAILRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_TRANSACTION_DETAILRow(T_TRANSACTION_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_DETAILRow AddT_TRANSACTION_DETAILRow(decimal TRANSACTION_ID, bool IS_PACKET, string ITEM_ID, decimal QUANTITY, decimal PRICE, decimal JUMLAH, decimal DISC, decimal PPN, decimal TOTAL, string DESCRIPTION, System.DateTime EXPIRED_DATE, decimal COMMISSION, decimal COST_PRICE, string MODIFIED_BY, System.DateTime MODIFIED_DATE) {
                T_TRANSACTION_DETAILRow rowT_TRANSACTION_DETAILRow = ((T_TRANSACTION_DETAILRow)(this.NewRow()));
                rowT_TRANSACTION_DETAILRow.ItemArray = new object[] {
                        null,
                        TRANSACTION_ID,
                        IS_PACKET,
                        ITEM_ID,
                        QUANTITY,
                        PRICE,
                        JUMLAH,
                        DISC,
                        PPN,
                        TOTAL,
                        DESCRIPTION,
                        EXPIRED_DATE,
                        COMMISSION,
                        COST_PRICE,
                        MODIFIED_BY,
                        MODIFIED_DATE};
                this.Rows.Add(rowT_TRANSACTION_DETAILRow);
                return rowT_TRANSACTION_DETAILRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_DETAILRow FindByTRANSACTION_DETAIL_ID(decimal TRANSACTION_DETAIL_ID) {
                return ((T_TRANSACTION_DETAILRow)(this.Rows.Find(new object[] {
                            TRANSACTION_DETAIL_ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                T_TRANSACTION_DETAILDataTable cln = ((T_TRANSACTION_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new T_TRANSACTION_DETAILDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTRANSACTION_DETAIL_ID = base.Columns["TRANSACTION_DETAIL_ID"];
                this.columnTRANSACTION_ID = base.Columns["TRANSACTION_ID"];
                this.columnIS_PACKET = base.Columns["IS_PACKET"];
                this.columnITEM_ID = base.Columns["ITEM_ID"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnPRICE = base.Columns["PRICE"];
                this.columnJUMLAH = base.Columns["JUMLAH"];
                this.columnDISC = base.Columns["DISC"];
                this.columnPPN = base.Columns["PPN"];
                this.columnTOTAL = base.Columns["TOTAL"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnEXPIRED_DATE = base.Columns["EXPIRED_DATE"];
                this.columnCOMMISSION = base.Columns["COMMISSION"];
                this.columnCOST_PRICE = base.Columns["COST_PRICE"];
                this.columnMODIFIED_BY = base.Columns["MODIFIED_BY"];
                this.columnMODIFIED_DATE = base.Columns["MODIFIED_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTRANSACTION_DETAIL_ID = new System.Data.DataColumn("TRANSACTION_DETAIL_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_DETAIL_ID);
                this.columnTRANSACTION_ID = new System.Data.DataColumn("TRANSACTION_ID", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSACTION_ID);
                this.columnIS_PACKET = new System.Data.DataColumn("IS_PACKET", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_PACKET);
                this.columnITEM_ID = new System.Data.DataColumn("ITEM_ID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_ID);
                this.columnQUANTITY = new System.Data.DataColumn("QUANTITY", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnPRICE = new System.Data.DataColumn("PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE);
                this.columnJUMLAH = new System.Data.DataColumn("JUMLAH", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUMLAH);
                this.columnDISC = new System.Data.DataColumn("DISC", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISC);
                this.columnPPN = new System.Data.DataColumn("PPN", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPN);
                this.columnTOTAL = new System.Data.DataColumn("TOTAL", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL);
                this.columnDESCRIPTION = new System.Data.DataColumn("DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnEXPIRED_DATE = new System.Data.DataColumn("EXPIRED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPIRED_DATE);
                this.columnCOMMISSION = new System.Data.DataColumn("COMMISSION", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMISSION);
                this.columnCOST_PRICE = new System.Data.DataColumn("COST_PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST_PRICE);
                this.columnMODIFIED_BY = new System.Data.DataColumn("MODIFIED_BY", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_BY);
                this.columnMODIFIED_DATE = new System.Data.DataColumn("MODIFIED_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFIED_DATE);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTRANSACTION_DETAIL_ID}, true));
                this.columnTRANSACTION_DETAIL_ID.AutoIncrement = true;
                this.columnTRANSACTION_DETAIL_ID.AllowDBNull = false;
                this.columnTRANSACTION_DETAIL_ID.ReadOnly = true;
                this.columnTRANSACTION_DETAIL_ID.Unique = true;
                this.columnITEM_ID.MaxLength = 50;
                this.columnDESCRIPTION.MaxLength = 100;
                this.columnMODIFIED_BY.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_DETAILRow NewT_TRANSACTION_DETAILRow() {
                return ((T_TRANSACTION_DETAILRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new T_TRANSACTION_DETAILRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(T_TRANSACTION_DETAILRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_TRANSACTION_DETAILRowChanged != null)) {
                    this.T_TRANSACTION_DETAILRowChanged(this, new T_TRANSACTION_DETAILRowChangeEvent(((T_TRANSACTION_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_TRANSACTION_DETAILRowChanging != null)) {
                    this.T_TRANSACTION_DETAILRowChanging(this, new T_TRANSACTION_DETAILRowChangeEvent(((T_TRANSACTION_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_TRANSACTION_DETAILRowDeleted != null)) {
                    this.T_TRANSACTION_DETAILRowDeleted(this, new T_TRANSACTION_DETAILRowChangeEvent(((T_TRANSACTION_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_TRANSACTION_DETAILRowDeleting != null)) {
                    this.T_TRANSACTION_DETAILRowDeleting(this, new T_TRANSACTION_DETAILRowChangeEvent(((T_TRANSACTION_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_TRANSACTION_DETAILRow(T_TRANSACTION_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_TRANSACTION_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ITEM_GUDANG_STOKRow : System.Data.DataRow {
            
            private ITEM_GUDANG_STOKDataTable tableITEM_GUDANG_STOK;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ITEM_GUDANG_STOKRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableITEM_GUDANG_STOK = ((ITEM_GUDANG_STOKDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_ID {
                get {
                    return ((string)(this[this.tableITEM_GUDANG_STOK.ITEM_IDColumn]));
                }
                set {
                    this[this.tableITEM_GUDANG_STOK.ITEM_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GUDANG_ID {
                get {
                    return ((int)(this[this.tableITEM_GUDANG_STOK.GUDANG_IDColumn]));
                }
                set {
                    this[this.tableITEM_GUDANG_STOK.GUDANG_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_STOK {
                get {
                    try {
                        return ((decimal)(this[this.tableITEM_GUDANG_STOK.ITEM_STOKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_STOK\' in table \'ITEM_GUDANG_STOK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEM_GUDANG_STOK.ITEM_STOKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_MIN_STOK {
                get {
                    try {
                        return ((decimal)(this[this.tableITEM_GUDANG_STOK.ITEM_MIN_STOKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_MIN_STOK\' in table \'ITEM_GUDANG_STOK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEM_GUDANG_STOK.ITEM_MIN_STOKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_MAX_STOK {
                get {
                    try {
                        return ((decimal)(this[this.tableITEM_GUDANG_STOK.ITEM_MAX_STOKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_MAX_STOK\' in table \'ITEM_GUDANG_STOK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEM_GUDANG_STOK.ITEM_MAX_STOKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_POSITION {
                get {
                    try {
                        return ((string)(this[this.tableITEM_GUDANG_STOK.ITEM_POSITIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_POSITION\' in table \'ITEM_GUDANG_STOK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEM_GUDANG_STOK.ITEM_POSITIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableITEM_GUDANG_STOK.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'ITEM_GUDANG_STOK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEM_GUDANG_STOK.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableITEM_GUDANG_STOK.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'ITEM_GUDANG_STOK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEM_GUDANG_STOK.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_STOKNull() {
                return this.IsNull(this.tableITEM_GUDANG_STOK.ITEM_STOKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_STOKNull() {
                this[this.tableITEM_GUDANG_STOK.ITEM_STOKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_MIN_STOKNull() {
                return this.IsNull(this.tableITEM_GUDANG_STOK.ITEM_MIN_STOKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_MIN_STOKNull() {
                this[this.tableITEM_GUDANG_STOK.ITEM_MIN_STOKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_MAX_STOKNull() {
                return this.IsNull(this.tableITEM_GUDANG_STOK.ITEM_MAX_STOKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_MAX_STOKNull() {
                this[this.tableITEM_GUDANG_STOK.ITEM_MAX_STOKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_POSITIONNull() {
                return this.IsNull(this.tableITEM_GUDANG_STOK.ITEM_POSITIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_POSITIONNull() {
                this[this.tableITEM_GUDANG_STOK.ITEM_POSITIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableITEM_GUDANG_STOK.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableITEM_GUDANG_STOK.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableITEM_GUDANG_STOK.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableITEM_GUDANG_STOK.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_ACCOUNTRow : System.Data.DataRow {
            
            private M_ACCOUNTDataTable tableM_ACCOUNT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_ACCOUNTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_ACCOUNT = ((M_ACCOUNTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_ID {
                get {
                    return ((string)(this[this.tableM_ACCOUNT.ACCOUNT_IDColumn]));
                }
                set {
                    this[this.tableM_ACCOUNT.ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_ACCOUNT.ACCOUNT_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_NAME\' in table \'M_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ACCOUNT.ACCOUNT_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableM_ACCOUNT.ACCOUNT_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_STATUS\' in table \'M_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ACCOUNT.ACCOUNT_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ACCOUNT_SALDO {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ACCOUNT.ACCOUNT_SALDOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_SALDO\' in table \'M_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ACCOUNT.ACCOUNT_SALDOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_ACCOUNT.ACCOUNT_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_DESC\' in table \'M_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ACCOUNT.ACCOUNT_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_POSITION {
                get {
                    try {
                        return ((string)(this[this.tableM_ACCOUNT.ACCOUNT_POSITIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_POSITION\' in table \'M_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ACCOUNT.ACCOUNT_POSITIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_ACCOUNT.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ACCOUNT.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_ACCOUNT.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ACCOUNT.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_NAMENull() {
                return this.IsNull(this.tableM_ACCOUNT.ACCOUNT_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_NAMENull() {
                this[this.tableM_ACCOUNT.ACCOUNT_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_STATUSNull() {
                return this.IsNull(this.tableM_ACCOUNT.ACCOUNT_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_STATUSNull() {
                this[this.tableM_ACCOUNT.ACCOUNT_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_SALDONull() {
                return this.IsNull(this.tableM_ACCOUNT.ACCOUNT_SALDOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_SALDONull() {
                this[this.tableM_ACCOUNT.ACCOUNT_SALDOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_DESCNull() {
                return this.IsNull(this.tableM_ACCOUNT.ACCOUNT_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_DESCNull() {
                this[this.tableM_ACCOUNT.ACCOUNT_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_POSITIONNull() {
                return this.IsNull(this.tableM_ACCOUNT.ACCOUNT_POSITIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_POSITIONNull() {
                this[this.tableM_ACCOUNT.ACCOUNT_POSITIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_ACCOUNT.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_ACCOUNT.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_ACCOUNT.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_ACCOUNT.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_BANKRow : System.Data.DataRow {
            
            private M_BANKDataTable tableM_BANK;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_BANKRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_BANK = ((M_BANKDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_ID {
                get {
                    return ((string)(this[this.tableM_BANK.BANK_IDColumn]));
                }
                set {
                    this[this.tableM_BANK.BANK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_BANK.BANK_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BANK_NAME\' in table \'M_BANK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_BANK.BANK_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableM_BANK.BANK_ADDRESSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BANK_ADDRESS\' in table \'M_BANK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_BANK.BANK_ADDRESSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BANK_LIMIT_GIRO_PER_MONTH {
                get {
                    try {
                        return ((decimal)(this[this.tableM_BANK.BANK_LIMIT_GIRO_PER_MONTHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BANK_LIMIT_GIRO_PER_MONTH\' in table \'M_BANK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_BANK.BANK_LIMIT_GIRO_PER_MONTHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_BANK.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_BANK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_BANK.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_BANK.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_BANK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_BANK.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBANK_NAMENull() {
                return this.IsNull(this.tableM_BANK.BANK_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBANK_NAMENull() {
                this[this.tableM_BANK.BANK_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBANK_ADDRESSNull() {
                return this.IsNull(this.tableM_BANK.BANK_ADDRESSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBANK_ADDRESSNull() {
                this[this.tableM_BANK.BANK_ADDRESSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBANK_LIMIT_GIRO_PER_MONTHNull() {
                return this.IsNull(this.tableM_BANK.BANK_LIMIT_GIRO_PER_MONTHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBANK_LIMIT_GIRO_PER_MONTHNull() {
                this[this.tableM_BANK.BANK_LIMIT_GIRO_PER_MONTHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_BANK.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_BANK.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_BANK.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_BANK.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_COMMISSIONRow : System.Data.DataRow {
            
            private M_COMMISSIONDataTable tableM_COMMISSION;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_COMMISSIONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_COMMISSION = ((M_COMMISSIONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COMMISSION_ID {
                get {
                    return ((decimal)(this[this.tableM_COMMISSION.COMMISSION_IDColumn]));
                }
                set {
                    this[this.tableM_COMMISSION.COMMISSION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMISSION_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableM_COMMISSION.COMMISSION_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMMISSION_STATUS\' in table \'M_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_COMMISSION.COMMISSION_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COMMISSION_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableM_COMMISSION.COMMISSION_VALUEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMMISSION_VALUE\' in table \'M_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_COMMISSION.COMMISSION_VALUEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMISSION_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_COMMISSION.COMMISSION_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMMISSION_DESC\' in table \'M_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_COMMISSION.COMMISSION_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMISSION_STATUSNull() {
                return this.IsNull(this.tableM_COMMISSION.COMMISSION_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMISSION_STATUSNull() {
                this[this.tableM_COMMISSION.COMMISSION_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMISSION_VALUENull() {
                return this.IsNull(this.tableM_COMMISSION.COMMISSION_VALUEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMISSION_VALUENull() {
                this[this.tableM_COMMISSION.COMMISSION_VALUEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMISSION_DESCNull() {
                return this.IsNull(this.tableM_COMMISSION.COMMISSION_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMISSION_DESCNull() {
                this[this.tableM_COMMISSION.COMMISSION_DESCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_COMMISSION_SHARERow : System.Data.DataRow {
            
            private M_COMMISSION_SHAREDataTable tableM_COMMISSION_SHARE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_COMMISSION_SHARERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_COMMISSION_SHARE = ((M_COMMISSION_SHAREDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SHARE_ID {
                get {
                    return ((decimal)(this[this.tableM_COMMISSION_SHARE.SHARE_IDColumn]));
                }
                set {
                    this[this.tableM_COMMISSION_SHARE.SHARE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COMMISSION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableM_COMMISSION_SHARE.COMMISSION_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMMISSION_ID\' in table \'M_COMMISSION_SHARE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_COMMISSION_SHARE.COMMISSION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHARE_TO {
                get {
                    try {
                        return ((string)(this[this.tableM_COMMISSION_SHARE.SHARE_TOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SHARE_TO\' in table \'M_COMMISSION_SHARE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_COMMISSION_SHARE.SHARE_TOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SHARE_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableM_COMMISSION_SHARE.SHARE_VALUEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SHARE_VALUE\' in table \'M_COMMISSION_SHARE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_COMMISSION_SHARE.SHARE_VALUEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHARE_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_COMMISSION_SHARE.SHARE_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SHARE_DESC\' in table \'M_COMMISSION_SHARE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_COMMISSION_SHARE.SHARE_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMISSION_IDNull() {
                return this.IsNull(this.tableM_COMMISSION_SHARE.COMMISSION_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMISSION_IDNull() {
                this[this.tableM_COMMISSION_SHARE.COMMISSION_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHARE_TONull() {
                return this.IsNull(this.tableM_COMMISSION_SHARE.SHARE_TOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHARE_TONull() {
                this[this.tableM_COMMISSION_SHARE.SHARE_TOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHARE_VALUENull() {
                return this.IsNull(this.tableM_COMMISSION_SHARE.SHARE_VALUEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHARE_VALUENull() {
                this[this.tableM_COMMISSION_SHARE.SHARE_VALUEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHARE_DESCNull() {
                return this.IsNull(this.tableM_COMMISSION_SHARE.SHARE_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHARE_DESCNull() {
                this[this.tableM_COMMISSION_SHARE.SHARE_DESCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_CUSTOMERRow : System.Data.DataRow {
            
            private M_CUSTOMERDataTable tableM_CUSTOMER;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_CUSTOMERRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_CUSTOMER = ((M_CUSTOMERDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_ID {
                get {
                    return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_IDColumn]));
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_NAME\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_ADDRESSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_ADDRESS\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_ADDRESSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_PHONE {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_PHONEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_PHONE\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_PHONEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_FAX {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_FAXColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_FAX\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_FAXColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_STATUS\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_NPWP {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_NPWPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_NPWP\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_NPWPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CUSTOMER_DISC {
                get {
                    try {
                        return ((decimal)(this[this.tableM_CUSTOMER.CUSTOMER_DISCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_DISC\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_DISCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CUSTOMER_LIMIT {
                get {
                    try {
                        return ((decimal)(this[this.tableM_CUSTOMER.CUSTOMER_LIMITColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_LIMIT\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_LIMITColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_DESC\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_DESC2 {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.CUSTOMER_DESC2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_DESC2\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.CUSTOMER_DESC2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.SUB_ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCOUNT_ID\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_CUSTOMER.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_NAMENull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_NAMENull() {
                this[this.tableM_CUSTOMER.CUSTOMER_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_ADDRESSNull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_ADDRESSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_ADDRESSNull() {
                this[this.tableM_CUSTOMER.CUSTOMER_ADDRESSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_PHONENull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_PHONEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_PHONENull() {
                this[this.tableM_CUSTOMER.CUSTOMER_PHONEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_FAXNull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_FAXColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_FAXNull() {
                this[this.tableM_CUSTOMER.CUSTOMER_FAXColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_STATUSNull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_STATUSNull() {
                this[this.tableM_CUSTOMER.CUSTOMER_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_NPWPNull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_NPWPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_NPWPNull() {
                this[this.tableM_CUSTOMER.CUSTOMER_NPWPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_DISCNull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_DISCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_DISCNull() {
                this[this.tableM_CUSTOMER.CUSTOMER_DISCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_LIMITNull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_LIMITColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_LIMITNull() {
                this[this.tableM_CUSTOMER.CUSTOMER_LIMITColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_DESCNull() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_DESCNull() {
                this[this.tableM_CUSTOMER.CUSTOMER_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_DESC2Null() {
                return this.IsNull(this.tableM_CUSTOMER.CUSTOMER_DESC2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_DESC2Null() {
                this[this.tableM_CUSTOMER.CUSTOMER_DESC2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCOUNT_IDNull() {
                return this.IsNull(this.tableM_CUSTOMER.SUB_ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCOUNT_IDNull() {
                this[this.tableM_CUSTOMER.SUB_ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_CUSTOMER.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_CUSTOMER.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_CUSTOMER.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_CUSTOMER.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_CUSTOMER_GROUPRow : System.Data.DataRow {
            
            private M_CUSTOMER_GROUPDataTable tableM_CUSTOMER_GROUP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_CUSTOMER_GROUPRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_CUSTOMER_GROUP = ((M_CUSTOMER_GROUPDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_GROUP_ID {
                get {
                    return ((string)(this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_IDColumn]));
                }
                set {
                    this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_GROUP_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_GROUP_NAME\' in table \'M_CUSTOMER_GROUP\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_GROUP_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_GROUP_DESC\' in table \'M_CUSTOMER_GROUP\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CUSTOMER_GROUP_PERCENTAGE {
                get {
                    try {
                        return ((decimal)(this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_PERCENTAGEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_GROUP_PERCENTAGE\' in table \'M_CUSTOMER_GROUP\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_PERCENTAGEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CUSTOMER_GROUP_USE_PERCENTAGE {
                get {
                    try {
                        return ((bool)(this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_USE_PERCENTAGEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_GROUP_USE_PERCENTAGE\' in table \'M_CUSTOMER_GROUP\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_USE_PERCENTAGEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_CUSTOMER_GROUP.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_CUSTOMER_GROUP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER_GROUP.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_CUSTOMER_GROUP.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_CUSTOMER_GROUP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_CUSTOMER_GROUP.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_GROUP_NAMENull() {
                return this.IsNull(this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_GROUP_NAMENull() {
                this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_GROUP_DESCNull() {
                return this.IsNull(this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_GROUP_DESCNull() {
                this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_GROUP_PERCENTAGENull() {
                return this.IsNull(this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_PERCENTAGEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_GROUP_PERCENTAGENull() {
                this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_PERCENTAGEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_GROUP_USE_PERCENTAGENull() {
                return this.IsNull(this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_USE_PERCENTAGEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_GROUP_USE_PERCENTAGENull() {
                this[this.tableM_CUSTOMER_GROUP.CUSTOMER_GROUP_USE_PERCENTAGEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_CUSTOMER_GROUP.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_CUSTOMER_GROUP.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_CUSTOMER_GROUP.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_CUSTOMER_GROUP.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_DEPRow : System.Data.DataRow {
            
            private M_DEPDataTable tableM_DEP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_DEPRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_DEP = ((M_DEPDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEP_ID {
                get {
                    return ((string)(this[this.tableM_DEP.DEP_IDColumn]));
                }
                set {
                    this[this.tableM_DEP.DEP_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEP_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_DEP.DEP_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEP_NAME\' in table \'M_DEP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DEP.DEP_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEP_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableM_DEP.DEP_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEP_STATUS\' in table \'M_DEP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DEP.DEP_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_DEP.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_DEP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DEP.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_DEP.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_DEP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DEP.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEP_NAMENull() {
                return this.IsNull(this.tableM_DEP.DEP_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEP_NAMENull() {
                this[this.tableM_DEP.DEP_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEP_STATUSNull() {
                return this.IsNull(this.tableM_DEP.DEP_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEP_STATUSNull() {
                this[this.tableM_DEP.DEP_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_DEP.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_DEP.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_DEP.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_DEP.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_DESKRow : System.Data.DataRow {
            
            private M_DESKDataTable tableM_DESK;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_DESKRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_DESK = ((M_DESKDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_ID {
                get {
                    return ((string)(this[this.tableM_DESK.DESK_IDColumn]));
                }
                set {
                    this[this.tableM_DESK.DESK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableM_DESK.DESK_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_STATUS\' in table \'M_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DESK.DESK_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_DESK.DESK_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_DESC\' in table \'M_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DESK.DESK_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_ORDER {
                get {
                    try {
                        return ((int)(this[this.tableM_DESK.DESK_ORDERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_ORDER\' in table \'M_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DESK.DESK_ORDERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_DESK.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DESK.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_DESK.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DESK.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_STATUSNull() {
                return this.IsNull(this.tableM_DESK.DESK_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_STATUSNull() {
                this[this.tableM_DESK.DESK_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_DESCNull() {
                return this.IsNull(this.tableM_DESK.DESK_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_DESCNull() {
                this[this.tableM_DESK.DESK_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_ORDERNull() {
                return this.IsNull(this.tableM_DESK.DESK_ORDERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_ORDERNull() {
                this[this.tableM_DESK.DESK_ORDERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_DESK.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_DESK.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_DESK.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_DESK.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_DISCOUNTRow : System.Data.DataRow {
            
            private M_DISCOUNTDataTable tableM_DISCOUNT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_DISCOUNTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_DISCOUNT = ((M_DISCOUNTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DISC_ID {
                get {
                    return ((decimal)(this[this.tableM_DISCOUNT.DISC_IDColumn]));
                }
                set {
                    this[this.tableM_DISCOUNT.DISC_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DISC {
                get {
                    try {
                        return ((decimal)(this[this.tableM_DISCOUNT.DISCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISC\' in table \'M_DISCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DISCOUNT.DISCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISC_DAY {
                get {
                    try {
                        return ((string)(this[this.tableM_DISCOUNT.DISC_DAYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISC_DAY\' in table \'M_DISCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DISCOUNT.DISC_DAYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DISC_TIME_HOUR_FROM {
                get {
                    try {
                        return ((int)(this[this.tableM_DISCOUNT.DISC_TIME_HOUR_FROMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISC_TIME_HOUR_FROM\' in table \'M_DISCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DISCOUNT.DISC_TIME_HOUR_FROMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DISC_TIME_MIN_FROM {
                get {
                    try {
                        return ((int)(this[this.tableM_DISCOUNT.DISC_TIME_MIN_FROMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISC_TIME_MIN_FROM\' in table \'M_DISCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DISCOUNT.DISC_TIME_MIN_FROMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DISC_TIME_HOUR_TO {
                get {
                    try {
                        return ((int)(this[this.tableM_DISCOUNT.DISC_TIME_HOUR_TOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISC_TIME_HOUR_TO\' in table \'M_DISCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DISCOUNT.DISC_TIME_HOUR_TOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DISC_TIME_MIN_TO {
                get {
                    try {
                        return ((int)(this[this.tableM_DISCOUNT.DISC_TIME_MIN_TOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISC_TIME_MIN_TO\' in table \'M_DISCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DISCOUNT.DISC_TIME_MIN_TOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_DISCOUNT.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_DISCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DISCOUNT.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_DISCOUNT.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_DISCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_DISCOUNT.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCNull() {
                return this.IsNull(this.tableM_DISCOUNT.DISCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCNull() {
                this[this.tableM_DISCOUNT.DISCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISC_DAYNull() {
                return this.IsNull(this.tableM_DISCOUNT.DISC_DAYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISC_DAYNull() {
                this[this.tableM_DISCOUNT.DISC_DAYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISC_TIME_HOUR_FROMNull() {
                return this.IsNull(this.tableM_DISCOUNT.DISC_TIME_HOUR_FROMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISC_TIME_HOUR_FROMNull() {
                this[this.tableM_DISCOUNT.DISC_TIME_HOUR_FROMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISC_TIME_MIN_FROMNull() {
                return this.IsNull(this.tableM_DISCOUNT.DISC_TIME_MIN_FROMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISC_TIME_MIN_FROMNull() {
                this[this.tableM_DISCOUNT.DISC_TIME_MIN_FROMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISC_TIME_HOUR_TONull() {
                return this.IsNull(this.tableM_DISCOUNT.DISC_TIME_HOUR_TOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISC_TIME_HOUR_TONull() {
                this[this.tableM_DISCOUNT.DISC_TIME_HOUR_TOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISC_TIME_MIN_TONull() {
                return this.IsNull(this.tableM_DISCOUNT.DISC_TIME_MIN_TOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISC_TIME_MIN_TONull() {
                this[this.tableM_DISCOUNT.DISC_TIME_MIN_TOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_DISCOUNT.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_DISCOUNT.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_DISCOUNT.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_DISCOUNT.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_EMPLOYEERow : System.Data.DataRow {
            
            private M_EMPLOYEEDataTable tableM_EMPLOYEE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_EMPLOYEERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_EMPLOYEE = ((M_EMPLOYEEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_ID {
                get {
                    return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_IDColumn]));
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_NAME\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEP_ID {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.DEP_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEP_ID\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.DEP_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_GENDER {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_GENDERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_GENDER\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_GENDERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_ID_CARD {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_ID_CARDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_ID_CARD\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_ID_CARDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_ADDRESSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_ADDRESS\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_ADDRESSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_PHONE {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_PHONEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_PHONE\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_PHONEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_BIRTH_PLACE {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_BIRTH_PLACEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_BIRTH_PLACE\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_BIRTH_PLACEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EMPLOYEE_BIRTH_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_EMPLOYEE.EMPLOYEE_BIRTH_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_BIRTH_DATE\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_BIRTH_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_MARITAL_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_MARITAL_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_MARITAL_STATUS\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_MARITAL_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EMPLOYEE_START_WORK {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_EMPLOYEE.EMPLOYEE_START_WORKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_START_WORK\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_START_WORKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_STATUS\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_DESC\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_DESC2 {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.EMPLOYEE_DESC2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_DESC2\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.EMPLOYEE_DESC2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_EMPLOYEE.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_EMPLOYEE.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_EMPLOYEE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_EMPLOYEE.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_NAMENull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_NAMENull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEP_IDNull() {
                return this.IsNull(this.tableM_EMPLOYEE.DEP_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEP_IDNull() {
                this[this.tableM_EMPLOYEE.DEP_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_GENDERNull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_GENDERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_GENDERNull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_GENDERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_ID_CARDNull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_ID_CARDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_ID_CARDNull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_ID_CARDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_ADDRESSNull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_ADDRESSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_ADDRESSNull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_ADDRESSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_PHONENull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_PHONEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_PHONENull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_PHONEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_BIRTH_PLACENull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_BIRTH_PLACEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_BIRTH_PLACENull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_BIRTH_PLACEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_BIRTH_DATENull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_BIRTH_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_BIRTH_DATENull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_BIRTH_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_MARITAL_STATUSNull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_MARITAL_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_MARITAL_STATUSNull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_MARITAL_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_START_WORKNull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_START_WORKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_START_WORKNull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_START_WORKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_STATUSNull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_STATUSNull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_DESCNull() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_DESCNull() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_DESC2Null() {
                return this.IsNull(this.tableM_EMPLOYEE.EMPLOYEE_DESC2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_DESC2Null() {
                this[this.tableM_EMPLOYEE.EMPLOYEE_DESC2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_EMPLOYEE.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_EMPLOYEE.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_EMPLOYEE.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_EMPLOYEE.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_GROUPRow : System.Data.DataRow {
            
            private M_GROUPDataTable tableM_GROUP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_GROUPRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_GROUP = ((M_GROUPDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GROUP_ID {
                get {
                    return ((int)(this[this.tableM_GROUP.GROUP_IDColumn]));
                }
                set {
                    this[this.tableM_GROUP.GROUP_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROUP_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_GROUP.GROUP_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GROUP_NAME\' in table \'M_GROUP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_GROUP.GROUP_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_GROUP.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_GROUP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_GROUP.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_GROUP.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_GROUP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_GROUP.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGROUP_NAMENull() {
                return this.IsNull(this.tableM_GROUP.GROUP_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGROUP_NAMENull() {
                this[this.tableM_GROUP.GROUP_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_GROUP.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_GROUP.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_GROUP.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_GROUP.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_GUDANGRow : System.Data.DataRow {
            
            private M_GUDANGDataTable tableM_GUDANG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_GUDANGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_GUDANG = ((M_GUDANGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GUDANG_ID {
                get {
                    return ((int)(this[this.tableM_GUDANG.GUDANG_IDColumn]));
                }
                set {
                    this[this.tableM_GUDANG.GUDANG_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOCATION_ID {
                get {
                    try {
                        return ((int)(this[this.tableM_GUDANG.LOCATION_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOCATION_ID\' in table \'M_GUDANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_GUDANG.LOCATION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GUDANG_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_GUDANG.GUDANG_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GUDANG_NAME\' in table \'M_GUDANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_GUDANG.GUDANG_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_GUDANG.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_GUDANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_GUDANG.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_GUDANG.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_GUDANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_GUDANG.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATION_IDNull() {
                return this.IsNull(this.tableM_GUDANG.LOCATION_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATION_IDNull() {
                this[this.tableM_GUDANG.LOCATION_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGUDANG_NAMENull() {
                return this.IsNull(this.tableM_GUDANG.GUDANG_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGUDANG_NAMENull() {
                this[this.tableM_GUDANG.GUDANG_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_GUDANG.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_GUDANG.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_GUDANG.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_GUDANG.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_ITEMRow : System.Data.DataRow {
            
            private M_ITEMDataTable tableM_ITEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_ITEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_ITEM = ((M_ITEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_ID {
                get {
                    return ((string)(this[this.tableM_ITEM.ITEM_IDColumn]));
                }
                set {
                    this[this.tableM_ITEM.ITEM_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITEM_TYPE_ID {
                get {
                    try {
                        return ((int)(this[this.tableM_ITEM.ITEM_TYPE_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_TYPE_ID\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_TYPE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GROUP_ID {
                get {
                    try {
                        return ((int)(this[this.tableM_ITEM.GROUP_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GROUP_ID\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.GROUP_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_ITEM.ITEM_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_NAME\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_SATUAN {
                get {
                    try {
                        return ((string)(this[this.tableM_ITEM.ITEM_SATUANColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_SATUAN\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_SATUANColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_ITEM.ITEM_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_DESC\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_COMMISION {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ITEM.ITEM_COMMISIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_COMMISION\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_COMMISIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEFAULT_GUDANG_ID {
                get {
                    try {
                        return ((int)(this[this.tableM_ITEM.DEFAULT_GUDANG_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEFAULT_GUDANG_ID\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.DEFAULT_GUDANG_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_PRICE_MAX_VIP {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ITEM.ITEM_PRICE_MAX_VIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_PRICE_MAX_VIP\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_PRICE_MAX_VIPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_PRICE_MIN_VIP {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ITEM.ITEM_PRICE_MIN_VIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_PRICE_MIN_VIP\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_PRICE_MIN_VIPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_PRICE_MAX {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ITEM.ITEM_PRICE_MAXColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_PRICE_MAX\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_PRICE_MAXColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_PRICE_MIN {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ITEM.ITEM_PRICE_MINColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_PRICE_MIN\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_PRICE_MINColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_PRICE_PURCHASE {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ITEM.ITEM_PRICE_PURCHASEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_PRICE_PURCHASE\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_PRICE_PURCHASEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ITEM_PRICE_PURCHASE_AVG {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ITEM.ITEM_PRICE_PURCHASE_AVGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_PRICE_PURCHASE_AVG\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_PRICE_PURCHASE_AVGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ITEM_EXPIRED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_ITEM.ITEM_EXPIRED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_EXPIRED_DATE\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.ITEM_EXPIRED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_ID {
                get {
                    try {
                        return ((string)(this[this.tableM_ITEM.SUPPLIER_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_ID\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.SUPPLIER_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_ITEM.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_ITEM.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_TYPE_IDNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_TYPE_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_TYPE_IDNull() {
                this[this.tableM_ITEM.ITEM_TYPE_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGROUP_IDNull() {
                return this.IsNull(this.tableM_ITEM.GROUP_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGROUP_IDNull() {
                this[this.tableM_ITEM.GROUP_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_NAMENull() {
                return this.IsNull(this.tableM_ITEM.ITEM_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_NAMENull() {
                this[this.tableM_ITEM.ITEM_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_SATUANNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_SATUANColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_SATUANNull() {
                this[this.tableM_ITEM.ITEM_SATUANColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_DESCNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_DESCNull() {
                this[this.tableM_ITEM.ITEM_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_COMMISIONNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_COMMISIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_COMMISIONNull() {
                this[this.tableM_ITEM.ITEM_COMMISIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_GUDANG_IDNull() {
                return this.IsNull(this.tableM_ITEM.DEFAULT_GUDANG_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_GUDANG_IDNull() {
                this[this.tableM_ITEM.DEFAULT_GUDANG_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_PRICE_MAX_VIPNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_PRICE_MAX_VIPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_PRICE_MAX_VIPNull() {
                this[this.tableM_ITEM.ITEM_PRICE_MAX_VIPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_PRICE_MIN_VIPNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_PRICE_MIN_VIPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_PRICE_MIN_VIPNull() {
                this[this.tableM_ITEM.ITEM_PRICE_MIN_VIPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_PRICE_MAXNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_PRICE_MAXColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_PRICE_MAXNull() {
                this[this.tableM_ITEM.ITEM_PRICE_MAXColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_PRICE_MINNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_PRICE_MINColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_PRICE_MINNull() {
                this[this.tableM_ITEM.ITEM_PRICE_MINColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_PRICE_PURCHASENull() {
                return this.IsNull(this.tableM_ITEM.ITEM_PRICE_PURCHASEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_PRICE_PURCHASENull() {
                this[this.tableM_ITEM.ITEM_PRICE_PURCHASEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_PRICE_PURCHASE_AVGNull() {
                return this.IsNull(this.tableM_ITEM.ITEM_PRICE_PURCHASE_AVGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_PRICE_PURCHASE_AVGNull() {
                this[this.tableM_ITEM.ITEM_PRICE_PURCHASE_AVGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_EXPIRED_DATENull() {
                return this.IsNull(this.tableM_ITEM.ITEM_EXPIRED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_EXPIRED_DATENull() {
                this[this.tableM_ITEM.ITEM_EXPIRED_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_IDNull() {
                return this.IsNull(this.tableM_ITEM.SUPPLIER_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_IDNull() {
                this[this.tableM_ITEM.SUPPLIER_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_ITEM.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_ITEM.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_ITEM.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_ITEM.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_ITEM_TYPERow : System.Data.DataRow {
            
            private M_ITEM_TYPEDataTable tableM_ITEM_TYPE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_ITEM_TYPERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_ITEM_TYPE = ((M_ITEM_TYPEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ITEM_TYPE_ID {
                get {
                    return ((int)(this[this.tableM_ITEM_TYPE.ITEM_TYPE_IDColumn]));
                }
                set {
                    this[this.tableM_ITEM_TYPE.ITEM_TYPE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_ITEM_TYPE.ITEM_TYPE_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_TYPE_NAME\' in table \'M_ITEM_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM_TYPE.ITEM_TYPE_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_ITEM_TYPE.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_ITEM_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM_TYPE.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_ITEM_TYPE.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_ITEM_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ITEM_TYPE.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_TYPE_NAMENull() {
                return this.IsNull(this.tableM_ITEM_TYPE.ITEM_TYPE_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_TYPE_NAMENull() {
                this[this.tableM_ITEM_TYPE.ITEM_TYPE_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_ITEM_TYPE.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_ITEM_TYPE.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_ITEM_TYPE.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_ITEM_TYPE.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_LOCATIONRow : System.Data.DataRow {
            
            private M_LOCATIONDataTable tableM_LOCATION;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_LOCATIONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_LOCATION = ((M_LOCATIONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOCATION_ID {
                get {
                    return ((int)(this[this.tableM_LOCATION.LOCATION_IDColumn]));
                }
                set {
                    this[this.tableM_LOCATION.LOCATION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOCATION_PARENT_ID {
                get {
                    return ((int)(this[this.tableM_LOCATION.LOCATION_PARENT_IDColumn]));
                }
                set {
                    this[this.tableM_LOCATION.LOCATION_PARENT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_LOCATION.LOCATION_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOCATION_NAME\' in table \'M_LOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_LOCATION.LOCATION_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION_SHORT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_LOCATION.LOCATION_SHORT_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOCATION_SHORT_NAME\' in table \'M_LOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_LOCATION.LOCATION_SHORT_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_LOCATION.LOCATION_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOCATION_DESC\' in table \'M_LOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_LOCATION.LOCATION_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LOCATION_IS_CRITICAL {
                get {
                    try {
                        return ((bool)(this[this.tableM_LOCATION.LOCATION_IS_CRITICALColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOCATION_IS_CRITICAL\' in table \'M_LOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_LOCATION.LOCATION_IS_CRITICALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_LOCATION.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_LOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_LOCATION.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_LOCATION.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_LOCATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_LOCATION.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATION_NAMENull() {
                return this.IsNull(this.tableM_LOCATION.LOCATION_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATION_NAMENull() {
                this[this.tableM_LOCATION.LOCATION_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATION_SHORT_NAMENull() {
                return this.IsNull(this.tableM_LOCATION.LOCATION_SHORT_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATION_SHORT_NAMENull() {
                this[this.tableM_LOCATION.LOCATION_SHORT_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATION_DESCNull() {
                return this.IsNull(this.tableM_LOCATION.LOCATION_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATION_DESCNull() {
                this[this.tableM_LOCATION.LOCATION_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATION_IS_CRITICALNull() {
                return this.IsNull(this.tableM_LOCATION.LOCATION_IS_CRITICALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATION_IS_CRITICALNull() {
                this[this.tableM_LOCATION.LOCATION_IS_CRITICALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_LOCATION.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_LOCATION.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_LOCATION.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_LOCATION.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_MENURow : System.Data.DataRow {
            
            private M_MENUDataTable tableM_MENU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_MENURow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_MENU = ((M_MENUDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MENU_ID {
                get {
                    return ((decimal)(this[this.tableM_MENU.MENU_IDColumn]));
                }
                set {
                    this[this.tableM_MENU.MENU_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableM_MENU.SETTING_IDColumn]));
                }
                set {
                    this[this.tableM_MENU.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MENU_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_MENU.MENU_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MENU_NAME\' in table \'M_MENU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_MENU.MENU_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MENU_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableM_MENU.MENU_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MENU_STATUS\' in table \'M_MENU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_MENU.MENU_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMENU_NAMENull() {
                return this.IsNull(this.tableM_MENU.MENU_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMENU_NAMENull() {
                this[this.tableM_MENU.MENU_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMENU_STATUSNull() {
                return this.IsNull(this.tableM_MENU.MENU_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMENU_STATUSNull() {
                this[this.tableM_MENU.MENU_STATUSColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_PACKETRow : System.Data.DataRow {
            
            private M_PACKETDataTable tableM_PACKET;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_PACKETRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_PACKET = ((M_PACKETDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACKET_ID {
                get {
                    return ((string)(this[this.tableM_PACKET.PACKET_IDColumn]));
                }
                set {
                    this[this.tableM_PACKET.PACKET_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACKET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_PACKET.PACKET_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PACKET_NAME\' in table \'M_PACKET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET.PACKET_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PACKET_DISCOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableM_PACKET.PACKET_DISCOUNTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PACKET_DISCOUNT\' in table \'M_PACKET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET.PACKET_DISCOUNTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PACKET_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableM_PACKET.PACKET_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PACKET_PRICE\' in table \'M_PACKET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET.PACKET_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACKET_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_PACKET.PACKET_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PACKET_DESC\' in table \'M_PACKET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET.PACKET_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PACKET_PRICE_AVG {
                get {
                    try {
                        return ((decimal)(this[this.tableM_PACKET.PACKET_PRICE_AVGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PACKET_PRICE_AVG\' in table \'M_PACKET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET.PACKET_PRICE_AVGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_PACKET.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_PACKET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_PACKET.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_PACKET\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACKET_NAMENull() {
                return this.IsNull(this.tableM_PACKET.PACKET_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACKET_NAMENull() {
                this[this.tableM_PACKET.PACKET_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACKET_DISCOUNTNull() {
                return this.IsNull(this.tableM_PACKET.PACKET_DISCOUNTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACKET_DISCOUNTNull() {
                this[this.tableM_PACKET.PACKET_DISCOUNTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACKET_PRICENull() {
                return this.IsNull(this.tableM_PACKET.PACKET_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACKET_PRICENull() {
                this[this.tableM_PACKET.PACKET_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACKET_DESCNull() {
                return this.IsNull(this.tableM_PACKET.PACKET_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACKET_DESCNull() {
                this[this.tableM_PACKET.PACKET_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACKET_PRICE_AVGNull() {
                return this.IsNull(this.tableM_PACKET.PACKET_PRICE_AVGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACKET_PRICE_AVGNull() {
                this[this.tableM_PACKET.PACKET_PRICE_AVGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_PACKET.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_PACKET.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_PACKET.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_PACKET.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_PACKET_ITEMRow : System.Data.DataRow {
            
            private M_PACKET_ITEMDataTable tableM_PACKET_ITEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_PACKET_ITEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_PACKET_ITEM = ((M_PACKET_ITEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PACKET_ITEM_ID {
                get {
                    return ((decimal)(this[this.tableM_PACKET_ITEM.PACKET_ITEM_IDColumn]));
                }
                set {
                    this[this.tableM_PACKET_ITEM.PACKET_ITEM_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACKET_ID {
                get {
                    try {
                        return ((string)(this[this.tableM_PACKET_ITEM.PACKET_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PACKET_ID\' in table \'M_PACKET_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET_ITEM.PACKET_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_ID {
                get {
                    try {
                        return ((string)(this[this.tableM_PACKET_ITEM.ITEM_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_ID\' in table \'M_PACKET_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET_ITEM.ITEM_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PACKET_ITEM_QUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableM_PACKET_ITEM.PACKET_ITEM_QUANTITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PACKET_ITEM_QUANTITY\' in table \'M_PACKET_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET_ITEM.PACKET_ITEM_QUANTITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_PACKET_ITEM.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_PACKET_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET_ITEM.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_PACKET_ITEM.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_PACKET_ITEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_PACKET_ITEM.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACKET_IDNull() {
                return this.IsNull(this.tableM_PACKET_ITEM.PACKET_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACKET_IDNull() {
                this[this.tableM_PACKET_ITEM.PACKET_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_IDNull() {
                return this.IsNull(this.tableM_PACKET_ITEM.ITEM_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_IDNull() {
                this[this.tableM_PACKET_ITEM.ITEM_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACKET_ITEM_QUANTITYNull() {
                return this.IsNull(this.tableM_PACKET_ITEM.PACKET_ITEM_QUANTITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACKET_ITEM_QUANTITYNull() {
                this[this.tableM_PACKET_ITEM.PACKET_ITEM_QUANTITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_PACKET_ITEM.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_PACKET_ITEM.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_PACKET_ITEM.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_PACKET_ITEM.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_ROOMRow : System.Data.DataRow {
            
            private M_ROOMDataTable tableM_ROOM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_ROOMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_ROOM = ((M_ROOMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROOM_ID {
                get {
                    return ((string)(this[this.tableM_ROOM.ROOM_IDColumn]));
                }
                set {
                    this[this.tableM_ROOM.ROOM_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROOM_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_ROOM.ROOM_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ROOM_NAME\' in table \'M_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ROOM.ROOM_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ROOM_COMISSION {
                get {
                    try {
                        return ((decimal)(this[this.tableM_ROOM.ROOM_COMISSIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ROOM_COMISSION\' in table \'M_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ROOM.ROOM_COMISSIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROOM_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_ROOM.ROOM_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ROOM_DESC\' in table \'M_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ROOM.ROOM_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_ROOM.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ROOM.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_ROOM.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_ROOM.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROOM_NAMENull() {
                return this.IsNull(this.tableM_ROOM.ROOM_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROOM_NAMENull() {
                this[this.tableM_ROOM.ROOM_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROOM_COMISSIONNull() {
                return this.IsNull(this.tableM_ROOM.ROOM_COMISSIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROOM_COMISSIONNull() {
                this[this.tableM_ROOM.ROOM_COMISSIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROOM_DESCNull() {
                return this.IsNull(this.tableM_ROOM.ROOM_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROOM_DESCNull() {
                this[this.tableM_ROOM.ROOM_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_ROOM.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_ROOM.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_ROOM.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_ROOM.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_SETTINGRow : System.Data.DataRow {
            
            private M_SETTINGDataTable tableM_SETTING;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_SETTINGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_SETTING = ((M_SETTINGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableM_SETTING.SETTING_IDColumn]));
                }
                set {
                    this[this.tableM_SETTING.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.COMPANY_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_NAME\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.COMPANY_ADDRESSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_ADDRESS\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_ADDRESSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_ADDRESS2 {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.COMPANY_ADDRESS2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_ADDRESS2\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_ADDRESS2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_CITY {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.COMPANY_CITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_CITY\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_CITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_TELP {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.COMPANY_TELPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_TELP\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_TELPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_FAX {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.COMPANY_FAXColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_FAX\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_FAXColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_NPWP {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.COMPANY_NPWPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_NPWP\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_NPWPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime COMPANY_PKP_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_SETTING.COMPANY_PKP_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_PKP_DATE\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_PKP_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] COMPANY_LOGO {
                get {
                    try {
                        return ((byte[])(this[this.tableM_SETTING.COMPANY_LOGOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_LOGO\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.COMPANY_LOGOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AUTO_PRINT_SALES {
                get {
                    try {
                        return ((bool)(this[this.tableM_SETTING.AUTO_PRINT_SALESColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AUTO_PRINT_SALES\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.AUTO_PRINT_SALESColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AUTO_BACKUP {
                get {
                    try {
                        return ((bool)(this[this.tableM_SETTING.AUTO_BACKUPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AUTO_BACKUP\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.AUTO_BACKUPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BACKUP_DIR {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.BACKUP_DIRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BACKUP_DIR\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.BACKUP_DIRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FACTUR_NO_FORMAT {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.FACTUR_NO_FORMATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FACTUR_NO_FORMAT\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.FACTUR_NO_FORMATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FACTUR_NO_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableM_SETTING.FACTUR_NO_LENGTHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FACTUR_NO_LENGTH\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.FACTUR_NO_LENGTHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_SETTING.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_SETTING.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SETTING.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_NAMENull() {
                return this.IsNull(this.tableM_SETTING.COMPANY_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_NAMENull() {
                this[this.tableM_SETTING.COMPANY_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_ADDRESSNull() {
                return this.IsNull(this.tableM_SETTING.COMPANY_ADDRESSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_ADDRESSNull() {
                this[this.tableM_SETTING.COMPANY_ADDRESSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_ADDRESS2Null() {
                return this.IsNull(this.tableM_SETTING.COMPANY_ADDRESS2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_ADDRESS2Null() {
                this[this.tableM_SETTING.COMPANY_ADDRESS2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_CITYNull() {
                return this.IsNull(this.tableM_SETTING.COMPANY_CITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_CITYNull() {
                this[this.tableM_SETTING.COMPANY_CITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_TELPNull() {
                return this.IsNull(this.tableM_SETTING.COMPANY_TELPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_TELPNull() {
                this[this.tableM_SETTING.COMPANY_TELPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_FAXNull() {
                return this.IsNull(this.tableM_SETTING.COMPANY_FAXColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_FAXNull() {
                this[this.tableM_SETTING.COMPANY_FAXColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_NPWPNull() {
                return this.IsNull(this.tableM_SETTING.COMPANY_NPWPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_NPWPNull() {
                this[this.tableM_SETTING.COMPANY_NPWPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_PKP_DATENull() {
                return this.IsNull(this.tableM_SETTING.COMPANY_PKP_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_PKP_DATENull() {
                this[this.tableM_SETTING.COMPANY_PKP_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_LOGONull() {
                return this.IsNull(this.tableM_SETTING.COMPANY_LOGOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_LOGONull() {
                this[this.tableM_SETTING.COMPANY_LOGOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAUTO_PRINT_SALESNull() {
                return this.IsNull(this.tableM_SETTING.AUTO_PRINT_SALESColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAUTO_PRINT_SALESNull() {
                this[this.tableM_SETTING.AUTO_PRINT_SALESColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAUTO_BACKUPNull() {
                return this.IsNull(this.tableM_SETTING.AUTO_BACKUPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAUTO_BACKUPNull() {
                this[this.tableM_SETTING.AUTO_BACKUPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBACKUP_DIRNull() {
                return this.IsNull(this.tableM_SETTING.BACKUP_DIRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBACKUP_DIRNull() {
                this[this.tableM_SETTING.BACKUP_DIRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFACTUR_NO_FORMATNull() {
                return this.IsNull(this.tableM_SETTING.FACTUR_NO_FORMATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFACTUR_NO_FORMATNull() {
                this[this.tableM_SETTING.FACTUR_NO_FORMATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFACTUR_NO_LENGTHNull() {
                return this.IsNull(this.tableM_SETTING.FACTUR_NO_LENGTHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFACTUR_NO_LENGTHNull() {
                this[this.tableM_SETTING.FACTUR_NO_LENGTHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_SETTING.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_SETTING.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_SETTING.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_SETTING.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_SUB_ACCOUNTRow : System.Data.DataRow {
            
            private M_SUB_ACCOUNTDataTable tableM_SUB_ACCOUNT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_SUB_ACCOUNTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_SUB_ACCOUNT = ((M_SUB_ACCOUNTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ACCOUNT_ID {
                get {
                    return ((string)(this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_IDColumn]));
                }
                set {
                    this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableM_SUB_ACCOUNT.ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_ID\' in table \'M_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUB_ACCOUNT.ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ACCOUNT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCOUNT_NAME\' in table \'M_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUB_ACCOUNT_SALDO {
                get {
                    try {
                        return ((decimal)(this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_SALDOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCOUNT_SALDO\' in table \'M_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_SALDOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ACCOUNT_DESC {
                get {
                    try {
                        return ((string)(this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCOUNT_DESC\' in table \'M_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_SUB_ACCOUNT.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUB_ACCOUNT.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_SUB_ACCOUNT.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUB_ACCOUNT.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_IDNull() {
                return this.IsNull(this.tableM_SUB_ACCOUNT.ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_IDNull() {
                this[this.tableM_SUB_ACCOUNT.ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCOUNT_NAMENull() {
                return this.IsNull(this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCOUNT_NAMENull() {
                this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCOUNT_SALDONull() {
                return this.IsNull(this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_SALDOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCOUNT_SALDONull() {
                this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_SALDOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCOUNT_DESCNull() {
                return this.IsNull(this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCOUNT_DESCNull() {
                this[this.tableM_SUB_ACCOUNT.SUB_ACCOUNT_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_SUB_ACCOUNT.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_SUB_ACCOUNT.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_SUB_ACCOUNT.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_SUB_ACCOUNT.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_SUPPLIERRow : System.Data.DataRow {
            
            private M_SUPPLIERDataTable tableM_SUPPLIER;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_SUPPLIERRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_SUPPLIER = ((M_SUPPLIERDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_ID {
                get {
                    return ((string)(this[this.tableM_SUPPLIER.SUPPLIER_IDColumn]));
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.SUPPLIER_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_NAME\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.SUPPLIER_ADDRESSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_ADDRESS\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_ADDRESSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_PHONE {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.SUPPLIER_PHONEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_PHONE\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_PHONEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_FAX {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.SUPPLIER_FAXColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_FAX\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_FAXColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_NPWP {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.SUPPLIER_NPWPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_NPWP\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_NPWPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_CONTACT {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.SUPPLIER_CONTACTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_CONTACT\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_CONTACTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_CONTACT_PHONE {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.SUPPLIER_CONTACT_PHONEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_CONTACT_PHONE\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_CONTACT_PHONEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_LIMIT {
                get {
                    try {
                        return ((decimal)(this[this.tableM_SUPPLIER.SUPPLIER_LIMITColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_LIMIT\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUPPLIER_LIMITColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.SUB_ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCOUNT_ID\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_SUPPLIER.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_SUPPLIER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_NAMENull() {
                return this.IsNull(this.tableM_SUPPLIER.SUPPLIER_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_NAMENull() {
                this[this.tableM_SUPPLIER.SUPPLIER_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_ADDRESSNull() {
                return this.IsNull(this.tableM_SUPPLIER.SUPPLIER_ADDRESSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_ADDRESSNull() {
                this[this.tableM_SUPPLIER.SUPPLIER_ADDRESSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_PHONENull() {
                return this.IsNull(this.tableM_SUPPLIER.SUPPLIER_PHONEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_PHONENull() {
                this[this.tableM_SUPPLIER.SUPPLIER_PHONEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_FAXNull() {
                return this.IsNull(this.tableM_SUPPLIER.SUPPLIER_FAXColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_FAXNull() {
                this[this.tableM_SUPPLIER.SUPPLIER_FAXColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_NPWPNull() {
                return this.IsNull(this.tableM_SUPPLIER.SUPPLIER_NPWPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_NPWPNull() {
                this[this.tableM_SUPPLIER.SUPPLIER_NPWPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_CONTACTNull() {
                return this.IsNull(this.tableM_SUPPLIER.SUPPLIER_CONTACTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_CONTACTNull() {
                this[this.tableM_SUPPLIER.SUPPLIER_CONTACTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_CONTACT_PHONENull() {
                return this.IsNull(this.tableM_SUPPLIER.SUPPLIER_CONTACT_PHONEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_CONTACT_PHONENull() {
                this[this.tableM_SUPPLIER.SUPPLIER_CONTACT_PHONEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_LIMITNull() {
                return this.IsNull(this.tableM_SUPPLIER.SUPPLIER_LIMITColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_LIMITNull() {
                this[this.tableM_SUPPLIER.SUPPLIER_LIMITColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCOUNT_IDNull() {
                return this.IsNull(this.tableM_SUPPLIER.SUB_ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCOUNT_IDNull() {
                this[this.tableM_SUPPLIER.SUB_ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_SUPPLIER.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_SUPPLIER.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_SUPPLIER.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_SUPPLIER.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_SUPPLIER_ACCOUNTRow : System.Data.DataRow {
            
            private M_SUPPLIER_ACCOUNTDataTable tableM_SUPPLIER_ACCOUNT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_SUPPLIER_ACCOUNTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_SUPPLIER_ACCOUNT = ((M_SUPPLIER_ACCOUNTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_ID {
                get {
                    return ((string)(this[this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_IDColumn]));
                }
                set {
                    this[this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURRENCY_ID {
                get {
                    return ((string)(this[this.tableM_SUPPLIER_ACCOUNT.CURRENCY_IDColumn]));
                }
                set {
                    this[this.tableM_SUPPLIER_ACCOUNT.CURRENCY_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_ID {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER_ACCOUNT.BANK_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BANK_ID\' in table \'M_SUPPLIER_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER_ACCOUNT.BANK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_ACCOUNT_NO {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_ACCOUNT_NOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_ACCOUNT_NO\' in table \'M_SUPPLIER_ACCOUNT\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_ACCOUNT_NOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_ACCOUNT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_ACCOUNT_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_ACCOUNT_NAME\' in table \'M_SUPPLIER_ACCOUNT\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_ACCOUNT_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBANK_IDNull() {
                return this.IsNull(this.tableM_SUPPLIER_ACCOUNT.BANK_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBANK_IDNull() {
                this[this.tableM_SUPPLIER_ACCOUNT.BANK_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_ACCOUNT_NONull() {
                return this.IsNull(this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_ACCOUNT_NOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_ACCOUNT_NONull() {
                this[this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_ACCOUNT_NOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_ACCOUNT_NAMENull() {
                return this.IsNull(this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_ACCOUNT_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_ACCOUNT_NAMENull() {
                this[this.tableM_SUPPLIER_ACCOUNT.SUPPLIER_ACCOUNT_NAMEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class M_USERRow : System.Data.DataRow {
            
            private M_USERDataTable tableM_USER;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal M_USERRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableM_USER = ((M_USERDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_NAME {
                get {
                    return ((string)(this[this.tableM_USER.USER_NAMEColumn]));
                }
                set {
                    this[this.tableM_USER.USER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_PASSWORD {
                get {
                    try {
                        return ((string)(this[this.tableM_USER.USER_PASSWORDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USER_PASSWORD\' in table \'M_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_USER.USER_PASSWORDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool USER_STATUS {
                get {
                    try {
                        return ((bool)(this[this.tableM_USER.USER_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USER_STATUS\' in table \'M_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_USER.USER_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableM_USER.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'M_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_USER.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableM_USER.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'M_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableM_USER.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_PASSWORDNull() {
                return this.IsNull(this.tableM_USER.USER_PASSWORDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_PASSWORDNull() {
                this[this.tableM_USER.USER_PASSWORDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_STATUSNull() {
                return this.IsNull(this.tableM_USER.USER_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_STATUSNull() {
                this[this.tableM_USER.USER_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableM_USER.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableM_USER.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableM_USER.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableM_USER.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_APOTEK_SETTINGRow : System.Data.DataRow {
            
            private T_APOTEK_SETTINGDataTable tableT_APOTEK_SETTING;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_APOTEK_SETTINGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_APOTEK_SETTING = ((T_APOTEK_SETTINGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableT_APOTEK_SETTING.SETTING_IDColumn]));
                }
                set {
                    this[this.tableT_APOTEK_SETTING.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEFAULT_PIUTANG_CREDIT_LONG {
                get {
                    try {
                        return ((int)(this[this.tableT_APOTEK_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEFAULT_PIUTANG_CREDIT_LONG\' in table \'T_APOTEK_SETTING\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_APOTEK_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_APOTEK_SETTING.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_APOTEK_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_APOTEK_SETTING.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_APOTEK_SETTING.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_APOTEK_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_APOTEK_SETTING.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_PIUTANG_CREDIT_LONGNull() {
                return this.IsNull(this.tableT_APOTEK_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_PIUTANG_CREDIT_LONGNull() {
                this[this.tableT_APOTEK_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_APOTEK_SETTING.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_APOTEK_SETTING.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_APOTEK_SETTING.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_APOTEK_SETTING.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_BILLIARD_SETTINGRow : System.Data.DataRow {
            
            private T_BILLIARD_SETTINGDataTable tableT_BILLIARD_SETTING;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_BILLIARD_SETTINGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_BILLIARD_SETTING = ((T_BILLIARD_SETTINGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableT_BILLIARD_SETTING.SETTING_IDColumn]));
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BILIARD_ITEM_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BILIARD_ITEM_PRICE\' in table \'T_BILLIARD_SETTING\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BILIARD_ITEM_PRICE_VIP {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICE_VIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BILIARD_ITEM_PRICE_VIP\' in table \'T_BILLIARD_SETTING\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICE_VIPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BILIARD_ITEM_PRICE_MINI {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICE_MINIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BILIARD_ITEM_PRICE_MINI\' in table \'T_BILLIARD_SETTING\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICE_MINIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QUIT_TIMEOUT {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.QUIT_TIMEOUTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QUIT_TIMEOUT\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.QUIT_TIMEOUTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MINIMUM_PLAY {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.MINIMUM_PLAYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MINIMUM_PLAY\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.MINIMUM_PLAYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FULLFILL_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.FULLFILL_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FULLFILL_PRICE\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.FULLFILL_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REFEREE_BONUS {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.REFEREE_BONUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REFEREE_BONUS\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.REFEREE_BONUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BACK_COLOR {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.BACK_COLORColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BACK_COLOR\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.BACK_COLORColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_BACK_COLOR {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLORColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_BACK_COLOR\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLORColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_FONT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_NAME\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESK_FONT_SIZE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_SIZE\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_BOLD {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_BOLD\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_ITALIC {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALICColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_ITALIC\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALICColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_UNDERLINE {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_UNDERLINE\' in table \'T_BILLIARD_SETTING\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_FONT_COLOR {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLORColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_COLOR\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLORColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_WIDTH {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_WIDTHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_WIDTH\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_WIDTHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_HEIGHT {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_HEIGHTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_HEIGHT\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_HEIGHTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_BACK_COLOR1 {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLOR1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_BACK_COLOR1\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLOR1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_FONT_NAME1 {
                get {
                    try {
                        return ((string)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAME1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_NAME1\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAME1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESK_FONT_SIZE1 {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZE1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_SIZE1\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZE1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_BOLD1 {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLD1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_BOLD1\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLD1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_ITALIC1 {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALIC1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_ITALIC1\' in table \'T_BILLIARD_SETTING\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALIC1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_UNDERLINE1 {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINE1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_UNDERLINE1\' in table \'T_BILLIARD_SETTING\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINE1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_FONT_COLOR1 {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLOR1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_COLOR1\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLOR1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_WIDTH1 {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_WIDTH1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_WIDTH1\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_WIDTH1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_HEIGHT1 {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_HEIGHT1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_HEIGHT1\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_HEIGHT1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_BACK_COLOR2 {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLOR2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_BACK_COLOR2\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLOR2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_FONT_NAME2 {
                get {
                    try {
                        return ((string)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAME2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_NAME2\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAME2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESK_FONT_SIZE2 {
                get {
                    try {
                        return ((decimal)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZE2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_SIZE2\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZE2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_BOLD2 {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLD2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_BOLD2\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLD2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_ITALIC2 {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALIC2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_ITALIC2\' in table \'T_BILLIARD_SETTING\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALIC2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DESK_FONT_UNDERLINE2 {
                get {
                    try {
                        return ((bool)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINE2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_UNDERLINE2\' in table \'T_BILLIARD_SETTING\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINE2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_FONT_COLOR2 {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLOR2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_FONT_COLOR2\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLOR2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_WIDTH2 {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_WIDTH2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_WIDTH2\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_WIDTH2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESK_HEIGHT2 {
                get {
                    try {
                        return ((int)(this[this.tableT_BILLIARD_SETTING.DESK_HEIGHT2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_HEIGHT2\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.DESK_HEIGHT2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_BILLIARD_SETTING.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_BILLIARD_SETTING.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_BILLIARD_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BILLIARD_SETTING.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILIARD_ITEM_PRICENull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILIARD_ITEM_PRICENull() {
                this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILIARD_ITEM_PRICE_VIPNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICE_VIPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILIARD_ITEM_PRICE_VIPNull() {
                this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICE_VIPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILIARD_ITEM_PRICE_MININull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICE_MINIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILIARD_ITEM_PRICE_MININull() {
                this[this.tableT_BILLIARD_SETTING.BILIARD_ITEM_PRICE_MINIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUIT_TIMEOUTNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.QUIT_TIMEOUTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUIT_TIMEOUTNull() {
                this[this.tableT_BILLIARD_SETTING.QUIT_TIMEOUTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMINIMUM_PLAYNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.MINIMUM_PLAYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMINIMUM_PLAYNull() {
                this[this.tableT_BILLIARD_SETTING.MINIMUM_PLAYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFULLFILL_PRICENull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.FULLFILL_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFULLFILL_PRICENull() {
                this[this.tableT_BILLIARD_SETTING.FULLFILL_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFEREE_BONUSNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.REFEREE_BONUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFEREE_BONUSNull() {
                this[this.tableT_BILLIARD_SETTING.REFEREE_BONUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBACK_COLORNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.BACK_COLORColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBACK_COLORNull() {
                this[this.tableT_BILLIARD_SETTING.BACK_COLORColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_BACK_COLORNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_BACK_COLORColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_BACK_COLORNull() {
                this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLORColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_NAMENull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_NAMENull() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_SIZENull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_SIZEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_SIZENull() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_BOLDNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_BOLDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_BOLDNull() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_ITALICNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_ITALICColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_ITALICNull() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALICColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_UNDERLINENull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_UNDERLINENull() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_COLORNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_COLORColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_COLORNull() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLORColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_WIDTHNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_WIDTHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_WIDTHNull() {
                this[this.tableT_BILLIARD_SETTING.DESK_WIDTHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_HEIGHTNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_HEIGHTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_HEIGHTNull() {
                this[this.tableT_BILLIARD_SETTING.DESK_HEIGHTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_BACK_COLOR1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_BACK_COLOR1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_BACK_COLOR1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLOR1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_NAME1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_NAME1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_NAME1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAME1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_SIZE1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_SIZE1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_SIZE1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZE1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_BOLD1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_BOLD1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_BOLD1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLD1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_ITALIC1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_ITALIC1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_ITALIC1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALIC1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_UNDERLINE1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINE1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_UNDERLINE1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINE1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_COLOR1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_COLOR1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_COLOR1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLOR1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_WIDTH1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_WIDTH1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_WIDTH1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_WIDTH1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_HEIGHT1Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_HEIGHT1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_HEIGHT1Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_HEIGHT1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_BACK_COLOR2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_BACK_COLOR2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_BACK_COLOR2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_BACK_COLOR2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_NAME2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_NAME2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_NAME2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_NAME2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_SIZE2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_SIZE2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_SIZE2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_SIZE2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_BOLD2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_BOLD2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_BOLD2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_BOLD2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_ITALIC2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_ITALIC2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_ITALIC2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_ITALIC2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_UNDERLINE2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINE2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_UNDERLINE2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_UNDERLINE2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_FONT_COLOR2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_FONT_COLOR2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_FONT_COLOR2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_FONT_COLOR2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_WIDTH2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_WIDTH2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_WIDTH2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_WIDTH2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_HEIGHT2Null() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.DESK_HEIGHT2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_HEIGHT2Null() {
                this[this.tableT_BILLIARD_SETTING.DESK_HEIGHT2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_BILLIARD_SETTING.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_BILLIARD_SETTING.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_BILLIARD_SETTING.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_CAFE_SETTINGRow : System.Data.DataRow {
            
            private T_CAFE_SETTINGDataTable tableT_CAFE_SETTING;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CAFE_SETTINGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_CAFE_SETTING = ((T_CAFE_SETTINGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableT_CAFE_SETTING.SETTING_IDColumn]));
                }
                set {
                    this[this.tableT_CAFE_SETTING.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXPORTED_DIR {
                get {
                    try {
                        return ((string)(this[this.tableT_CAFE_SETTING.EXPORTED_DIRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EXPORTED_DIR\' in table \'T_CAFE_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CAFE_SETTING.EXPORTED_DIRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISCOUNT_PASSWORD {
                get {
                    try {
                        return ((string)(this[this.tableT_CAFE_SETTING.DISCOUNT_PASSWORDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISCOUNT_PASSWORD\' in table \'T_CAFE_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CAFE_SETTING.DISCOUNT_PASSWORDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TELP_NO_SARAN_KRITIK {
                get {
                    try {
                        return ((string)(this[this.tableT_CAFE_SETTING.TELP_NO_SARAN_KRITIKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TELP_NO_SARAN_KRITIK\' in table \'T_CAFE_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CAFE_SETTING.TELP_NO_SARAN_KRITIKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_CAFE_SETTING.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_CAFE_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CAFE_SETTING.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_CAFE_SETTING.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_CAFE_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CAFE_SETTING.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXPORTED_DIRNull() {
                return this.IsNull(this.tableT_CAFE_SETTING.EXPORTED_DIRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXPORTED_DIRNull() {
                this[this.tableT_CAFE_SETTING.EXPORTED_DIRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNT_PASSWORDNull() {
                return this.IsNull(this.tableT_CAFE_SETTING.DISCOUNT_PASSWORDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNT_PASSWORDNull() {
                this[this.tableT_CAFE_SETTING.DISCOUNT_PASSWORDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELP_NO_SARAN_KRITIKNull() {
                return this.IsNull(this.tableT_CAFE_SETTING.TELP_NO_SARAN_KRITIKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELP_NO_SARAN_KRITIKNull() {
                this[this.tableT_CAFE_SETTING.TELP_NO_SARAN_KRITIKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_CAFE_SETTING.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_CAFE_SETTING.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_CAFE_SETTING.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_CAFE_SETTING.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_COMMISSIONRow : System.Data.DataRow {
            
            private T_COMMISSIONDataTable tableT_COMMISSION;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_COMMISSIONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_COMMISSION = ((T_COMMISSIONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COMMISSION_ID {
                get {
                    return ((decimal)(this[this.tableT_COMMISSION.COMMISSION_IDColumn]));
                }
                set {
                    this[this.tableT_COMMISSION.COMMISSION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_COMMISSION.TRANSACTION_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_ID\' in table \'T_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_COMMISSION.TRANSACTION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_FACTUR_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_COMMISSION.TRANSACTION_FACTUR_NOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_FACTUR_NO\' in table \'T_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_COMMISSION.TRANSACTION_FACTUR_NOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHARE_TO {
                get {
                    try {
                        return ((string)(this[this.tableT_COMMISSION.SHARE_TOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SHARE_TO\' in table \'T_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_COMMISSION.SHARE_TOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMISSION_PIC {
                get {
                    try {
                        return ((string)(this[this.tableT_COMMISSION.COMMISSION_PICColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMMISSION_PIC\' in table \'T_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_COMMISSION.COMMISSION_PICColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COMMISSION_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_COMMISSION.COMMISSION_VALUEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMMISSION_VALUE\' in table \'T_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_COMMISSION.COMMISSION_VALUEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime COMMISSION_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_COMMISSION.COMMISSION_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMMISSION_DATE\' in table \'T_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_COMMISSION.COMMISSION_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_COMMISSION.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_COMMISSION.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_COMMISSION.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_COMMISSION.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_IDNull() {
                return this.IsNull(this.tableT_COMMISSION.TRANSACTION_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_IDNull() {
                this[this.tableT_COMMISSION.TRANSACTION_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_FACTUR_NONull() {
                return this.IsNull(this.tableT_COMMISSION.TRANSACTION_FACTUR_NOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_FACTUR_NONull() {
                this[this.tableT_COMMISSION.TRANSACTION_FACTUR_NOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHARE_TONull() {
                return this.IsNull(this.tableT_COMMISSION.SHARE_TOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHARE_TONull() {
                this[this.tableT_COMMISSION.SHARE_TOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMISSION_PICNull() {
                return this.IsNull(this.tableT_COMMISSION.COMMISSION_PICColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMISSION_PICNull() {
                this[this.tableT_COMMISSION.COMMISSION_PICColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMISSION_VALUENull() {
                return this.IsNull(this.tableT_COMMISSION.COMMISSION_VALUEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMISSION_VALUENull() {
                this[this.tableT_COMMISSION.COMMISSION_VALUEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMISSION_DATENull() {
                return this.IsNull(this.tableT_COMMISSION.COMMISSION_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMISSION_DATENull() {
                this[this.tableT_COMMISSION.COMMISSION_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_COMMISSION.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_COMMISSION.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_COMMISSION.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_COMMISSION.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_CONTRACTOR_SETTINGRow : System.Data.DataRow {
            
            private T_CONTRACTOR_SETTINGDataTable tableT_CONTRACTOR_SETTING;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CONTRACTOR_SETTINGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_CONTRACTOR_SETTING = ((T_CONTRACTOR_SETTINGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableT_CONTRACTOR_SETTING.SETTING_IDColumn]));
                }
                set {
                    this[this.tableT_CONTRACTOR_SETTING.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GIRO_DELETE_PIN {
                get {
                    try {
                        return ((string)(this[this.tableT_CONTRACTOR_SETTING.GIRO_DELETE_PINColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_DELETE_PIN\' in table \'T_CONTRACTOR_SETTING\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_CONTRACTOR_SETTING.GIRO_DELETE_PINColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PO_DELETE_PIN {
                get {
                    try {
                        return ((string)(this[this.tableT_CONTRACTOR_SETTING.PO_DELETE_PINColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PO_DELETE_PIN\' in table \'T_CONTRACTOR_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CONTRACTOR_SETTING.PO_DELETE_PINColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] LOGO_IMAGE {
                get {
                    try {
                        return ((byte[])(this[this.tableT_CONTRACTOR_SETTING.LOGO_IMAGEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOGO_IMAGE\' in table \'T_CONTRACTOR_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CONTRACTOR_SETTING.LOGO_IMAGEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_NAME_FONT {
                get {
                    try {
                        return ((string)(this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_FONTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_NAME_FONT\' in table \'T_CONTRACTOR_SETTING\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_FONTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_NAME_COLOUR {
                get {
                    try {
                        return ((string)(this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_COLOURColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_NAME_COLOUR\' in table \'T_CONTRACTOR_SETTING\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_COLOURColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COMPANY_NAME_FONT_HEIGHT {
                get {
                    try {
                        return ((int)(this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_FONT_HEIGHTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMPANY_NAME_FONT_HEIGHT\' in table \'T_CONTRACTOR_SETTING\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_FONT_HEIGHTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_DELETE_PINNull() {
                return this.IsNull(this.tableT_CONTRACTOR_SETTING.GIRO_DELETE_PINColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_DELETE_PINNull() {
                this[this.tableT_CONTRACTOR_SETTING.GIRO_DELETE_PINColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPO_DELETE_PINNull() {
                return this.IsNull(this.tableT_CONTRACTOR_SETTING.PO_DELETE_PINColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPO_DELETE_PINNull() {
                this[this.tableT_CONTRACTOR_SETTING.PO_DELETE_PINColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOGO_IMAGENull() {
                return this.IsNull(this.tableT_CONTRACTOR_SETTING.LOGO_IMAGEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOGO_IMAGENull() {
                this[this.tableT_CONTRACTOR_SETTING.LOGO_IMAGEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_NAME_FONTNull() {
                return this.IsNull(this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_FONTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_NAME_FONTNull() {
                this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_FONTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_NAME_COLOURNull() {
                return this.IsNull(this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_COLOURColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_NAME_COLOURNull() {
                this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_COLOURColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANY_NAME_FONT_HEIGHTNull() {
                return this.IsNull(this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_FONT_HEIGHTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANY_NAME_FONT_HEIGHTNull() {
                this[this.tableT_CONTRACTOR_SETTING.COMPANY_NAME_FONT_HEIGHTColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_DEFAULT_ACCOUNTRow : System.Data.DataRow {
            
            private T_DEFAULT_ACCOUNTDataTable tableT_DEFAULT_ACCOUNT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DEFAULT_ACCOUNTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_DEFAULT_ACCOUNT = ((T_DEFAULT_ACCOUNTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEFAULT_ACCOUNT_ID {
                get {
                    return ((int)(this[this.tableT_DEFAULT_ACCOUNT.DEFAULT_ACCOUNT_IDColumn]));
                }
                set {
                    this[this.tableT_DEFAULT_ACCOUNT.DEFAULT_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableT_DEFAULT_ACCOUNT.TRANSACTION_TYPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_TYPE\' in table \'T_DEFAULT_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DEFAULT_ACCOUNT.TRANSACTION_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_PAYMENT {
                get {
                    try {
                        return ((string)(this[this.tableT_DEFAULT_ACCOUNT.TRANSACTION_PAYMENTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_PAYMENT\' in table \'T_DEFAULT_ACCOUNT\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_DEFAULT_ACCOUNT.TRANSACTION_PAYMENTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEBET_SUB_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_DEFAULT_ACCOUNT.DEBET_SUB_ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEBET_SUB_ACCOUNT_ID\' in table \'T_DEFAULT_ACCOUNT\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_DEFAULT_ACCOUNT.DEBET_SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KREDIT_SUB_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_DEFAULT_ACCOUNT.KREDIT_SUB_ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KREDIT_SUB_ACCOUNT_ID\' in table \'T_DEFAULT_ACCOUNT\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_DEFAULT_ACCOUNT.KREDIT_SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_DEFAULT_ACCOUNT.DESCRIPTIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'T_DEFAULT_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DEFAULT_ACCOUNT.DESCRIPTIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_DEFAULT_ACCOUNT.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_DEFAULT_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DEFAULT_ACCOUNT.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_DEFAULT_ACCOUNT.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_DEFAULT_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DEFAULT_ACCOUNT.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_TYPENull() {
                return this.IsNull(this.tableT_DEFAULT_ACCOUNT.TRANSACTION_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_TYPENull() {
                this[this.tableT_DEFAULT_ACCOUNT.TRANSACTION_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_PAYMENTNull() {
                return this.IsNull(this.tableT_DEFAULT_ACCOUNT.TRANSACTION_PAYMENTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_PAYMENTNull() {
                this[this.tableT_DEFAULT_ACCOUNT.TRANSACTION_PAYMENTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEBET_SUB_ACCOUNT_IDNull() {
                return this.IsNull(this.tableT_DEFAULT_ACCOUNT.DEBET_SUB_ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEBET_SUB_ACCOUNT_IDNull() {
                this[this.tableT_DEFAULT_ACCOUNT.DEBET_SUB_ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKREDIT_SUB_ACCOUNT_IDNull() {
                return this.IsNull(this.tableT_DEFAULT_ACCOUNT.KREDIT_SUB_ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKREDIT_SUB_ACCOUNT_IDNull() {
                this[this.tableT_DEFAULT_ACCOUNT.KREDIT_SUB_ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableT_DEFAULT_ACCOUNT.DESCRIPTIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableT_DEFAULT_ACCOUNT.DESCRIPTIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_DEFAULT_ACCOUNT.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_DEFAULT_ACCOUNT.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_DEFAULT_ACCOUNT.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_DEFAULT_ACCOUNT.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_DESKRow : System.Data.DataRow {
            
            private T_DESKDataTable tableT_DESK;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DESKRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_DESK = ((T_DESKDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal T_DESK_ID {
                get {
                    return ((decimal)(this[this.tableT_DESK.T_DESK_IDColumn]));
                }
                set {
                    this[this.tableT_DESK.T_DESK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_DESK.DESK_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_ID\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DESK_BOOKING_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_DESK.DESK_BOOKING_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_BOOKING_DATE\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_BOOKING_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DESK_IN_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_DESK.DESK_IN_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_IN_DATE\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_IN_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DESK_OUT_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_DESK.DESK_OUT_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_OUT_DATE\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_OUT_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_CUST_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_DESK.DESK_CUST_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_CUST_ID\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_CUST_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESK_LONG_PLAY_MINUTES {
                get {
                    try {
                        return ((decimal)(this[this.tableT_DESK.DESK_LONG_PLAY_MINUTESColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_LONG_PLAY_MINUTES\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_LONG_PLAY_MINUTESColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableT_DESK.DESK_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_STATUS\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESK_TRANSACTION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_DESK.DESK_TRANSACTION_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_TRANSACTION_ID\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_TRANSACTION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESK_GRAND_TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableT_DESK.DESK_GRAND_TOTALColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_GRAND_TOTAL\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.DESK_GRAND_TOTALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_DESK.EMPLOYEE_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_ID\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.EMPLOYEE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_DESK.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_DESK.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_DESK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DESK.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_IDNull() {
                return this.IsNull(this.tableT_DESK.DESK_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_IDNull() {
                this[this.tableT_DESK.DESK_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_BOOKING_DATENull() {
                return this.IsNull(this.tableT_DESK.DESK_BOOKING_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_BOOKING_DATENull() {
                this[this.tableT_DESK.DESK_BOOKING_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_IN_DATENull() {
                return this.IsNull(this.tableT_DESK.DESK_IN_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_IN_DATENull() {
                this[this.tableT_DESK.DESK_IN_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_OUT_DATENull() {
                return this.IsNull(this.tableT_DESK.DESK_OUT_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_OUT_DATENull() {
                this[this.tableT_DESK.DESK_OUT_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_CUST_IDNull() {
                return this.IsNull(this.tableT_DESK.DESK_CUST_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_CUST_IDNull() {
                this[this.tableT_DESK.DESK_CUST_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_LONG_PLAY_MINUTESNull() {
                return this.IsNull(this.tableT_DESK.DESK_LONG_PLAY_MINUTESColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_LONG_PLAY_MINUTESNull() {
                this[this.tableT_DESK.DESK_LONG_PLAY_MINUTESColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_STATUSNull() {
                return this.IsNull(this.tableT_DESK.DESK_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_STATUSNull() {
                this[this.tableT_DESK.DESK_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_TRANSACTION_IDNull() {
                return this.IsNull(this.tableT_DESK.DESK_TRANSACTION_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_TRANSACTION_IDNull() {
                this[this.tableT_DESK.DESK_TRANSACTION_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_GRAND_TOTALNull() {
                return this.IsNull(this.tableT_DESK.DESK_GRAND_TOTALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_GRAND_TOTALNull() {
                this[this.tableT_DESK.DESK_GRAND_TOTALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_IDNull() {
                return this.IsNull(this.tableT_DESK.EMPLOYEE_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_IDNull() {
                this[this.tableT_DESK.EMPLOYEE_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_DESK.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_DESK.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_DESK.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_DESK.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_GIRORow : System.Data.DataRow {
            
            private T_GIRODataTable tableT_GIRO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_GIRORow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_GIRO = ((T_GIRODataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GIRO_ID {
                get {
                    return ((decimal)(this[this.tableT_GIRO.GIRO_IDColumn]));
                }
                set {
                    this[this.tableT_GIRO.GIRO_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURRENCY_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_GIRO.CURRENCY_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CURRENCY_ID\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.CURRENCY_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANK_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_GIRO.BANK_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BANK_ID\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.BANK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GIRO_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_GIRO.GIRO_NOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_NO\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.GIRO_NOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PI_HUTANG_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_GIRO.PI_HUTANG_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_ID\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.PI_HUTANG_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GIRO_OUT_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_GIRO.GIRO_OUT_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_OUT_DATE\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.GIRO_OUT_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GIRO_MATURITY_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_GIRO.GIRO_MATURITY_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_MATURITY_DATE\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.GIRO_MATURITY_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GIRO_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableT_GIRO.GIRO_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_STATUS\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.GIRO_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GIRO_TO {
                get {
                    try {
                        return ((string)(this[this.tableT_GIRO.GIRO_TOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_TO\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.GIRO_TOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GIRO_FROM {
                get {
                    try {
                        return ((string)(this[this.tableT_GIRO.GIRO_FROMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_FROM\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.GIRO_FROMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GIRO_CAIR_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_GIRO.GIRO_CAIR_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_CAIR_DATE\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.GIRO_CAIR_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GIRO_AMMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableT_GIRO.GIRO_AMMOUNTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GIRO_AMMOUNT\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.GIRO_AMMOUNTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_GIRO.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_GIRO.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_GIRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GIRO.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCURRENCY_IDNull() {
                return this.IsNull(this.tableT_GIRO.CURRENCY_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCURRENCY_IDNull() {
                this[this.tableT_GIRO.CURRENCY_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBANK_IDNull() {
                return this.IsNull(this.tableT_GIRO.BANK_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBANK_IDNull() {
                this[this.tableT_GIRO.BANK_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_NONull() {
                return this.IsNull(this.tableT_GIRO.GIRO_NOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_NONull() {
                this[this.tableT_GIRO.GIRO_NOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_IDNull() {
                return this.IsNull(this.tableT_GIRO.PI_HUTANG_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_IDNull() {
                this[this.tableT_GIRO.PI_HUTANG_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_OUT_DATENull() {
                return this.IsNull(this.tableT_GIRO.GIRO_OUT_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_OUT_DATENull() {
                this[this.tableT_GIRO.GIRO_OUT_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_MATURITY_DATENull() {
                return this.IsNull(this.tableT_GIRO.GIRO_MATURITY_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_MATURITY_DATENull() {
                this[this.tableT_GIRO.GIRO_MATURITY_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_STATUSNull() {
                return this.IsNull(this.tableT_GIRO.GIRO_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_STATUSNull() {
                this[this.tableT_GIRO.GIRO_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_TONull() {
                return this.IsNull(this.tableT_GIRO.GIRO_TOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_TONull() {
                this[this.tableT_GIRO.GIRO_TOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_FROMNull() {
                return this.IsNull(this.tableT_GIRO.GIRO_FROMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_FROMNull() {
                this[this.tableT_GIRO.GIRO_FROMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_CAIR_DATENull() {
                return this.IsNull(this.tableT_GIRO.GIRO_CAIR_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_CAIR_DATENull() {
                this[this.tableT_GIRO.GIRO_CAIR_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIRO_AMMOUNTNull() {
                return this.IsNull(this.tableT_GIRO.GIRO_AMMOUNTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIRO_AMMOUNTNull() {
                this[this.tableT_GIRO.GIRO_AMMOUNTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_GIRO.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_GIRO.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_GIRO.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_GIRO.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_GROSIR_SETTINGRow : System.Data.DataRow {
            
            private T_GROSIR_SETTINGDataTable tableT_GROSIR_SETTING;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_GROSIR_SETTINGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_GROSIR_SETTING = ((T_GROSIR_SETTINGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableT_GROSIR_SETTING.SETTING_IDColumn]));
                }
                set {
                    this[this.tableT_GROSIR_SETTING.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEFAULT_PIUTANG_CREDIT_LONG {
                get {
                    try {
                        return ((int)(this[this.tableT_GROSIR_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEFAULT_PIUTANG_CREDIT_LONG\' in table \'T_GROSIR_SETTING\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GROSIR_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISCOUNT_PIN {
                get {
                    try {
                        return ((string)(this[this.tableT_GROSIR_SETTING.DISCOUNT_PINColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISCOUNT_PIN\' in table \'T_GROSIR_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GROSIR_SETTING.DISCOUNT_PINColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_GROSIR_SETTING.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_GROSIR_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GROSIR_SETTING.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_GROSIR_SETTING.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_GROSIR_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_GROSIR_SETTING.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_PIUTANG_CREDIT_LONGNull() {
                return this.IsNull(this.tableT_GROSIR_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_PIUTANG_CREDIT_LONGNull() {
                this[this.tableT_GROSIR_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNT_PINNull() {
                return this.IsNull(this.tableT_GROSIR_SETTING.DISCOUNT_PINColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNT_PINNull() {
                this[this.tableT_GROSIR_SETTING.DISCOUNT_PINColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_GROSIR_SETTING.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_GROSIR_SETTING.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_GROSIR_SETTING.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_GROSIR_SETTING.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_JOURNALRow : System.Data.DataRow {
            
            private T_JOURNALDataTable tableT_JOURNAL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_JOURNALRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_JOURNAL = ((T_JOURNALDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JOURNAL_ID {
                get {
                    return ((decimal)(this[this.tableT_JOURNAL.JOURNAL_IDColumn]));
                }
                set {
                    this[this.tableT_JOURNAL.JOURNAL_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_JOURNAL.ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_ID\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_JOURNAL.SUB_ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCOUNT_ID\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VOUCHER_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_JOURNAL.VOUCHER_NOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VOUCHER_NO\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.VOUCHER_NOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JOURNAL_PIC {
                get {
                    try {
                        return ((string)(this[this.tableT_JOURNAL.JOURNAL_PICColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JOURNAL_PIC\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.JOURNAL_PICColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JOURNAL_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_JOURNAL.JOURNAL_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JOURNAL_DATE\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.JOURNAL_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JOURNAL_JUMLAH {
                get {
                    try {
                        return ((decimal)(this[this.tableT_JOURNAL.JOURNAL_JUMLAHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JOURNAL_JUMLAH\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.JOURNAL_JUMLAHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JOURNAL_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableT_JOURNAL.JOURNAL_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JOURNAL_STATUS\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.JOURNAL_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JOURNAL_DESC {
                get {
                    try {
                        return ((string)(this[this.tableT_JOURNAL.JOURNAL_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JOURNAL_DESC\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.JOURNAL_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ACCOUNT_SALDO {
                get {
                    try {
                        return ((decimal)(this[this.tableT_JOURNAL.ACCOUNT_SALDOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_SALDO\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.ACCOUNT_SALDOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUB_ACCONT_SALDO {
                get {
                    try {
                        return ((decimal)(this[this.tableT_JOURNAL.SUB_ACCONT_SALDOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCONT_SALDO\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.SUB_ACCONT_SALDOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_JOURNAL.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_JOURNAL.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_JOURNAL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_JOURNAL.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_IDNull() {
                return this.IsNull(this.tableT_JOURNAL.ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_IDNull() {
                this[this.tableT_JOURNAL.ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCOUNT_IDNull() {
                return this.IsNull(this.tableT_JOURNAL.SUB_ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCOUNT_IDNull() {
                this[this.tableT_JOURNAL.SUB_ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVOUCHER_NONull() {
                return this.IsNull(this.tableT_JOURNAL.VOUCHER_NOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVOUCHER_NONull() {
                this[this.tableT_JOURNAL.VOUCHER_NOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJOURNAL_PICNull() {
                return this.IsNull(this.tableT_JOURNAL.JOURNAL_PICColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJOURNAL_PICNull() {
                this[this.tableT_JOURNAL.JOURNAL_PICColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJOURNAL_DATENull() {
                return this.IsNull(this.tableT_JOURNAL.JOURNAL_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJOURNAL_DATENull() {
                this[this.tableT_JOURNAL.JOURNAL_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJOURNAL_JUMLAHNull() {
                return this.IsNull(this.tableT_JOURNAL.JOURNAL_JUMLAHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJOURNAL_JUMLAHNull() {
                this[this.tableT_JOURNAL.JOURNAL_JUMLAHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJOURNAL_STATUSNull() {
                return this.IsNull(this.tableT_JOURNAL.JOURNAL_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJOURNAL_STATUSNull() {
                this[this.tableT_JOURNAL.JOURNAL_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJOURNAL_DESCNull() {
                return this.IsNull(this.tableT_JOURNAL.JOURNAL_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJOURNAL_DESCNull() {
                this[this.tableT_JOURNAL.JOURNAL_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_SALDONull() {
                return this.IsNull(this.tableT_JOURNAL.ACCOUNT_SALDOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_SALDONull() {
                this[this.tableT_JOURNAL.ACCOUNT_SALDOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCONT_SALDONull() {
                return this.IsNull(this.tableT_JOURNAL.SUB_ACCONT_SALDOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCONT_SALDONull() {
                this[this.tableT_JOURNAL.SUB_ACCONT_SALDOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_JOURNAL.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_JOURNAL.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_JOURNAL.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_JOURNAL.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_LOGRow : System.Data.DataRow {
            
            private T_LOGDataTable tableT_LOG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LOGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_LOG = ((T_LOGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LOG_ID {
                get {
                    return ((decimal)(this[this.tableT_LOG.LOG_IDColumn]));
                }
                set {
                    this[this.tableT_LOG.LOG_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LOG_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_LOG.LOG_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOG_DATE\' in table \'T_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOG.LOG_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOG_USER {
                get {
                    try {
                        return ((string)(this[this.tableT_LOG.LOG_USERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOG_USER\' in table \'T_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOG.LOG_USERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOG_COMP_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_LOG.LOG_COMP_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOG_COMP_NAME\' in table \'T_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOG.LOG_COMP_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOG_IP {
                get {
                    try {
                        return ((string)(this[this.tableT_LOG.LOG_IPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOG_IP\' in table \'T_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOG.LOG_IPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOG_ACTION {
                get {
                    try {
                        return ((string)(this[this.tableT_LOG.LOG_ACTIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOG_ACTION\' in table \'T_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOG.LOG_ACTIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOG_TABLE {
                get {
                    try {
                        return ((string)(this[this.tableT_LOG.LOG_TABLEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOG_TABLE\' in table \'T_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOG.LOG_TABLEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOG_DESC {
                get {
                    try {
                        return ((string)(this[this.tableT_LOG.LOG_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOG_DESC\' in table \'T_LOG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LOG.LOG_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOG_DATENull() {
                return this.IsNull(this.tableT_LOG.LOG_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOG_DATENull() {
                this[this.tableT_LOG.LOG_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOG_USERNull() {
                return this.IsNull(this.tableT_LOG.LOG_USERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOG_USERNull() {
                this[this.tableT_LOG.LOG_USERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOG_COMP_NAMENull() {
                return this.IsNull(this.tableT_LOG.LOG_COMP_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOG_COMP_NAMENull() {
                this[this.tableT_LOG.LOG_COMP_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOG_IPNull() {
                return this.IsNull(this.tableT_LOG.LOG_IPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOG_IPNull() {
                this[this.tableT_LOG.LOG_IPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOG_ACTIONNull() {
                return this.IsNull(this.tableT_LOG.LOG_ACTIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOG_ACTIONNull() {
                this[this.tableT_LOG.LOG_ACTIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOG_TABLENull() {
                return this.IsNull(this.tableT_LOG.LOG_TABLEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOG_TABLENull() {
                this[this.tableT_LOG.LOG_TABLEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOG_DESCNull() {
                return this.IsNull(this.tableT_LOG.LOG_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOG_DESCNull() {
                this[this.tableT_LOG.LOG_DESCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_MENU_USERRow : System.Data.DataRow {
            
            private T_MENU_USERDataTable tableT_MENU_USER;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_MENU_USERRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_MENU_USER = ((T_MENU_USERDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MENU_ID {
                get {
                    return ((decimal)(this[this.tableT_MENU_USER.MENU_IDColumn]));
                }
                set {
                    this[this.tableT_MENU_USER.MENU_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_NAME {
                get {
                    return ((string)(this[this.tableT_MENU_USER.USER_NAMEColumn]));
                }
                set {
                    this[this.tableT_MENU_USER.USER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableT_MENU_USER.SETTING_IDColumn]));
                }
                set {
                    this[this.tableT_MENU_USER.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HAS_ACCESS {
                get {
                    try {
                        return ((bool)(this[this.tableT_MENU_USER.HAS_ACCESSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HAS_ACCESS\' in table \'T_MENU_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_MENU_USER.HAS_ACCESSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_MENU_USER.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_MENU_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_MENU_USER.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_MENU_USER.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_MENU_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_MENU_USER.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAS_ACCESSNull() {
                return this.IsNull(this.tableT_MENU_USER.HAS_ACCESSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAS_ACCESSNull() {
                this[this.tableT_MENU_USER.HAS_ACCESSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_MENU_USER.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_MENU_USER.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_MENU_USER.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_MENU_USER.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_MOTOR_SETTINGRow : System.Data.DataRow {
            
            private T_MOTOR_SETTINGDataTable tableT_MOTOR_SETTING;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_MOTOR_SETTINGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_MOTOR_SETTING = ((T_MOTOR_SETTINGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTING_ID {
                get {
                    return ((string)(this[this.tableT_MOTOR_SETTING.SETTING_IDColumn]));
                }
                set {
                    this[this.tableT_MOTOR_SETTING.SETTING_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEFAULT_PIUTANG_CREDIT_LONG {
                get {
                    try {
                        return ((int)(this[this.tableT_MOTOR_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DEFAULT_PIUTANG_CREDIT_LONG\' in table \'T_MOTOR_SETTING\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_MOTOR_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DISCOUNT_PIN {
                get {
                    try {
                        return ((string)(this[this.tableT_MOTOR_SETTING.DISCOUNT_PINColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISCOUNT_PIN\' in table \'T_MOTOR_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_MOTOR_SETTING.DISCOUNT_PINColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_MOTOR_SETTING.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_MOTOR_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_MOTOR_SETTING.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_MOTOR_SETTING.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_MOTOR_SETTING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_MOTOR_SETTING.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_PIUTANG_CREDIT_LONGNull() {
                return this.IsNull(this.tableT_MOTOR_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_PIUTANG_CREDIT_LONGNull() {
                this[this.tableT_MOTOR_SETTING.DEFAULT_PIUTANG_CREDIT_LONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCOUNT_PINNull() {
                return this.IsNull(this.tableT_MOTOR_SETTING.DISCOUNT_PINColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCOUNT_PINNull() {
                this[this.tableT_MOTOR_SETTING.DISCOUNT_PINColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_MOTOR_SETTING.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_MOTOR_SETTING.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_MOTOR_SETTING.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_MOTOR_SETTING.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PI_HUTANGRow : System.Data.DataRow {
            
            private T_PI_HUTANGDataTable tableT_PI_HUTANG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PI_HUTANGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PI_HUTANG = ((T_PI_HUTANGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PI_HUTANG_ID {
                get {
                    return ((decimal)(this[this.tableT_PI_HUTANG.PI_HUTANG_IDColumn]));
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PI_HUTANG_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableT_PI_HUTANG.PI_HUTANG_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_STATUS\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_PI_HUTANG.TRANSACTION_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_ID\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.TRANSACTION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_PI_HUTANG.SUB_ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCOUNT_ID\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PI_HUTANG_PIC {
                get {
                    try {
                        return ((string)(this[this.tableT_PI_HUTANG.PI_HUTANG_PICColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_PIC\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_PICColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PI_HUTANG_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_PI_HUTANG.PI_HUTANG_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_DATE\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PI_HUTANG_JATUH_TEMPO {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_PI_HUTANG.PI_HUTANG_JATUH_TEMPOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_JATUH_TEMPO\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_JATUH_TEMPOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PI_HUTANG_JUMLAH {
                get {
                    try {
                        return ((decimal)(this[this.tableT_PI_HUTANG.PI_HUTANG_JUMLAHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_JUMLAH\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_JUMLAHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PI_HUTANG_DIBAYAR {
                get {
                    try {
                        return ((decimal)(this[this.tableT_PI_HUTANG.PI_HUTANG_DIBAYARColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_DIBAYAR\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_DIBAYARColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PI_HUTANG_RETUR {
                get {
                    try {
                        return ((decimal)(this[this.tableT_PI_HUTANG.PI_HUTANG_RETURColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_RETUR\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_RETURColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PI_HUTANG_SISA {
                get {
                    try {
                        return ((decimal)(this[this.tableT_PI_HUTANG.PI_HUTANG_SISAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_SISA\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_SISAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PI_HUTANG_LUNAS_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_PI_HUTANG.PI_HUTANG_LUNAS_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_LUNAS_DATE\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_LUNAS_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PI_HUTANG_CREDIT_LONG {
                get {
                    try {
                        return ((decimal)(this[this.tableT_PI_HUTANG.PI_HUTANG_CREDIT_LONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_CREDIT_LONG\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_CREDIT_LONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PI_HUTANG_DESC {
                get {
                    try {
                        return ((string)(this[this.tableT_PI_HUTANG.PI_HUTANG_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PI_HUTANG_DESC\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.PI_HUTANG_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_PI_HUTANG.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_PI_HUTANG.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_PI_HUTANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PI_HUTANG.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_STATUSNull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_STATUSNull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_IDNull() {
                return this.IsNull(this.tableT_PI_HUTANG.TRANSACTION_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_IDNull() {
                this[this.tableT_PI_HUTANG.TRANSACTION_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCOUNT_IDNull() {
                return this.IsNull(this.tableT_PI_HUTANG.SUB_ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCOUNT_IDNull() {
                this[this.tableT_PI_HUTANG.SUB_ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_PICNull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_PICColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_PICNull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_PICColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_DATENull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_DATENull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_JATUH_TEMPONull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_JATUH_TEMPOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_JATUH_TEMPONull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_JATUH_TEMPOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_JUMLAHNull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_JUMLAHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_JUMLAHNull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_JUMLAHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_DIBAYARNull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_DIBAYARColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_DIBAYARNull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_DIBAYARColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_RETURNull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_RETURColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_RETURNull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_RETURColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_SISANull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_SISAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_SISANull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_SISAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_LUNAS_DATENull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_LUNAS_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_LUNAS_DATENull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_LUNAS_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_CREDIT_LONGNull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_CREDIT_LONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_CREDIT_LONGNull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_CREDIT_LONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPI_HUTANG_DESCNull() {
                return this.IsNull(this.tableT_PI_HUTANG.PI_HUTANG_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPI_HUTANG_DESCNull() {
                this[this.tableT_PI_HUTANG.PI_HUTANG_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_PI_HUTANG.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_PI_HUTANG.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_PI_HUTANG.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_PI_HUTANG.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_REFERENCERow : System.Data.DataRow {
            
            private T_REFERENCEDataTable tableT_REFERENCE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_REFERENCERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_REFERENCE = ((T_REFERENCEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REFERENCE_ID {
                get {
                    return ((decimal)(this[this.tableT_REFERENCE.REFERENCE_IDColumn]));
                }
                set {
                    this[this.tableT_REFERENCE.REFERENCE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REFERENCE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableT_REFERENCE.REFERENCE_TYPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REFERENCE_TYPE\' in table \'T_REFERENCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REFERENCE.REFERENCE_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NEXT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_REFERENCE.NEXT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NEXT_ID\' in table \'T_REFERENCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REFERENCE.NEXT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REFERENCE_DESC {
                get {
                    try {
                        return ((string)(this[this.tableT_REFERENCE.REFERENCE_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REFERENCE_DESC\' in table \'T_REFERENCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REFERENCE.REFERENCE_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFERENCE_TYPENull() {
                return this.IsNull(this.tableT_REFERENCE.REFERENCE_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFERENCE_TYPENull() {
                this[this.tableT_REFERENCE.REFERENCE_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNEXT_IDNull() {
                return this.IsNull(this.tableT_REFERENCE.NEXT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNEXT_IDNull() {
                this[this.tableT_REFERENCE.NEXT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFERENCE_DESCNull() {
                return this.IsNull(this.tableT_REFERENCE.REFERENCE_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFERENCE_DESCNull() {
                this[this.tableT_REFERENCE.REFERENCE_DESCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_REKAP_COMMISSIONRow : System.Data.DataRow {
            
            private T_REKAP_COMMISSIONDataTable tableT_REKAP_COMMISSION;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_REKAP_COMMISSIONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_REKAP_COMMISSION = ((T_REKAP_COMMISSIONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime REKAP_DATE_FROM {
                get {
                    return ((System.DateTime)(this[this.tableT_REKAP_COMMISSION.REKAP_DATE_FROMColumn]));
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.REKAP_DATE_FROMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime REKAP_DATE_TO {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_REKAP_COMMISSION.REKAP_DATE_TOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REKAP_DATE_TO\' in table \'T_REKAP_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.REKAP_DATE_TOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_ID {
                get {
                    return ((string)(this[this.tableT_REKAP_COMMISSION.EMPLOYEE_IDColumn]));
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.EMPLOYEE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REKAP_TOTAL_DURATION {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_COMMISSION.REKAP_TOTAL_DURATIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REKAP_TOTAL_DURATION\' in table \'T_REKAP_COMMISSION\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.REKAP_TOTAL_DURATIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REFEREE_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_COMMISSION.REFEREE_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REFEREE_PRICE\' in table \'T_REKAP_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.REFEREE_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REFEREE_PRICE_VIP {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_COMMISSION.REFEREE_PRICE_VIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REFEREE_PRICE_VIP\' in table \'T_REKAP_COMMISSION\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.REFEREE_PRICE_VIPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REKAP_BONUS {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_COMMISSION.REKAP_BONUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REKAP_BONUS\' in table \'T_REKAP_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.REKAP_BONUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_REKAP_COMMISSION.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_REKAP_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_REKAP_COMMISSION.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_REKAP_COMMISSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_COMMISSION.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREKAP_DATE_TONull() {
                return this.IsNull(this.tableT_REKAP_COMMISSION.REKAP_DATE_TOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREKAP_DATE_TONull() {
                this[this.tableT_REKAP_COMMISSION.REKAP_DATE_TOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREKAP_TOTAL_DURATIONNull() {
                return this.IsNull(this.tableT_REKAP_COMMISSION.REKAP_TOTAL_DURATIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREKAP_TOTAL_DURATIONNull() {
                this[this.tableT_REKAP_COMMISSION.REKAP_TOTAL_DURATIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFEREE_PRICENull() {
                return this.IsNull(this.tableT_REKAP_COMMISSION.REFEREE_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFEREE_PRICENull() {
                this[this.tableT_REKAP_COMMISSION.REFEREE_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFEREE_PRICE_VIPNull() {
                return this.IsNull(this.tableT_REKAP_COMMISSION.REFEREE_PRICE_VIPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFEREE_PRICE_VIPNull() {
                this[this.tableT_REKAP_COMMISSION.REFEREE_PRICE_VIPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREKAP_BONUSNull() {
                return this.IsNull(this.tableT_REKAP_COMMISSION.REKAP_BONUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREKAP_BONUSNull() {
                this[this.tableT_REKAP_COMMISSION.REKAP_BONUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_REKAP_COMMISSION.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_REKAP_COMMISSION.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_REKAP_COMMISSION.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_REKAP_COMMISSION.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_REKAP_SUB_ACCOUNTRow : System.Data.DataRow {
            
            private T_REKAP_SUB_ACCOUNTDataTable tableT_REKAP_SUB_ACCOUNT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_REKAP_SUB_ACCOUNTRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_REKAP_SUB_ACCOUNT = ((T_REKAP_SUB_ACCOUNTDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REKAP_SUB_ACCOUNT_ID {
                get {
                    return ((decimal)(this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUB_ACCOUNT_IDColumn]));
                }
                set {
                    this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REKAP_SUB_ACCOUNT_PERIODE {
                get {
                    try {
                        return ((string)(this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUB_ACCOUNT_PERIODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REKAP_SUB_ACCOUNT_PERIODE\' in table \'T_REKAP_SUB_ACCOUNT\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUB_ACCOUNT_PERIODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_REKAP_SUB_ACCOUNT.ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ACCOUNT_ID\' in table \'T_REKAP_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_SUB_ACCOUNT.ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_ACCOUNT_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_REKAP_SUB_ACCOUNT.SUB_ACCOUNT_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUB_ACCOUNT_ID\' in table \'T_REKAP_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_SUB_ACCOUNT.SUB_ACCOUNT_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REKAP_SUBACCOUNT_SALDO {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUBACCOUNT_SALDOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REKAP_SUBACCOUNT_SALDO\' in table \'T_REKAP_SUB_ACCOUNT\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUBACCOUNT_SALDOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REKAP_SUBACCOUNT_DESC {
                get {
                    try {
                        return ((string)(this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUBACCOUNT_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REKAP_SUBACCOUNT_DESC\' in table \'T_REKAP_SUB_ACCOUNT\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUBACCOUNT_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_REKAP_SUB_ACCOUNT.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_REKAP_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_SUB_ACCOUNT.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_REKAP_SUB_ACCOUNT.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_REKAP_SUB_ACCOUNT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_SUB_ACCOUNT.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREKAP_SUB_ACCOUNT_PERIODENull() {
                return this.IsNull(this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUB_ACCOUNT_PERIODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREKAP_SUB_ACCOUNT_PERIODENull() {
                this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUB_ACCOUNT_PERIODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_IDNull() {
                return this.IsNull(this.tableT_REKAP_SUB_ACCOUNT.ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_IDNull() {
                this[this.tableT_REKAP_SUB_ACCOUNT.ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUB_ACCOUNT_IDNull() {
                return this.IsNull(this.tableT_REKAP_SUB_ACCOUNT.SUB_ACCOUNT_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUB_ACCOUNT_IDNull() {
                this[this.tableT_REKAP_SUB_ACCOUNT.SUB_ACCOUNT_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREKAP_SUBACCOUNT_SALDONull() {
                return this.IsNull(this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUBACCOUNT_SALDOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREKAP_SUBACCOUNT_SALDONull() {
                this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUBACCOUNT_SALDOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREKAP_SUBACCOUNT_DESCNull() {
                return this.IsNull(this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUBACCOUNT_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREKAP_SUBACCOUNT_DESCNull() {
                this[this.tableT_REKAP_SUB_ACCOUNT.REKAP_SUBACCOUNT_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_REKAP_SUB_ACCOUNT.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_REKAP_SUB_ACCOUNT.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_REKAP_SUB_ACCOUNT.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_REKAP_SUB_ACCOUNT.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_REKAP_TRANSACTIONRow : System.Data.DataRow {
            
            private T_REKAP_TRANSACTIONDataTable tableT_REKAP_TRANSACTION;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_REKAP_TRANSACTIONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_REKAP_TRANSACTION = ((T_REKAP_TRANSACTIONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime REKAP_DATE_FROM {
                get {
                    return ((System.DateTime)(this[this.tableT_REKAP_TRANSACTION.REKAP_DATE_FROMColumn]));
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.REKAP_DATE_FROMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime REKAP_DATE_TO {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_REKAP_TRANSACTION.REKAP_DATE_TOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REKAP_DATE_TO\' in table \'T_REKAP_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.REKAP_DATE_TOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESK_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_REKAP_TRANSACTION.DESK_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESK_ID\' in table \'T_REKAP_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.DESK_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_SALES {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_TRANSACTION.TOTAL_SALESColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TOTAL_SALES\' in table \'T_REKAP_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.TOTAL_SALESColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_SALES_VIP {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_TRANSACTION.TOTAL_SALES_VIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TOTAL_SALES_VIP\' in table \'T_REKAP_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.TOTAL_SALES_VIPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_PURCHASE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_TRANSACTION.TOTAL_PURCHASEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TOTAL_PURCHASE\' in table \'T_REKAP_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.TOTAL_PURCHASEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_RETUR_SALES {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_SALESColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TOTAL_RETUR_SALES\' in table \'T_REKAP_TRANSACTION\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_SALESColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_RETUR_SALES_VIP {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_SALES_VIPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TOTAL_RETUR_SALES_VIP\' in table \'T_REKAP_TRANSACTION\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_SALES_VIPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_RETUR_PURCHASE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_PURCHASEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TOTAL_RETUR_PURCHASE\' in table \'T_REKAP_TRANSACTION\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_PURCHASEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_CORRECTION {
                get {
                    try {
                        return ((decimal)(this[this.tableT_REKAP_TRANSACTION.TOTAL_CORRECTIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TOTAL_CORRECTION\' in table \'T_REKAP_TRANSACTION\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.TOTAL_CORRECTIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_REKAP_TRANSACTION.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_REKAP_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_REKAP_TRANSACTION.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_REKAP_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_REKAP_TRANSACTION.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREKAP_DATE_TONull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.REKAP_DATE_TOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREKAP_DATE_TONull() {
                this[this.tableT_REKAP_TRANSACTION.REKAP_DATE_TOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESK_IDNull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.DESK_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESK_IDNull() {
                this[this.tableT_REKAP_TRANSACTION.DESK_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_SALESNull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.TOTAL_SALESColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_SALESNull() {
                this[this.tableT_REKAP_TRANSACTION.TOTAL_SALESColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_SALES_VIPNull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.TOTAL_SALES_VIPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_SALES_VIPNull() {
                this[this.tableT_REKAP_TRANSACTION.TOTAL_SALES_VIPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_PURCHASENull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.TOTAL_PURCHASEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_PURCHASENull() {
                this[this.tableT_REKAP_TRANSACTION.TOTAL_PURCHASEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_RETUR_SALESNull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_SALESColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_RETUR_SALESNull() {
                this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_SALESColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_RETUR_SALES_VIPNull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_SALES_VIPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_RETUR_SALES_VIPNull() {
                this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_SALES_VIPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_RETUR_PURCHASENull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_PURCHASEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_RETUR_PURCHASENull() {
                this[this.tableT_REKAP_TRANSACTION.TOTAL_RETUR_PURCHASEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTAL_CORRECTIONNull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.TOTAL_CORRECTIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTAL_CORRECTIONNull() {
                this[this.tableT_REKAP_TRANSACTION.TOTAL_CORRECTIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_REKAP_TRANSACTION.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_REKAP_TRANSACTION.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_REKAP_TRANSACTION.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_STOK_CARDRow : System.Data.DataRow {
            
            private T_STOK_CARDDataTable tableT_STOK_CARD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_STOK_CARDRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_STOK_CARD = ((T_STOK_CARDDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal STOK_CARD_ID {
                get {
                    return ((decimal)(this[this.tableT_STOK_CARD.STOK_CARD_IDColumn]));
                }
                set {
                    this[this.tableT_STOK_CARD.STOK_CARD_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_STOK_CARD.ITEM_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_ID\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.ITEM_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GUDANG_ID {
                get {
                    try {
                        return ((int)(this[this.tableT_STOK_CARD.GUDANG_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GUDANG_ID\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.GUDANG_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STOK_CARD_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_STOK_CARD.STOK_CARD_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STOK_CARD_DATE\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.STOK_CARD_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_STOK_CARD.TRANSACTION_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_ID\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.TRANSACTION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool STOK_CARD_STATUS {
                get {
                    try {
                        return ((bool)(this[this.tableT_STOK_CARD.STOK_CARD_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STOK_CARD_STATUS\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.STOK_CARD_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal STOK_CARD_QUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableT_STOK_CARD.STOK_CARD_QUANTITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STOK_CARD_QUANTITY\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.STOK_CARD_QUANTITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal STOK_CARD_SALDO {
                get {
                    try {
                        return ((decimal)(this[this.tableT_STOK_CARD.STOK_CARD_SALDOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STOK_CARD_SALDO\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.STOK_CARD_SALDOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STOK_CARD_PIC {
                get {
                    try {
                        return ((string)(this[this.tableT_STOK_CARD.STOK_CARD_PICColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'STOK_CARD_PIC\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.STOK_CARD_PICColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_STOK_CARD.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_STOK_CARD.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_STOK_CARD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_STOK_CARD.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_IDNull() {
                return this.IsNull(this.tableT_STOK_CARD.ITEM_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_IDNull() {
                this[this.tableT_STOK_CARD.ITEM_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGUDANG_IDNull() {
                return this.IsNull(this.tableT_STOK_CARD.GUDANG_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGUDANG_IDNull() {
                this[this.tableT_STOK_CARD.GUDANG_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOK_CARD_DATENull() {
                return this.IsNull(this.tableT_STOK_CARD.STOK_CARD_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOK_CARD_DATENull() {
                this[this.tableT_STOK_CARD.STOK_CARD_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_IDNull() {
                return this.IsNull(this.tableT_STOK_CARD.TRANSACTION_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_IDNull() {
                this[this.tableT_STOK_CARD.TRANSACTION_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOK_CARD_STATUSNull() {
                return this.IsNull(this.tableT_STOK_CARD.STOK_CARD_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOK_CARD_STATUSNull() {
                this[this.tableT_STOK_CARD.STOK_CARD_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOK_CARD_QUANTITYNull() {
                return this.IsNull(this.tableT_STOK_CARD.STOK_CARD_QUANTITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOK_CARD_QUANTITYNull() {
                this[this.tableT_STOK_CARD.STOK_CARD_QUANTITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOK_CARD_SALDONull() {
                return this.IsNull(this.tableT_STOK_CARD.STOK_CARD_SALDOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOK_CARD_SALDONull() {
                this[this.tableT_STOK_CARD.STOK_CARD_SALDOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOK_CARD_PICNull() {
                return this.IsNull(this.tableT_STOK_CARD.STOK_CARD_PICColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOK_CARD_PICNull() {
                this[this.tableT_STOK_CARD.STOK_CARD_PICColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_STOK_CARD.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_STOK_CARD.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_STOK_CARD.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_STOK_CARD.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_TRANSACTIONRow : System.Data.DataRow {
            
            private T_TRANSACTIONDataTable tableT_TRANSACTION;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TRANSACTIONRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_TRANSACTION = ((T_TRANSACTIONDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_ID {
                get {
                    return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_IDColumn]));
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURRENCY_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.CURRENCY_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CURRENCY_ID\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.CURRENCY_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GUDANG_ID {
                get {
                    try {
                        return ((int)(this[this.tableT_TRANSACTION.GUDANG_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GUDANG_ID\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.GUDANG_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_REFERENCE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_REFERENCE_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_REFERENCE_ID\' in table \'T_TRANSACTION\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_REFERENCE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_FACTUR {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_FACTURColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_FACTUR\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_FACTURColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_BY\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_BY_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_BY_ADDRESSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_BY_ADDRESS\' in table \'T_TRANSACTION\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_BY_ADDRESSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_BY_PHONE {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_BY_PHONEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_BY_PHONE\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_BY_PHONEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_BY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_BY_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_BY_NAME\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_BY_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRANSACTION_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_TRANSACTION.TRANSACTION_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_DATE\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_SUB_TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_SUB_TOTALColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_SUB_TOTAL\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_SUB_TOTALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_DISC {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_DISCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_DISC\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_DISCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TRANSACTION_USE_PPN {
                get {
                    try {
                        return ((bool)(this[this.tableT_TRANSACTION.TRANSACTION_USE_PPNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_USE_PPN\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_USE_PPNColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_PPN {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_PPNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_PPN\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_PPNColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_GRAND_TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_GRAND_TOTALColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_GRAND_TOTAL\' in table \'T_TRANSACTION\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_GRAND_TOTALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_PAID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_PAIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_PAID\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_PAIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_SISA {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_SISAColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_SISA\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_SISAColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_STATUS\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_DESK {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_DESKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_DESK\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_DESKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_DESC {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_DESC\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_DESC2 {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_DESC2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_DESC2\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_DESC2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.EMPLOYEE_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_ID\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.EMPLOYEE_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_ID2 {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.EMPLOYEE_ID2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EMPLOYEE_ID2\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.EMPLOYEE_ID2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANSACTION_PAYMENT {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.TRANSACTION_PAYMENTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_PAYMENT\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_PAYMENTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_COMMISION {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_COMMISIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_COMMISION\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_COMMISIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_POTONGAN {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION.TRANSACTION_POTONGANColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_POTONGAN\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.TRANSACTION_POTONGANColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_TRANSACTION.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_TRANSACTION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCURRENCY_IDNull() {
                return this.IsNull(this.tableT_TRANSACTION.CURRENCY_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCURRENCY_IDNull() {
                this[this.tableT_TRANSACTION.CURRENCY_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGUDANG_IDNull() {
                return this.IsNull(this.tableT_TRANSACTION.GUDANG_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGUDANG_IDNull() {
                this[this.tableT_TRANSACTION.GUDANG_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_REFERENCE_IDNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_REFERENCE_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_REFERENCE_IDNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_REFERENCE_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_FACTURNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_FACTURColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_FACTURNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_FACTURColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_BYNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_BYNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_BY_ADDRESSNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_BY_ADDRESSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_BY_ADDRESSNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_BY_ADDRESSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_BY_PHONENull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_BY_PHONEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_BY_PHONENull() {
                this[this.tableT_TRANSACTION.TRANSACTION_BY_PHONEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_BY_NAMENull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_BY_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_BY_NAMENull() {
                this[this.tableT_TRANSACTION.TRANSACTION_BY_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_DATENull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_DATENull() {
                this[this.tableT_TRANSACTION.TRANSACTION_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_SUB_TOTALNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_SUB_TOTALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_SUB_TOTALNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_SUB_TOTALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_DISCNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_DISCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_DISCNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_DISCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_USE_PPNNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_USE_PPNColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_USE_PPNNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_USE_PPNColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_PPNNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_PPNColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_PPNNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_PPNColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_GRAND_TOTALNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_GRAND_TOTALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_GRAND_TOTALNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_GRAND_TOTALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_PAIDNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_PAIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_PAIDNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_PAIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_SISANull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_SISAColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_SISANull() {
                this[this.tableT_TRANSACTION.TRANSACTION_SISAColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_STATUSNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_STATUSNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_DESKNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_DESKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_DESKNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_DESKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_DESCNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_DESCNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_DESC2Null() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_DESC2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_DESC2Null() {
                this[this.tableT_TRANSACTION.TRANSACTION_DESC2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_IDNull() {
                return this.IsNull(this.tableT_TRANSACTION.EMPLOYEE_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_IDNull() {
                this[this.tableT_TRANSACTION.EMPLOYEE_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_ID2Null() {
                return this.IsNull(this.tableT_TRANSACTION.EMPLOYEE_ID2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_ID2Null() {
                this[this.tableT_TRANSACTION.EMPLOYEE_ID2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_PAYMENTNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_PAYMENTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_PAYMENTNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_PAYMENTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_COMMISIONNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_COMMISIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_COMMISIONNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_COMMISIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_POTONGANNull() {
                return this.IsNull(this.tableT_TRANSACTION.TRANSACTION_POTONGANColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_POTONGANNull() {
                this[this.tableT_TRANSACTION.TRANSACTION_POTONGANColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_TRANSACTION.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_TRANSACTION.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_TRANSACTION.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_TRANSACTION.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_TRANSACTION_SERVICERow : System.Data.DataRow {
            
            private T_TRANSACTION_SERVICEDataTable tableT_TRANSACTION_SERVICE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TRANSACTION_SERVICERow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_TRANSACTION_SERVICE = ((T_TRANSACTION_SERVICEDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_ID {
                get {
                    return ((decimal)(this[this.tableT_TRANSACTION_SERVICE.TRANSACTION_IDColumn]));
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.TRANSACTION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_FIRST_CONDITION {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_FIRST_CONDITIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_FIRST_CONDITION\' in table \'T_TRANSACTION_SERVICE\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_FIRST_CONDITIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SERVICE_REQUEST_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_REQUEST_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_REQUEST_DATE\' in table \'T_TRANSACTION_SERVICE\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_REQUEST_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SERVICE_START_WORK {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_START_WORKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_START_WORK\' in table \'T_TRANSACTION_SERVICE\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_START_WORKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SERVICE_END_WORK {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_END_WORKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_END_WORK\' in table \'T_TRANSACTION_SERVICE\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_END_WORKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_PIC {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_PICColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_PIC\' in table \'T_TRANSACTION_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_PICColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_TYPEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_TYPE\' in table \'T_TRANSACTION_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_TYPEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_COMPLAIN {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_COMPLAINColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_COMPLAIN\' in table \'T_TRANSACTION_SERVICE\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_COMPLAINColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICE_DESC {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_DESCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_DESC\' in table \'T_TRANSACTION_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_DESCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SERVICE_CHARGE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_SERVICE.SERVICE_CHARGEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERVICE_CHARGE\' in table \'T_TRANSACTION_SERVICE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.SERVICE_CHARGEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_SERVICE.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_TRANSACTION_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_TRANSACTION_SERVICE.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_TRANSACTION_SERVICE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_SERVICE.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_FIRST_CONDITIONNull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_FIRST_CONDITIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_FIRST_CONDITIONNull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_FIRST_CONDITIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_REQUEST_DATENull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_REQUEST_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_REQUEST_DATENull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_REQUEST_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_START_WORKNull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_START_WORKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_START_WORKNull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_START_WORKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_END_WORKNull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_END_WORKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_END_WORKNull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_END_WORKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_PICNull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_PICColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_PICNull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_PICColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_TYPENull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_TYPEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_TYPENull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_TYPEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_COMPLAINNull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_COMPLAINColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_COMPLAINNull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_COMPLAINColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_DESCNull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_DESCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_DESCNull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_DESCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICE_CHARGENull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.SERVICE_CHARGEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICE_CHARGENull() {
                this[this.tableT_TRANSACTION_SERVICE.SERVICE_CHARGEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_TRANSACTION_SERVICE.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_TRANSACTION_SERVICE.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_TRANSACTION_SERVICE.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_TRANSACTION_DETAILRow : System.Data.DataRow {
            
            private T_TRANSACTION_DETAILDataTable tableT_TRANSACTION_DETAIL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TRANSACTION_DETAILRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_TRANSACTION_DETAIL = ((T_TRANSACTION_DETAILDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_DETAIL_ID {
                get {
                    return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.TRANSACTION_DETAIL_IDColumn]));
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.TRANSACTION_DETAIL_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSACTION_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.TRANSACTION_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANSACTION_ID\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.TRANSACTION_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IS_PACKET {
                get {
                    try {
                        return ((bool)(this[this.tableT_TRANSACTION_DETAIL.IS_PACKETColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IS_PACKET\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.IS_PACKETColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_ID {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_DETAIL.ITEM_IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ITEM_ID\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.ITEM_IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.QUANTITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QUANTITY\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.QUANTITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PRICE\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JUMLAH {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.JUMLAHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'JUMLAH\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.JUMLAHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DISC {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.DISCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DISC\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.DISCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PPN {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.PPNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PPN\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.PPNColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.TOTALColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TOTAL\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.TOTALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_DETAIL.DESCRIPTIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.DESCRIPTIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EXPIRED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_TRANSACTION_DETAIL.EXPIRED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EXPIRED_DATE\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.EXPIRED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COMMISSION {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.COMMISSIONColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COMMISSION\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.COMMISSIONColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COST_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_TRANSACTION_DETAIL.COST_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'COST_PRICE\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.COST_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableT_TRANSACTION_DETAIL.MODIFIED_BYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_BY\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.MODIFIED_BYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFIED_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableT_TRANSACTION_DETAIL.MODIFIED_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MODIFIED_DATE\' in table \'T_TRANSACTION_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TRANSACTION_DETAIL.MODIFIED_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSACTION_IDNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.TRANSACTION_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSACTION_IDNull() {
                this[this.tableT_TRANSACTION_DETAIL.TRANSACTION_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_PACKETNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.IS_PACKETColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_PACKETNull() {
                this[this.tableT_TRANSACTION_DETAIL.IS_PACKETColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_IDNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.ITEM_IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_IDNull() {
                this[this.tableT_TRANSACTION_DETAIL.ITEM_IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITYNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.QUANTITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITYNull() {
                this[this.tableT_TRANSACTION_DETAIL.QUANTITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICENull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICENull() {
                this[this.tableT_TRANSACTION_DETAIL.PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJUMLAHNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.JUMLAHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJUMLAHNull() {
                this[this.tableT_TRANSACTION_DETAIL.JUMLAHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDISCNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.DISCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDISCNull() {
                this[this.tableT_TRANSACTION_DETAIL.DISCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPNNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.PPNColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPNNull() {
                this[this.tableT_TRANSACTION_DETAIL.PPNColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTALNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.TOTALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTALNull() {
                this[this.tableT_TRANSACTION_DETAIL.TOTALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.DESCRIPTIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tableT_TRANSACTION_DETAIL.DESCRIPTIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXPIRED_DATENull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.EXPIRED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXPIRED_DATENull() {
                this[this.tableT_TRANSACTION_DETAIL.EXPIRED_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMISSIONNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.COMMISSIONColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMISSIONNull() {
                this[this.tableT_TRANSACTION_DETAIL.COMMISSIONColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOST_PRICENull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.COST_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOST_PRICENull() {
                this[this.tableT_TRANSACTION_DETAIL.COST_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_BYNull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.MODIFIED_BYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_BYNull() {
                this[this.tableT_TRANSACTION_DETAIL.MODIFIED_BYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODIFIED_DATENull() {
                return this.IsNull(this.tableT_TRANSACTION_DETAIL.MODIFIED_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODIFIED_DATENull() {
                this[this.tableT_TRANSACTION_DETAIL.MODIFIED_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ITEM_GUDANG_STOKRowChangeEvent : System.EventArgs {
            
            private ITEM_GUDANG_STOKRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEM_GUDANG_STOKRowChangeEvent(ITEM_GUDANG_STOKRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ITEM_GUDANG_STOKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_ACCOUNTRowChangeEvent : System.EventArgs {
            
            private M_ACCOUNTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ACCOUNTRowChangeEvent(M_ACCOUNTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ACCOUNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_BANKRowChangeEvent : System.EventArgs {
            
            private M_BANKRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_BANKRowChangeEvent(M_BANKRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_BANKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_COMMISSIONRowChangeEvent : System.EventArgs {
            
            private M_COMMISSIONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSIONRowChangeEvent(M_COMMISSIONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_COMMISSION_SHARERowChangeEvent : System.EventArgs {
            
            private M_COMMISSION_SHARERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSION_SHARERowChangeEvent(M_COMMISSION_SHARERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_COMMISSION_SHARERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_CUSTOMERRowChangeEvent : System.EventArgs {
            
            private M_CUSTOMERRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMERRowChangeEvent(M_CUSTOMERRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_CUSTOMER_GROUPRowChangeEvent : System.EventArgs {
            
            private M_CUSTOMER_GROUPRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMER_GROUPRowChangeEvent(M_CUSTOMER_GROUPRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_CUSTOMER_GROUPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_DEPRowChangeEvent : System.EventArgs {
            
            private M_DEPRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DEPRowChangeEvent(M_DEPRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DEPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_DESKRowChangeEvent : System.EventArgs {
            
            private M_DESKRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DESKRowChangeEvent(M_DESKRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DESKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_DISCOUNTRowChangeEvent : System.EventArgs {
            
            private M_DISCOUNTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DISCOUNTRowChangeEvent(M_DISCOUNTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_DISCOUNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_EMPLOYEERowChangeEvent : System.EventArgs {
            
            private M_EMPLOYEERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_EMPLOYEERowChangeEvent(M_EMPLOYEERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_EMPLOYEERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_GROUPRowChangeEvent : System.EventArgs {
            
            private M_GROUPRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GROUPRowChangeEvent(M_GROUPRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GROUPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_GUDANGRowChangeEvent : System.EventArgs {
            
            private M_GUDANGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GUDANGRowChangeEvent(M_GUDANGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_GUDANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_ITEMRowChangeEvent : System.EventArgs {
            
            private M_ITEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEMRowChangeEvent(M_ITEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_ITEM_TYPERowChangeEvent : System.EventArgs {
            
            private M_ITEM_TYPERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEM_TYPERowChangeEvent(M_ITEM_TYPERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ITEM_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_LOCATIONRowChangeEvent : System.EventArgs {
            
            private M_LOCATIONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_LOCATIONRowChangeEvent(M_LOCATIONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_LOCATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_MENURowChangeEvent : System.EventArgs {
            
            private M_MENURow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_MENURowChangeEvent(M_MENURow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_MENURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_PACKETRowChangeEvent : System.EventArgs {
            
            private M_PACKETRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKETRowChangeEvent(M_PACKETRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_PACKET_ITEMRowChangeEvent : System.EventArgs {
            
            private M_PACKET_ITEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKET_ITEMRowChangeEvent(M_PACKET_ITEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_PACKET_ITEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_ROOMRowChangeEvent : System.EventArgs {
            
            private M_ROOMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ROOMRowChangeEvent(M_ROOMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_ROOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_SETTINGRowChangeEvent : System.EventArgs {
            
            private M_SETTINGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SETTINGRowChangeEvent(M_SETTINGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SETTINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_SUB_ACCOUNTRowChangeEvent : System.EventArgs {
            
            private M_SUB_ACCOUNTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUB_ACCOUNTRowChangeEvent(M_SUB_ACCOUNTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUB_ACCOUNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_SUPPLIERRowChangeEvent : System.EventArgs {
            
            private M_SUPPLIERRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIERRowChangeEvent(M_SUPPLIERRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_SUPPLIER_ACCOUNTRowChangeEvent : System.EventArgs {
            
            private M_SUPPLIER_ACCOUNTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIER_ACCOUNTRowChangeEvent(M_SUPPLIER_ACCOUNTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_SUPPLIER_ACCOUNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class M_USERRowChangeEvent : System.EventArgs {
            
            private M_USERRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_USERRowChangeEvent(M_USERRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public M_USERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_APOTEK_SETTINGRowChangeEvent : System.EventArgs {
            
            private T_APOTEK_SETTINGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_APOTEK_SETTINGRowChangeEvent(T_APOTEK_SETTINGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_APOTEK_SETTINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_BILLIARD_SETTINGRowChangeEvent : System.EventArgs {
            
            private T_BILLIARD_SETTINGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BILLIARD_SETTINGRowChangeEvent(T_BILLIARD_SETTINGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BILLIARD_SETTINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_CAFE_SETTINGRowChangeEvent : System.EventArgs {
            
            private T_CAFE_SETTINGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CAFE_SETTINGRowChangeEvent(T_CAFE_SETTINGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CAFE_SETTINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_COMMISSIONRowChangeEvent : System.EventArgs {
            
            private T_COMMISSIONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_COMMISSIONRowChangeEvent(T_COMMISSIONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_COMMISSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_CONTRACTOR_SETTINGRowChangeEvent : System.EventArgs {
            
            private T_CONTRACTOR_SETTINGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTRACTOR_SETTINGRowChangeEvent(T_CONTRACTOR_SETTINGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTRACTOR_SETTINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_DEFAULT_ACCOUNTRowChangeEvent : System.EventArgs {
            
            private T_DEFAULT_ACCOUNTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DEFAULT_ACCOUNTRowChangeEvent(T_DEFAULT_ACCOUNTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DEFAULT_ACCOUNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_DESKRowChangeEvent : System.EventArgs {
            
            private T_DESKRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DESKRowChangeEvent(T_DESKRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DESKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_GIRORowChangeEvent : System.EventArgs {
            
            private T_GIRORow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GIRORowChangeEvent(T_GIRORow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GIRORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_GROSIR_SETTINGRowChangeEvent : System.EventArgs {
            
            private T_GROSIR_SETTINGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GROSIR_SETTINGRowChangeEvent(T_GROSIR_SETTINGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_GROSIR_SETTINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_JOURNALRowChangeEvent : System.EventArgs {
            
            private T_JOURNALRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOURNALRowChangeEvent(T_JOURNALRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_JOURNALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_LOGRowChangeEvent : System.EventArgs {
            
            private T_LOGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOGRowChangeEvent(T_LOGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_MENU_USERRowChangeEvent : System.EventArgs {
            
            private T_MENU_USERRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MENU_USERRowChangeEvent(T_MENU_USERRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MENU_USERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_MOTOR_SETTINGRowChangeEvent : System.EventArgs {
            
            private T_MOTOR_SETTINGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MOTOR_SETTINGRowChangeEvent(T_MOTOR_SETTINGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_MOTOR_SETTINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PI_HUTANGRowChangeEvent : System.EventArgs {
            
            private T_PI_HUTANGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PI_HUTANGRowChangeEvent(T_PI_HUTANGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PI_HUTANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_REFERENCERowChangeEvent : System.EventArgs {
            
            private T_REFERENCERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REFERENCERowChangeEvent(T_REFERENCERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REFERENCERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_REKAP_COMMISSIONRowChangeEvent : System.EventArgs {
            
            private T_REKAP_COMMISSIONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_COMMISSIONRowChangeEvent(T_REKAP_COMMISSIONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_COMMISSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_REKAP_SUB_ACCOUNTRowChangeEvent : System.EventArgs {
            
            private T_REKAP_SUB_ACCOUNTRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_SUB_ACCOUNTRowChangeEvent(T_REKAP_SUB_ACCOUNTRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_SUB_ACCOUNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_REKAP_TRANSACTIONRowChangeEvent : System.EventArgs {
            
            private T_REKAP_TRANSACTIONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_TRANSACTIONRowChangeEvent(T_REKAP_TRANSACTIONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_REKAP_TRANSACTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_STOK_CARDRowChangeEvent : System.EventArgs {
            
            private T_STOK_CARDRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_STOK_CARDRowChangeEvent(T_STOK_CARDRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_STOK_CARDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_TRANSACTIONRowChangeEvent : System.EventArgs {
            
            private T_TRANSACTIONRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTIONRowChangeEvent(T_TRANSACTIONRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_TRANSACTION_SERVICERowChangeEvent : System.EventArgs {
            
            private T_TRANSACTION_SERVICERow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_SERVICERowChangeEvent(T_TRANSACTION_SERVICERow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_SERVICERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_TRANSACTION_DETAILRowChangeEvent : System.EventArgs {
            
            private T_TRANSACTION_DETAILRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_DETAILRowChangeEvent(T_TRANSACTION_DETAILRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TRANSACTION_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Inventori.Contractor.Forms.Reports.DataSet1TableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ITEM_GUDANG_STOKTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ITEM_GUDANG_STOKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ITEM_GUDANG_STOK";
            tableMapping.ColumnMappings.Add("ITEM_ID", "ITEM_ID");
            tableMapping.ColumnMappings.Add("GUDANG_ID", "GUDANG_ID");
            tableMapping.ColumnMappings.Add("ITEM_STOK", "ITEM_STOK");
            tableMapping.ColumnMappings.Add("ITEM_MIN_STOK", "ITEM_MIN_STOK");
            tableMapping.ColumnMappings.Add("ITEM_MAX_STOK", "ITEM_MAX_STOK");
            tableMapping.ColumnMappings.Add("ITEM_POSITION", "ITEM_POSITION");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ITEM_GUDANG_STOK] WHERE (([ITEM_ID] = @Original_ITEM_ID) AND ([GUDANG_ID] = @Original_GUDANG_ID) AND ((@IsNull_ITEM_STOK = 1 AND [ITEM_STOK] IS NULL) OR ([ITEM_STOK] = @Original_ITEM_STOK)) AND ((@IsNull_ITEM_MIN_STOK = 1 AND [ITEM_MIN_STOK] IS NULL) OR ([ITEM_MIN_STOK] = @Original_ITEM_MIN_STOK)) AND ((@IsNull_ITEM_MAX_STOK = 1 AND [ITEM_MAX_STOK] IS NULL) OR ([ITEM_MAX_STOK] = @Original_ITEM_MAX_STOK)) AND ((@IsNull_ITEM_POSITION = 1 AND [ITEM_POSITION] IS NULL) OR ([ITEM_POSITION] = @Original_ITEM_POSITION)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_STOK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_STOK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_STOK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_MIN_STOK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_MIN_STOK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_MIN_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_MIN_STOK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_MAX_STOK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_MAX_STOK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_MAX_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_MAX_STOK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_POSITION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_POSITION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_POSITION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_POSITION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ITEM_GUDANG_STOK] ([ITEM_ID], [GUDANG_ID], [ITEM_STOK], [ITEM_MIN_STOK], [ITEM_MAX_STOK], [ITEM_POSITION], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@ITEM_ID, @GUDANG_ID, @ITEM_STOK, @ITEM_MIN_STOK, @ITEM_MAX_STOK, @ITEM_POSITION, @MODIFIED_BY, @MODIFIED_DATE);
SELECT ITEM_ID, GUDANG_ID, ITEM_STOK, ITEM_MIN_STOK, ITEM_MAX_STOK, ITEM_POSITION, MODIFIED_BY, MODIFIED_DATE FROM ITEM_GUDANG_STOK WHERE (GUDANG_ID = @GUDANG_ID) AND (ITEM_ID = @ITEM_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_STOK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_MIN_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_MIN_STOK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_MAX_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_MAX_STOK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_POSITION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_POSITION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ITEM_GUDANG_STOK] SET [ITEM_ID] = @ITEM_ID, [GUDANG_ID] = @GUDANG_ID, [ITEM_STOK] = @ITEM_STOK, [ITEM_MIN_STOK] = @ITEM_MIN_STOK, [ITEM_MAX_STOK] = @ITEM_MAX_STOK, [ITEM_POSITION] = @ITEM_POSITION, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([ITEM_ID] = @Original_ITEM_ID) AND ([GUDANG_ID] = @Original_GUDANG_ID) AND ((@IsNull_ITEM_STOK = 1 AND [ITEM_STOK] IS NULL) OR ([ITEM_STOK] = @Original_ITEM_STOK)) AND ((@IsNull_ITEM_MIN_STOK = 1 AND [ITEM_MIN_STOK] IS NULL) OR ([ITEM_MIN_STOK] = @Original_ITEM_MIN_STOK)) AND ((@IsNull_ITEM_MAX_STOK = 1 AND [ITEM_MAX_STOK] IS NULL) OR ([ITEM_MAX_STOK] = @Original_ITEM_MAX_STOK)) AND ((@IsNull_ITEM_POSITION = 1 AND [ITEM_POSITION] IS NULL) OR ([ITEM_POSITION] = @Original_ITEM_POSITION)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT ITEM_ID, GUDANG_ID, ITEM_STOK, ITEM_MIN_STOK, ITEM_MAX_STOK, ITEM_POSITION, MODIFIED_BY, MODIFIED_DATE FROM ITEM_GUDANG_STOK WHERE (GUDANG_ID = @GUDANG_ID) AND (ITEM_ID = @ITEM_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_STOK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_MIN_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_MIN_STOK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_MAX_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_MAX_STOK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_POSITION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_POSITION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_STOK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_STOK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_STOK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_MIN_STOK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_MIN_STOK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_MIN_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_MIN_STOK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_MAX_STOK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_MAX_STOK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_MAX_STOK", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_MAX_STOK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_POSITION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_POSITION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_POSITION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_POSITION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ITEM_ID, GUDANG_ID, ITEM_STOK, ITEM_MIN_STOK, ITEM_MAX_STOK, ITEM_POSITION" +
                ", MODIFIED_BY, MODIFIED_DATE FROM dbo.ITEM_GUDANG_STOK";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ITEM_GUDANG_STOKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ITEM_GUDANG_STOKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ITEM_GUDANG_STOKDataTable dataTable = new DataSet1.ITEM_GUDANG_STOKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ITEM_GUDANG_STOKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ITEM_GUDANG_STOK");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ITEM_ID, int Original_GUDANG_ID, System.Nullable<decimal> Original_ITEM_STOK, System.Nullable<decimal> Original_ITEM_MIN_STOK, System.Nullable<decimal> Original_ITEM_MAX_STOK, string Original_ITEM_POSITION, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_ITEM_ID == null)) {
                throw new System.ArgumentNullException("Original_ITEM_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ITEM_ID));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_GUDANG_ID));
            if ((Original_ITEM_STOK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_ITEM_STOK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_MIN_STOK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_ITEM_MIN_STOK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_MAX_STOK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_ITEM_MAX_STOK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_POSITION == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ITEM_POSITION));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ITEM_ID, int GUDANG_ID, System.Nullable<decimal> ITEM_STOK, System.Nullable<decimal> ITEM_MIN_STOK, System.Nullable<decimal> ITEM_MAX_STOK, string ITEM_POSITION, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((ITEM_ID == null)) {
                throw new System.ArgumentNullException("ITEM_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ITEM_ID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(GUDANG_ID));
            if ((ITEM_STOK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ITEM_STOK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ITEM_MIN_STOK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(ITEM_MIN_STOK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((ITEM_MAX_STOK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(ITEM_MAX_STOK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ITEM_POSITION == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ITEM_POSITION));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ITEM_ID, 
                    int GUDANG_ID, 
                    System.Nullable<decimal> ITEM_STOK, 
                    System.Nullable<decimal> ITEM_MIN_STOK, 
                    System.Nullable<decimal> ITEM_MAX_STOK, 
                    string ITEM_POSITION, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_ITEM_ID, 
                    int Original_GUDANG_ID, 
                    System.Nullable<decimal> Original_ITEM_STOK, 
                    System.Nullable<decimal> Original_ITEM_MIN_STOK, 
                    System.Nullable<decimal> Original_ITEM_MAX_STOK, 
                    string Original_ITEM_POSITION, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((ITEM_ID == null)) {
                throw new System.ArgumentNullException("ITEM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ITEM_ID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(GUDANG_ID));
            if ((ITEM_STOK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(ITEM_STOK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ITEM_MIN_STOK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(ITEM_MIN_STOK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((ITEM_MAX_STOK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(ITEM_MAX_STOK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((ITEM_POSITION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ITEM_POSITION));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_ID == null)) {
                throw new System.ArgumentNullException("Original_ITEM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ITEM_ID));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_GUDANG_ID));
            if ((Original_ITEM_STOK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_ITEM_STOK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_MIN_STOK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_ITEM_MIN_STOK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_MAX_STOK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_ITEM_MAX_STOK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_POSITION == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ITEM_POSITION));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_ACCOUNTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_ACCOUNTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_ACCOUNT";
            tableMapping.ColumnMappings.Add("ACCOUNT_ID", "ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_NAME", "ACCOUNT_NAME");
            tableMapping.ColumnMappings.Add("ACCOUNT_STATUS", "ACCOUNT_STATUS");
            tableMapping.ColumnMappings.Add("ACCOUNT_SALDO", "ACCOUNT_SALDO");
            tableMapping.ColumnMappings.Add("ACCOUNT_DESC", "ACCOUNT_DESC");
            tableMapping.ColumnMappings.Add("ACCOUNT_POSITION", "ACCOUNT_POSITION");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_ACCOUNT] WHERE (([ACCOUNT_ID] = @Original_ACCOUNT_ID) AND ((@IsNull_ACCOUNT_NAME = 1 AND [ACCOUNT_NAME] IS NULL) OR ([ACCOUNT_NAME] = @Original_ACCOUNT_NAME)) AND ((@IsNull_ACCOUNT_STATUS = 1 AND [ACCOUNT_STATUS] IS NULL) OR ([ACCOUNT_STATUS] = @Original_ACCOUNT_STATUS)) AND ((@IsNull_ACCOUNT_SALDO = 1 AND [ACCOUNT_SALDO] IS NULL) OR ([ACCOUNT_SALDO] = @Original_ACCOUNT_SALDO)) AND ((@IsNull_ACCOUNT_DESC = 1 AND [ACCOUNT_DESC] IS NULL) OR ([ACCOUNT_DESC] = @Original_ACCOUNT_DESC)) AND ((@IsNull_ACCOUNT_POSITION = 1 AND [ACCOUNT_POSITION] IS NULL) OR ([ACCOUNT_POSITION] = @Original_ACCOUNT_POSITION)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ACCOUNT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_POSITION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_POSITION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_POSITION", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_POSITION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_ACCOUNT] ([ACCOUNT_ID], [ACCOUNT_NAME], [ACCOUNT_STATUS], [ACCOUNT_SALDO], [ACCOUNT_DESC], [ACCOUNT_POSITION], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@ACCOUNT_ID, @ACCOUNT_NAME, @ACCOUNT_STATUS, @ACCOUNT_SALDO, @ACCOUNT_DESC, @ACCOUNT_POSITION, @MODIFIED_BY, @MODIFIED_DATE);
SELECT ACCOUNT_ID, ACCOUNT_NAME, ACCOUNT_STATUS, ACCOUNT_SALDO, ACCOUNT_DESC, ACCOUNT_POSITION, MODIFIED_BY, MODIFIED_DATE FROM M_ACCOUNT WHERE (ACCOUNT_ID = @ACCOUNT_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ACCOUNT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_POSITION", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_POSITION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_ACCOUNT] SET [ACCOUNT_ID] = @ACCOUNT_ID, [ACCOUNT_NAME] = @ACCOUNT_NAME, [ACCOUNT_STATUS] = @ACCOUNT_STATUS, [ACCOUNT_SALDO] = @ACCOUNT_SALDO, [ACCOUNT_DESC] = @ACCOUNT_DESC, [ACCOUNT_POSITION] = @ACCOUNT_POSITION, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([ACCOUNT_ID] = @Original_ACCOUNT_ID) AND ((@IsNull_ACCOUNT_NAME = 1 AND [ACCOUNT_NAME] IS NULL) OR ([ACCOUNT_NAME] = @Original_ACCOUNT_NAME)) AND ((@IsNull_ACCOUNT_STATUS = 1 AND [ACCOUNT_STATUS] IS NULL) OR ([ACCOUNT_STATUS] = @Original_ACCOUNT_STATUS)) AND ((@IsNull_ACCOUNT_SALDO = 1 AND [ACCOUNT_SALDO] IS NULL) OR ([ACCOUNT_SALDO] = @Original_ACCOUNT_SALDO)) AND ((@IsNull_ACCOUNT_DESC = 1 AND [ACCOUNT_DESC] IS NULL) OR ([ACCOUNT_DESC] = @Original_ACCOUNT_DESC)) AND ((@IsNull_ACCOUNT_POSITION = 1 AND [ACCOUNT_POSITION] IS NULL) OR ([ACCOUNT_POSITION] = @Original_ACCOUNT_POSITION)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT ACCOUNT_ID, ACCOUNT_NAME, ACCOUNT_STATUS, ACCOUNT_SALDO, ACCOUNT_DESC, ACCOUNT_POSITION, MODIFIED_BY, MODIFIED_DATE FROM M_ACCOUNT WHERE (ACCOUNT_ID = @ACCOUNT_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ACCOUNT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_POSITION", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_POSITION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ACCOUNT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_POSITION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_POSITION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_POSITION", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_POSITION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ACCOUNT_ID, ACCOUNT_NAME, ACCOUNT_STATUS, ACCOUNT_SALDO, ACCOUNT_DESC, ACC" +
                "OUNT_POSITION, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_ACCOUNT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_ACCOUNTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_ACCOUNTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_ACCOUNTDataTable dataTable = new DataSet1.M_ACCOUNTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_ACCOUNTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_ACCOUNT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ACCOUNT_ID, string Original_ACCOUNT_NAME, string Original_ACCOUNT_STATUS, System.Nullable<decimal> Original_ACCOUNT_SALDO, string Original_ACCOUNT_DESC, string Original_ACCOUNT_POSITION, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_ACCOUNT_ID == null)) {
                throw new System.ArgumentNullException("Original_ACCOUNT_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ACCOUNT_ID));
            }
            if ((Original_ACCOUNT_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ACCOUNT_NAME));
            }
            if ((Original_ACCOUNT_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ACCOUNT_STATUS));
            }
            if ((Original_ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_ACCOUNT_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ACCOUNT_DESC));
            }
            if ((Original_ACCOUNT_POSITION == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ACCOUNT_POSITION));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ACCOUNT_ID, string ACCOUNT_NAME, string ACCOUNT_STATUS, System.Nullable<decimal> ACCOUNT_SALDO, string ACCOUNT_DESC, string ACCOUNT_POSITION, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((ACCOUNT_ID == null)) {
                throw new System.ArgumentNullException("ACCOUNT_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ACCOUNT_ID));
            }
            if ((ACCOUNT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ACCOUNT_NAME));
            }
            if ((ACCOUNT_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ACCOUNT_STATUS));
            }
            if ((ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((ACCOUNT_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ACCOUNT_DESC));
            }
            if ((ACCOUNT_POSITION == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ACCOUNT_POSITION));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ACCOUNT_ID, 
                    string ACCOUNT_NAME, 
                    string ACCOUNT_STATUS, 
                    System.Nullable<decimal> ACCOUNT_SALDO, 
                    string ACCOUNT_DESC, 
                    string ACCOUNT_POSITION, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_ACCOUNT_ID, 
                    string Original_ACCOUNT_NAME, 
                    string Original_ACCOUNT_STATUS, 
                    System.Nullable<decimal> Original_ACCOUNT_SALDO, 
                    string Original_ACCOUNT_DESC, 
                    string Original_ACCOUNT_POSITION, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((ACCOUNT_ID == null)) {
                throw new System.ArgumentNullException("ACCOUNT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ACCOUNT_ID));
            }
            if ((ACCOUNT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ACCOUNT_NAME));
            }
            if ((ACCOUNT_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ACCOUNT_STATUS));
            }
            if ((ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((ACCOUNT_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ACCOUNT_DESC));
            }
            if ((ACCOUNT_POSITION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ACCOUNT_POSITION));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_ACCOUNT_ID == null)) {
                throw new System.ArgumentNullException("Original_ACCOUNT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ACCOUNT_ID));
            }
            if ((Original_ACCOUNT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ACCOUNT_NAME));
            }
            if ((Original_ACCOUNT_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_ACCOUNT_STATUS));
            }
            if ((Original_ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_ACCOUNT_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ACCOUNT_DESC));
            }
            if ((Original_ACCOUNT_POSITION == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ACCOUNT_POSITION));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_BANKTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_BANKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_BANK";
            tableMapping.ColumnMappings.Add("BANK_ID", "BANK_ID");
            tableMapping.ColumnMappings.Add("BANK_NAME", "BANK_NAME");
            tableMapping.ColumnMappings.Add("BANK_ADDRESS", "BANK_ADDRESS");
            tableMapping.ColumnMappings.Add("BANK_LIMIT_GIRO_PER_MONTH", "BANK_LIMIT_GIRO_PER_MONTH");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_BANK] WHERE (([BANK_ID] = @Original_BANK_ID) AND ((@IsNull_BANK_NAME = 1 AND [BANK_NAME] IS NULL) OR ([BANK_NAME] = @Original_BANK_NAME)) AND ((@IsNull_BANK_ADDRESS = 1 AND [BANK_ADDRESS] IS NULL) OR ([BANK_ADDRESS] = @Original_BANK_ADDRESS)) AND ((@IsNull_BANK_LIMIT_GIRO_PER_MONTH = 1 AND [BANK_LIMIT_GIRO_PER_MONTH] IS NULL) OR ([BANK_LIMIT_GIRO_PER_MONTH] = @Original_BANK_LIMIT_GIRO_PER_MONTH)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_LIMIT_GIRO_PER_MONTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_LIMIT_GIRO_PER_MONTH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_LIMIT_GIRO_PER_MONTH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BANK_LIMIT_GIRO_PER_MONTH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_BANK] ([BANK_ID], [BANK_NAME], [BANK_ADDRESS], [BANK_LIMIT_GIRO_PER_MONTH], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@BANK_ID, @BANK_NAME, @BANK_ADDRESS, @BANK_LIMIT_GIRO_PER_MONTH, @MODIFIED_BY, @MODIFIED_DATE);
SELECT BANK_ID, BANK_NAME, BANK_ADDRESS, BANK_LIMIT_GIRO_PER_MONTH, MODIFIED_BY, MODIFIED_DATE FROM M_BANK WHERE (BANK_ID = @BANK_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_LIMIT_GIRO_PER_MONTH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BANK_LIMIT_GIRO_PER_MONTH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_BANK] SET [BANK_ID] = @BANK_ID, [BANK_NAME] = @BANK_NAME, [BANK_ADDRESS] = @BANK_ADDRESS, [BANK_LIMIT_GIRO_PER_MONTH] = @BANK_LIMIT_GIRO_PER_MONTH, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([BANK_ID] = @Original_BANK_ID) AND ((@IsNull_BANK_NAME = 1 AND [BANK_NAME] IS NULL) OR ([BANK_NAME] = @Original_BANK_NAME)) AND ((@IsNull_BANK_ADDRESS = 1 AND [BANK_ADDRESS] IS NULL) OR ([BANK_ADDRESS] = @Original_BANK_ADDRESS)) AND ((@IsNull_BANK_LIMIT_GIRO_PER_MONTH = 1 AND [BANK_LIMIT_GIRO_PER_MONTH] IS NULL) OR ([BANK_LIMIT_GIRO_PER_MONTH] = @Original_BANK_LIMIT_GIRO_PER_MONTH)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT BANK_ID, BANK_NAME, BANK_ADDRESS, BANK_LIMIT_GIRO_PER_MONTH, MODIFIED_BY, MODIFIED_DATE FROM M_BANK WHERE (BANK_ID = @BANK_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_LIMIT_GIRO_PER_MONTH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BANK_LIMIT_GIRO_PER_MONTH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_LIMIT_GIRO_PER_MONTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_LIMIT_GIRO_PER_MONTH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_LIMIT_GIRO_PER_MONTH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BANK_LIMIT_GIRO_PER_MONTH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BANK_ID, BANK_NAME, BANK_ADDRESS, BANK_LIMIT_GIRO_PER_MONTH, MODIFIED_BY, " +
                "MODIFIED_DATE FROM dbo.M_BANK";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_BANKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_BANKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_BANKDataTable dataTable = new DataSet1.M_BANKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_BANKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_BANK");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_BANK_ID, string Original_BANK_NAME, string Original_BANK_ADDRESS, System.Nullable<decimal> Original_BANK_LIMIT_GIRO_PER_MONTH, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_BANK_ID == null)) {
                throw new System.ArgumentNullException("Original_BANK_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BANK_ID));
            }
            if ((Original_BANK_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_BANK_NAME));
            }
            if ((Original_BANK_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BANK_ADDRESS));
            }
            if ((Original_BANK_LIMIT_GIRO_PER_MONTH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_BANK_LIMIT_GIRO_PER_MONTH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string BANK_ID, string BANK_NAME, string BANK_ADDRESS, System.Nullable<decimal> BANK_LIMIT_GIRO_PER_MONTH, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((BANK_ID == null)) {
                throw new System.ArgumentNullException("BANK_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BANK_ID));
            }
            if ((BANK_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BANK_NAME));
            }
            if ((BANK_ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BANK_ADDRESS));
            }
            if ((BANK_LIMIT_GIRO_PER_MONTH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(BANK_LIMIT_GIRO_PER_MONTH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string BANK_ID, string BANK_NAME, string BANK_ADDRESS, System.Nullable<decimal> BANK_LIMIT_GIRO_PER_MONTH, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_BANK_ID, string Original_BANK_NAME, string Original_BANK_ADDRESS, System.Nullable<decimal> Original_BANK_LIMIT_GIRO_PER_MONTH, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((BANK_ID == null)) {
                throw new System.ArgumentNullException("BANK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BANK_ID));
            }
            if ((BANK_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BANK_NAME));
            }
            if ((BANK_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BANK_ADDRESS));
            }
            if ((BANK_LIMIT_GIRO_PER_MONTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(BANK_LIMIT_GIRO_PER_MONTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_BANK_ID == null)) {
                throw new System.ArgumentNullException("Original_BANK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_BANK_ID));
            }
            if ((Original_BANK_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_BANK_NAME));
            }
            if ((Original_BANK_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_BANK_ADDRESS));
            }
            if ((Original_BANK_LIMIT_GIRO_PER_MONTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_BANK_LIMIT_GIRO_PER_MONTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_COMMISSIONTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_COMMISSIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_COMMISSION";
            tableMapping.ColumnMappings.Add("COMMISSION_ID", "COMMISSION_ID");
            tableMapping.ColumnMappings.Add("COMMISSION_STATUS", "COMMISSION_STATUS");
            tableMapping.ColumnMappings.Add("COMMISSION_VALUE", "COMMISSION_VALUE");
            tableMapping.ColumnMappings.Add("COMMISSION_DESC", "COMMISSION_DESC");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_COMMISSION] WHERE (([COMMISSION_ID] = @Original_COMMISSION_ID) AND ((@IsNull_COMMISSION_STATUS = 1 AND [COMMISSION_STATUS] IS NULL) OR ([COMMISSION_STATUS] = @Original_COMMISSION_STATUS)) AND ((@IsNull_COMMISSION_VALUE = 1 AND [COMMISSION_VALUE] IS NULL) OR ([COMMISSION_VALUE] = @Original_COMMISSION_VALUE)) AND ((@IsNull_COMMISSION_DESC = 1 AND [COMMISSION_DESC] IS NULL) OR ([COMMISSION_DESC] = @Original_COMMISSION_DESC)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_VALUE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_VALUE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION_VALUE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_COMMISSION] ([COMMISSION_STATUS], [COMMISSION_VALUE], [COMMISSION_DESC]) VALUES (@COMMISSION_STATUS, @COMMISSION_VALUE, @COMMISSION_DESC);
SELECT COMMISSION_ID, COMMISSION_STATUS, COMMISSION_VALUE, COMMISSION_DESC FROM M_COMMISSION WHERE (COMMISSION_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION_VALUE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_COMMISSION] SET [COMMISSION_STATUS] = @COMMISSION_STATUS, [COMMISSION_VALUE] = @COMMISSION_VALUE, [COMMISSION_DESC] = @COMMISSION_DESC WHERE (([COMMISSION_ID] = @Original_COMMISSION_ID) AND ((@IsNull_COMMISSION_STATUS = 1 AND [COMMISSION_STATUS] IS NULL) OR ([COMMISSION_STATUS] = @Original_COMMISSION_STATUS)) AND ((@IsNull_COMMISSION_VALUE = 1 AND [COMMISSION_VALUE] IS NULL) OR ([COMMISSION_VALUE] = @Original_COMMISSION_VALUE)) AND ((@IsNull_COMMISSION_DESC = 1 AND [COMMISSION_DESC] IS NULL) OR ([COMMISSION_DESC] = @Original_COMMISSION_DESC)));
SELECT COMMISSION_ID, COMMISSION_STATUS, COMMISSION_VALUE, COMMISSION_DESC FROM M_COMMISSION WHERE (COMMISSION_ID = @COMMISSION_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION_VALUE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_VALUE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_VALUE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION_VALUE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT COMMISSION_ID, COMMISSION_STATUS, COMMISSION_VALUE, COMMISSION_DESC FROM d" +
                "bo.M_COMMISSION";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_COMMISSIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_COMMISSIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_COMMISSIONDataTable dataTable = new DataSet1.M_COMMISSIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_COMMISSIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_COMMISSION");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_COMMISSION_ID, string Original_COMMISSION_STATUS, System.Nullable<decimal> Original_COMMISSION_VALUE, string Original_COMMISSION_DESC) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_COMMISSION_ID));
            if ((Original_COMMISSION_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_COMMISSION_STATUS));
            }
            if ((Original_COMMISSION_VALUE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_COMMISSION_VALUE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_COMMISSION_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_COMMISSION_DESC));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string COMMISSION_STATUS, System.Nullable<decimal> COMMISSION_VALUE, string COMMISSION_DESC) {
            if ((COMMISSION_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COMMISSION_STATUS));
            }
            if ((COMMISSION_VALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(COMMISSION_VALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((COMMISSION_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(COMMISSION_DESC));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string COMMISSION_STATUS, System.Nullable<decimal> COMMISSION_VALUE, string COMMISSION_DESC, decimal Original_COMMISSION_ID, string Original_COMMISSION_STATUS, System.Nullable<decimal> Original_COMMISSION_VALUE, string Original_COMMISSION_DESC, decimal COMMISSION_ID) {
            if ((COMMISSION_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COMMISSION_STATUS));
            }
            if ((COMMISSION_VALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(COMMISSION_VALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((COMMISSION_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(COMMISSION_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_COMMISSION_ID));
            if ((Original_COMMISSION_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_COMMISSION_STATUS));
            }
            if ((Original_COMMISSION_VALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_COMMISSION_VALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_COMMISSION_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_COMMISSION_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(COMMISSION_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_COMMISSION_SHARETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_COMMISSION_SHARETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_COMMISSION_SHARE";
            tableMapping.ColumnMappings.Add("SHARE_ID", "SHARE_ID");
            tableMapping.ColumnMappings.Add("COMMISSION_ID", "COMMISSION_ID");
            tableMapping.ColumnMappings.Add("SHARE_TO", "SHARE_TO");
            tableMapping.ColumnMappings.Add("SHARE_VALUE", "SHARE_VALUE");
            tableMapping.ColumnMappings.Add("SHARE_DESC", "SHARE_DESC");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_COMMISSION_SHARE] WHERE (([SHARE_ID] = @Original_SHARE_ID) AND ((@IsNull_COMMISSION_ID = 1 AND [COMMISSION_ID] IS NULL) OR ([COMMISSION_ID] = @Original_COMMISSION_ID)) AND ((@IsNull_SHARE_TO = 1 AND [SHARE_TO] IS NULL) OR ([SHARE_TO] = @Original_SHARE_TO)) AND ((@IsNull_SHARE_VALUE = 1 AND [SHARE_VALUE] IS NULL) OR ([SHARE_VALUE] = @Original_SHARE_VALUE)) AND ((@IsNull_SHARE_DESC = 1 AND [SHARE_DESC] IS NULL) OR ([SHARE_DESC] = @Original_SHARE_DESC)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "SHARE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SHARE_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_TO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SHARE_VALUE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_VALUE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SHARE_VALUE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SHARE_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_COMMISSION_SHARE] ([COMMISSION_ID], [SHARE_TO], [SHARE_VALUE], [SHARE_DESC]) VALUES (@COMMISSION_ID, @SHARE_TO, @SHARE_VALUE, @SHARE_DESC);
SELECT SHARE_ID, COMMISSION_ID, SHARE_TO, SHARE_VALUE, SHARE_DESC FROM M_COMMISSION_SHARE WHERE (SHARE_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_TO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SHARE_VALUE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_COMMISSION_SHARE] SET [COMMISSION_ID] = @COMMISSION_ID, [SHARE_TO] = @SHARE_TO, [SHARE_VALUE] = @SHARE_VALUE, [SHARE_DESC] = @SHARE_DESC WHERE (([SHARE_ID] = @Original_SHARE_ID) AND ((@IsNull_COMMISSION_ID = 1 AND [COMMISSION_ID] IS NULL) OR ([COMMISSION_ID] = @Original_COMMISSION_ID)) AND ((@IsNull_SHARE_TO = 1 AND [SHARE_TO] IS NULL) OR ([SHARE_TO] = @Original_SHARE_TO)) AND ((@IsNull_SHARE_VALUE = 1 AND [SHARE_VALUE] IS NULL) OR ([SHARE_VALUE] = @Original_SHARE_VALUE)) AND ((@IsNull_SHARE_DESC = 1 AND [SHARE_DESC] IS NULL) OR ([SHARE_DESC] = @Original_SHARE_DESC)));
SELECT SHARE_ID, COMMISSION_ID, SHARE_TO, SHARE_VALUE, SHARE_DESC FROM M_COMMISSION_SHARE WHERE (SHARE_ID = @SHARE_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_TO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SHARE_VALUE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "SHARE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SHARE_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_TO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SHARE_VALUE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_VALUE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SHARE_VALUE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SHARE_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "SHARE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SHARE_ID, COMMISSION_ID, SHARE_TO, SHARE_VALUE, SHARE_DESC FROM dbo.M_COMM" +
                "ISSION_SHARE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_COMMISSION_SHAREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_COMMISSION_SHAREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_COMMISSION_SHAREDataTable dataTable = new DataSet1.M_COMMISSION_SHAREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_COMMISSION_SHAREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_COMMISSION_SHARE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_SHARE_ID, System.Nullable<decimal> Original_COMMISSION_ID, string Original_SHARE_TO, System.Nullable<decimal> Original_SHARE_VALUE, string Original_SHARE_DESC) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_SHARE_ID));
            if ((Original_COMMISSION_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_COMMISSION_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_SHARE_TO == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SHARE_TO));
            }
            if ((Original_SHARE_VALUE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_SHARE_VALUE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_SHARE_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SHARE_DESC));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<decimal> COMMISSION_ID, string SHARE_TO, System.Nullable<decimal> SHARE_VALUE, string SHARE_DESC) {
            if ((COMMISSION_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(COMMISSION_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((SHARE_TO == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SHARE_TO));
            }
            if ((SHARE_VALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SHARE_VALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SHARE_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SHARE_DESC));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<decimal> COMMISSION_ID, string SHARE_TO, System.Nullable<decimal> SHARE_VALUE, string SHARE_DESC, decimal Original_SHARE_ID, System.Nullable<decimal> Original_COMMISSION_ID, string Original_SHARE_TO, System.Nullable<decimal> Original_SHARE_VALUE, string Original_SHARE_DESC, decimal SHARE_ID) {
            if ((COMMISSION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(COMMISSION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((SHARE_TO == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SHARE_TO));
            }
            if ((SHARE_VALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SHARE_VALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SHARE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SHARE_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_SHARE_ID));
            if ((Original_COMMISSION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_COMMISSION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_SHARE_TO == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_SHARE_TO));
            }
            if ((Original_SHARE_VALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_SHARE_VALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_SHARE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_SHARE_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(SHARE_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_CUSTOMERTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_CUSTOMERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_CUSTOMER";
            tableMapping.ColumnMappings.Add("CUSTOMER_ID", "CUSTOMER_ID");
            tableMapping.ColumnMappings.Add("CUSTOMER_NAME", "CUSTOMER_NAME");
            tableMapping.ColumnMappings.Add("CUSTOMER_ADDRESS", "CUSTOMER_ADDRESS");
            tableMapping.ColumnMappings.Add("CUSTOMER_PHONE", "CUSTOMER_PHONE");
            tableMapping.ColumnMappings.Add("CUSTOMER_FAX", "CUSTOMER_FAX");
            tableMapping.ColumnMappings.Add("CUSTOMER_STATUS", "CUSTOMER_STATUS");
            tableMapping.ColumnMappings.Add("CUSTOMER_NPWP", "CUSTOMER_NPWP");
            tableMapping.ColumnMappings.Add("CUSTOMER_DISC", "CUSTOMER_DISC");
            tableMapping.ColumnMappings.Add("CUSTOMER_LIMIT", "CUSTOMER_LIMIT");
            tableMapping.ColumnMappings.Add("CUSTOMER_DESC", "CUSTOMER_DESC");
            tableMapping.ColumnMappings.Add("CUSTOMER_DESC2", "CUSTOMER_DESC2");
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_ID", "SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[M_CUSTOMER] WHERE (([CUSTOMER_ID] = @Original_CUSTOMER_ID) AND" +
                " ((@IsNull_CUSTOMER_NAME = 1 AND [CUSTOMER_NAME] IS NULL) OR ([CUSTOMER_NAME] = " +
                "@Original_CUSTOMER_NAME)) AND ((@IsNull_CUSTOMER_ADDRESS = 1 AND [CUSTOMER_ADDRE" +
                "SS] IS NULL) OR ([CUSTOMER_ADDRESS] = @Original_CUSTOMER_ADDRESS)) AND ((@IsNull" +
                "_CUSTOMER_PHONE = 1 AND [CUSTOMER_PHONE] IS NULL) OR ([CUSTOMER_PHONE] = @Origin" +
                "al_CUSTOMER_PHONE)) AND ((@IsNull_CUSTOMER_FAX = 1 AND [CUSTOMER_FAX] IS NULL) O" +
                "R ([CUSTOMER_FAX] = @Original_CUSTOMER_FAX)) AND ((@IsNull_CUSTOMER_STATUS = 1 A" +
                "ND [CUSTOMER_STATUS] IS NULL) OR ([CUSTOMER_STATUS] = @Original_CUSTOMER_STATUS)" +
                ") AND ((@IsNull_CUSTOMER_NPWP = 1 AND [CUSTOMER_NPWP] IS NULL) OR ([CUSTOMER_NPW" +
                "P] = @Original_CUSTOMER_NPWP)) AND ((@IsNull_CUSTOMER_DISC = 1 AND [CUSTOMER_DIS" +
                "C] IS NULL) OR ([CUSTOMER_DISC] = @Original_CUSTOMER_DISC)) AND ((@IsNull_CUSTOM" +
                "ER_LIMIT = 1 AND [CUSTOMER_LIMIT] IS NULL) OR ([CUSTOMER_LIMIT] = @Original_CUST" +
                "OMER_LIMIT)) AND ((@IsNull_CUSTOMER_DESC = 1 AND [CUSTOMER_DESC] IS NULL) OR ([C" +
                "USTOMER_DESC] = @Original_CUSTOMER_DESC)) AND ((@IsNull_CUSTOMER_DESC2 = 1 AND [" +
                "CUSTOMER_DESC2] IS NULL) OR ([CUSTOMER_DESC2] = @Original_CUSTOMER_DESC2)) AND (" +
                "(@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACCOUNT_ID] =" +
                " @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS N" +
                "ULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1" +
                " AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_FAX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_FAX", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_FAX", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_NPWP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NPWP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NPWP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_DISC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DISC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "CUSTOMER_DISC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_LIMIT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_LIMIT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_LIMIT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "CUSTOMER_LIMIT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_DESC2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_DESC2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_CUSTOMER] ([CUSTOMER_ID], [CUSTOMER_NAME], [CUSTOMER_ADDRESS], [CUSTOMER_PHONE], [CUSTOMER_FAX], [CUSTOMER_STATUS], [CUSTOMER_NPWP], [CUSTOMER_DISC], [CUSTOMER_LIMIT], [CUSTOMER_DESC], [CUSTOMER_DESC2], [SUB_ACCOUNT_ID], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@CUSTOMER_ID, @CUSTOMER_NAME, @CUSTOMER_ADDRESS, @CUSTOMER_PHONE, @CUSTOMER_FAX, @CUSTOMER_STATUS, @CUSTOMER_NPWP, @CUSTOMER_DISC, @CUSTOMER_LIMIT, @CUSTOMER_DESC, @CUSTOMER_DESC2, @SUB_ACCOUNT_ID, @MODIFIED_BY, @MODIFIED_DATE);
SELECT CUSTOMER_ID, CUSTOMER_NAME, CUSTOMER_ADDRESS, CUSTOMER_PHONE, CUSTOMER_FAX, CUSTOMER_STATUS, CUSTOMER_NPWP, CUSTOMER_DISC, CUSTOMER_LIMIT, CUSTOMER_DESC, CUSTOMER_DESC2, SUB_ACCOUNT_ID, MODIFIED_BY, MODIFIED_DATE FROM M_CUSTOMER WHERE (CUSTOMER_ID = @CUSTOMER_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_FAX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NPWP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "CUSTOMER_DISC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_LIMIT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "CUSTOMER_LIMIT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_DESC2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[M_CUSTOMER] SET [CUSTOMER_ID] = @CUSTOMER_ID, [CUSTOMER_NAME] = @CU" +
                "STOMER_NAME, [CUSTOMER_ADDRESS] = @CUSTOMER_ADDRESS, [CUSTOMER_PHONE] = @CUSTOME" +
                "R_PHONE, [CUSTOMER_FAX] = @CUSTOMER_FAX, [CUSTOMER_STATUS] = @CUSTOMER_STATUS, [" +
                "CUSTOMER_NPWP] = @CUSTOMER_NPWP, [CUSTOMER_DISC] = @CUSTOMER_DISC, [CUSTOMER_LIM" +
                "IT] = @CUSTOMER_LIMIT, [CUSTOMER_DESC] = @CUSTOMER_DESC, [CUSTOMER_DESC2] = @CUS" +
                "TOMER_DESC2, [SUB_ACCOUNT_ID] = @SUB_ACCOUNT_ID, [MODIFIED_BY] = @MODIFIED_BY, [" +
                "MODIFIED_DATE] = @MODIFIED_DATE WHERE (([CUSTOMER_ID] = @Original_CUSTOMER_ID) A" +
                "ND ((@IsNull_CUSTOMER_NAME = 1 AND [CUSTOMER_NAME] IS NULL) OR ([CUSTOMER_NAME] " +
                "= @Original_CUSTOMER_NAME)) AND ((@IsNull_CUSTOMER_ADDRESS = 1 AND [CUSTOMER_ADD" +
                "RESS] IS NULL) OR ([CUSTOMER_ADDRESS] = @Original_CUSTOMER_ADDRESS)) AND ((@IsNu" +
                "ll_CUSTOMER_PHONE = 1 AND [CUSTOMER_PHONE] IS NULL) OR ([CUSTOMER_PHONE] = @Orig" +
                "inal_CUSTOMER_PHONE)) AND ((@IsNull_CUSTOMER_FAX = 1 AND [CUSTOMER_FAX] IS NULL)" +
                " OR ([CUSTOMER_FAX] = @Original_CUSTOMER_FAX)) AND ((@IsNull_CUSTOMER_STATUS = 1" +
                " AND [CUSTOMER_STATUS] IS NULL) OR ([CUSTOMER_STATUS] = @Original_CUSTOMER_STATU" +
                "S)) AND ((@IsNull_CUSTOMER_NPWP = 1 AND [CUSTOMER_NPWP] IS NULL) OR ([CUSTOMER_N" +
                "PWP] = @Original_CUSTOMER_NPWP)) AND ((@IsNull_CUSTOMER_DISC = 1 AND [CUSTOMER_D" +
                "ISC] IS NULL) OR ([CUSTOMER_DISC] = @Original_CUSTOMER_DISC)) AND ((@IsNull_CUST" +
                "OMER_LIMIT = 1 AND [CUSTOMER_LIMIT] IS NULL) OR ([CUSTOMER_LIMIT] = @Original_CU" +
                "STOMER_LIMIT)) AND ((@IsNull_CUSTOMER_DESC = 1 AND [CUSTOMER_DESC] IS NULL) OR (" +
                "[CUSTOMER_DESC] = @Original_CUSTOMER_DESC)) AND ((@IsNull_CUSTOMER_DESC2 = 1 AND" +
                " [CUSTOMER_DESC2] IS NULL) OR ([CUSTOMER_DESC2] = @Original_CUSTOMER_DESC2)) AND" +
                " ((@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACCOUNT_ID]" +
                " = @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS" +
                " NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE =" +
                " 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))" +
                ";\r\nSELECT CUSTOMER_ID, CUSTOMER_NAME, CUSTOMER_ADDRESS, CUSTOMER_PHONE, CUSTOMER" +
                "_FAX, CUSTOMER_STATUS, CUSTOMER_NPWP, CUSTOMER_DISC, CUSTOMER_LIMIT, CUSTOMER_DE" +
                "SC, CUSTOMER_DESC2, SUB_ACCOUNT_ID, MODIFIED_BY, MODIFIED_DATE FROM M_CUSTOMER W" +
                "HERE (CUSTOMER_ID = @CUSTOMER_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_FAX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NPWP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "CUSTOMER_DISC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_LIMIT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "CUSTOMER_LIMIT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_DESC2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_FAX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_FAX", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_FAX", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_NPWP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NPWP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_NPWP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_DISC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DISC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "CUSTOMER_DISC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_LIMIT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_LIMIT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_LIMIT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "CUSTOMER_LIMIT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_DESC2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_DESC2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_DESC2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CUSTOMER_ID, CUSTOMER_NAME, CUSTOMER_ADDRESS, CUSTOMER_PHONE, CUSTOMER_FAX" +
                ", CUSTOMER_STATUS, CUSTOMER_NPWP, CUSTOMER_DISC, CUSTOMER_LIMIT, CUSTOMER_DESC, " +
                "CUSTOMER_DESC2, SUB_ACCOUNT_ID, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_CUSTOMER";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_CUSTOMERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_CUSTOMERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_CUSTOMERDataTable dataTable = new DataSet1.M_CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_CUSTOMERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_CUSTOMER");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CUSTOMER_ID, string Original_CUSTOMER_NAME, string Original_CUSTOMER_ADDRESS, string Original_CUSTOMER_PHONE, string Original_CUSTOMER_FAX, string Original_CUSTOMER_STATUS, string Original_CUSTOMER_NPWP, System.Nullable<decimal> Original_CUSTOMER_DISC, System.Nullable<decimal> Original_CUSTOMER_LIMIT, string Original_CUSTOMER_DESC, string Original_CUSTOMER_DESC2, string Original_SUB_ACCOUNT_ID, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_CUSTOMER_ID == null)) {
                throw new System.ArgumentNullException("Original_CUSTOMER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CUSTOMER_ID));
            }
            if ((Original_CUSTOMER_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CUSTOMER_NAME));
            }
            if ((Original_CUSTOMER_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CUSTOMER_ADDRESS));
            }
            if ((Original_CUSTOMER_PHONE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CUSTOMER_PHONE));
            }
            if ((Original_CUSTOMER_FAX == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CUSTOMER_FAX));
            }
            if ((Original_CUSTOMER_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CUSTOMER_STATUS));
            }
            if ((Original_CUSTOMER_NPWP == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_CUSTOMER_NPWP));
            }
            if ((Original_CUSTOMER_DISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_CUSTOMER_DISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_CUSTOMER_LIMIT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_CUSTOMER_LIMIT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_CUSTOMER_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_CUSTOMER_DESC));
            }
            if ((Original_CUSTOMER_DESC2 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_CUSTOMER_DESC2));
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CUSTOMER_ID, string CUSTOMER_NAME, string CUSTOMER_ADDRESS, string CUSTOMER_PHONE, string CUSTOMER_FAX, string CUSTOMER_STATUS, string CUSTOMER_NPWP, System.Nullable<decimal> CUSTOMER_DISC, System.Nullable<decimal> CUSTOMER_LIMIT, string CUSTOMER_DESC, string CUSTOMER_DESC2, string SUB_ACCOUNT_ID, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((CUSTOMER_ID == null)) {
                throw new System.ArgumentNullException("CUSTOMER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CUSTOMER_ID));
            }
            if ((CUSTOMER_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUSTOMER_NAME));
            }
            if ((CUSTOMER_ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CUSTOMER_ADDRESS));
            }
            if ((CUSTOMER_PHONE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CUSTOMER_PHONE));
            }
            if ((CUSTOMER_FAX == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CUSTOMER_FAX));
            }
            if ((CUSTOMER_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CUSTOMER_STATUS));
            }
            if ((CUSTOMER_NPWP == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CUSTOMER_NPWP));
            }
            if ((CUSTOMER_DISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(CUSTOMER_DISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((CUSTOMER_LIMIT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(CUSTOMER_LIMIT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((CUSTOMER_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CUSTOMER_DESC));
            }
            if ((CUSTOMER_DESC2 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CUSTOMER_DESC2));
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CUSTOMER_ID, 
                    string CUSTOMER_NAME, 
                    string CUSTOMER_ADDRESS, 
                    string CUSTOMER_PHONE, 
                    string CUSTOMER_FAX, 
                    string CUSTOMER_STATUS, 
                    string CUSTOMER_NPWP, 
                    System.Nullable<decimal> CUSTOMER_DISC, 
                    System.Nullable<decimal> CUSTOMER_LIMIT, 
                    string CUSTOMER_DESC, 
                    string CUSTOMER_DESC2, 
                    string SUB_ACCOUNT_ID, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_CUSTOMER_ID, 
                    string Original_CUSTOMER_NAME, 
                    string Original_CUSTOMER_ADDRESS, 
                    string Original_CUSTOMER_PHONE, 
                    string Original_CUSTOMER_FAX, 
                    string Original_CUSTOMER_STATUS, 
                    string Original_CUSTOMER_NPWP, 
                    System.Nullable<decimal> Original_CUSTOMER_DISC, 
                    System.Nullable<decimal> Original_CUSTOMER_LIMIT, 
                    string Original_CUSTOMER_DESC, 
                    string Original_CUSTOMER_DESC2, 
                    string Original_SUB_ACCOUNT_ID, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((CUSTOMER_ID == null)) {
                throw new System.ArgumentNullException("CUSTOMER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CUSTOMER_ID));
            }
            if ((CUSTOMER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUSTOMER_NAME));
            }
            if ((CUSTOMER_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CUSTOMER_ADDRESS));
            }
            if ((CUSTOMER_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CUSTOMER_PHONE));
            }
            if ((CUSTOMER_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CUSTOMER_FAX));
            }
            if ((CUSTOMER_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CUSTOMER_STATUS));
            }
            if ((CUSTOMER_NPWP == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CUSTOMER_NPWP));
            }
            if ((CUSTOMER_DISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(CUSTOMER_DISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((CUSTOMER_LIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(CUSTOMER_LIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((CUSTOMER_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CUSTOMER_DESC));
            }
            if ((CUSTOMER_DESC2 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CUSTOMER_DESC2));
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_CUSTOMER_ID == null)) {
                throw new System.ArgumentNullException("Original_CUSTOMER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CUSTOMER_ID));
            }
            if ((Original_CUSTOMER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_CUSTOMER_NAME));
            }
            if ((Original_CUSTOMER_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_CUSTOMER_ADDRESS));
            }
            if ((Original_CUSTOMER_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CUSTOMER_PHONE));
            }
            if ((Original_CUSTOMER_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_CUSTOMER_FAX));
            }
            if ((Original_CUSTOMER_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_CUSTOMER_STATUS));
            }
            if ((Original_CUSTOMER_NPWP == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_CUSTOMER_NPWP));
            }
            if ((Original_CUSTOMER_DISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_CUSTOMER_DISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_CUSTOMER_LIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_CUSTOMER_LIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_CUSTOMER_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_CUSTOMER_DESC));
            }
            if ((Original_CUSTOMER_DESC2 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_CUSTOMER_DESC2));
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_CUSTOMER_GROUPTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_CUSTOMER_GROUPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_CUSTOMER_GROUP";
            tableMapping.ColumnMappings.Add("CUSTOMER_GROUP_ID", "CUSTOMER_GROUP_ID");
            tableMapping.ColumnMappings.Add("CUSTOMER_GROUP_NAME", "CUSTOMER_GROUP_NAME");
            tableMapping.ColumnMappings.Add("CUSTOMER_GROUP_DESC", "CUSTOMER_GROUP_DESC");
            tableMapping.ColumnMappings.Add("CUSTOMER_GROUP_PERCENTAGE", "CUSTOMER_GROUP_PERCENTAGE");
            tableMapping.ColumnMappings.Add("CUSTOMER_GROUP_USE_PERCENTAGE", "CUSTOMER_GROUP_USE_PERCENTAGE");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_CUSTOMER_GROUP] WHERE (([CUSTOMER_GROUP_ID] = @Original_CUSTOMER_GROUP_ID) AND ((@IsNull_CUSTOMER_GROUP_NAME = 1 AND [CUSTOMER_GROUP_NAME] IS NULL) OR ([CUSTOMER_GROUP_NAME] = @Original_CUSTOMER_GROUP_NAME)) AND ((@IsNull_CUSTOMER_GROUP_PERCENTAGE = 1 AND [CUSTOMER_GROUP_PERCENTAGE] IS NULL) OR ([CUSTOMER_GROUP_PERCENTAGE] = @Original_CUSTOMER_GROUP_PERCENTAGE)) AND ((@IsNull_CUSTOMER_GROUP_USE_PERCENTAGE = 1 AND [CUSTOMER_GROUP_USE_PERCENTAGE] IS NULL) OR ([CUSTOMER_GROUP_USE_PERCENTAGE] = @Original_CUSTOMER_GROUP_USE_PERCENTAGE)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_GROUP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_GROUP_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_GROUP_PERCENTAGE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_PERCENTAGE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_GROUP_PERCENTAGE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "CUSTOMER_GROUP_PERCENTAGE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_CUSTOMER_GROUP] ([CUSTOMER_GROUP_ID], [CUSTOMER_GROUP_NAME], [CUSTOMER_GROUP_DESC], [CUSTOMER_GROUP_PERCENTAGE], [CUSTOMER_GROUP_USE_PERCENTAGE], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@CUSTOMER_GROUP_ID, @CUSTOMER_GROUP_NAME, @CUSTOMER_GROUP_DESC, @CUSTOMER_GROUP_PERCENTAGE, @CUSTOMER_GROUP_USE_PERCENTAGE, @MODIFIED_BY, @MODIFIED_DATE);
SELECT CUSTOMER_GROUP_ID, CUSTOMER_GROUP_NAME, CUSTOMER_GROUP_DESC, CUSTOMER_GROUP_PERCENTAGE, CUSTOMER_GROUP_USE_PERCENTAGE, MODIFIED_BY, MODIFIED_DATE FROM M_CUSTOMER_GROUP WHERE (CUSTOMER_GROUP_ID = @CUSTOMER_GROUP_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_PERCENTAGE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "CUSTOMER_GROUP_PERCENTAGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_CUSTOMER_GROUP] SET [CUSTOMER_GROUP_ID] = @CUSTOMER_GROUP_ID, [CUSTOMER_GROUP_NAME] = @CUSTOMER_GROUP_NAME, [CUSTOMER_GROUP_DESC] = @CUSTOMER_GROUP_DESC, [CUSTOMER_GROUP_PERCENTAGE] = @CUSTOMER_GROUP_PERCENTAGE, [CUSTOMER_GROUP_USE_PERCENTAGE] = @CUSTOMER_GROUP_USE_PERCENTAGE, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([CUSTOMER_GROUP_ID] = @Original_CUSTOMER_GROUP_ID) AND ((@IsNull_CUSTOMER_GROUP_NAME = 1 AND [CUSTOMER_GROUP_NAME] IS NULL) OR ([CUSTOMER_GROUP_NAME] = @Original_CUSTOMER_GROUP_NAME)) AND ((@IsNull_CUSTOMER_GROUP_PERCENTAGE = 1 AND [CUSTOMER_GROUP_PERCENTAGE] IS NULL) OR ([CUSTOMER_GROUP_PERCENTAGE] = @Original_CUSTOMER_GROUP_PERCENTAGE)) AND ((@IsNull_CUSTOMER_GROUP_USE_PERCENTAGE = 1 AND [CUSTOMER_GROUP_USE_PERCENTAGE] IS NULL) OR ([CUSTOMER_GROUP_USE_PERCENTAGE] = @Original_CUSTOMER_GROUP_USE_PERCENTAGE)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT CUSTOMER_GROUP_ID, CUSTOMER_GROUP_NAME, CUSTOMER_GROUP_DESC, CUSTOMER_GROUP_PERCENTAGE, CUSTOMER_GROUP_USE_PERCENTAGE, MODIFIED_BY, MODIFIED_DATE FROM M_CUSTOMER_GROUP WHERE (CUSTOMER_GROUP_ID = @CUSTOMER_GROUP_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_PERCENTAGE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "CUSTOMER_GROUP_PERCENTAGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_GROUP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_GROUP_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_GROUP_PERCENTAGE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_PERCENTAGE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_GROUP_PERCENTAGE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "CUSTOMER_GROUP_PERCENTAGE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_GROUP_USE_PERCENTAGE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CUSTOMER_GROUP_ID, CUSTOMER_GROUP_NAME, CUSTOMER_GROUP_DESC, CUSTOMER_GROU" +
                "P_PERCENTAGE, CUSTOMER_GROUP_USE_PERCENTAGE, MODIFIED_BY, MODIFIED_DATE FROM dbo" +
                ".M_CUSTOMER_GROUP";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_CUSTOMER_GROUPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_CUSTOMER_GROUPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_CUSTOMER_GROUPDataTable dataTable = new DataSet1.M_CUSTOMER_GROUPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_CUSTOMER_GROUPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_CUSTOMER_GROUP");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CUSTOMER_GROUP_ID, string Original_CUSTOMER_GROUP_NAME, System.Nullable<decimal> Original_CUSTOMER_GROUP_PERCENTAGE, System.Nullable<bool> Original_CUSTOMER_GROUP_USE_PERCENTAGE, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_CUSTOMER_GROUP_ID == null)) {
                throw new System.ArgumentNullException("Original_CUSTOMER_GROUP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CUSTOMER_GROUP_ID));
            }
            if ((Original_CUSTOMER_GROUP_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CUSTOMER_GROUP_NAME));
            }
            if ((Original_CUSTOMER_GROUP_PERCENTAGE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_CUSTOMER_GROUP_PERCENTAGE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_CUSTOMER_GROUP_USE_PERCENTAGE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_CUSTOMER_GROUP_USE_PERCENTAGE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CUSTOMER_GROUP_ID, string CUSTOMER_GROUP_NAME, string CUSTOMER_GROUP_DESC, System.Nullable<decimal> CUSTOMER_GROUP_PERCENTAGE, System.Nullable<bool> CUSTOMER_GROUP_USE_PERCENTAGE, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((CUSTOMER_GROUP_ID == null)) {
                throw new System.ArgumentNullException("CUSTOMER_GROUP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CUSTOMER_GROUP_ID));
            }
            if ((CUSTOMER_GROUP_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUSTOMER_GROUP_NAME));
            }
            if ((CUSTOMER_GROUP_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CUSTOMER_GROUP_DESC));
            }
            if ((CUSTOMER_GROUP_PERCENTAGE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(CUSTOMER_GROUP_PERCENTAGE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((CUSTOMER_GROUP_USE_PERCENTAGE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(CUSTOMER_GROUP_USE_PERCENTAGE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CUSTOMER_GROUP_ID, string CUSTOMER_GROUP_NAME, string CUSTOMER_GROUP_DESC, System.Nullable<decimal> CUSTOMER_GROUP_PERCENTAGE, System.Nullable<bool> CUSTOMER_GROUP_USE_PERCENTAGE, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_CUSTOMER_GROUP_ID, string Original_CUSTOMER_GROUP_NAME, System.Nullable<decimal> Original_CUSTOMER_GROUP_PERCENTAGE, System.Nullable<bool> Original_CUSTOMER_GROUP_USE_PERCENTAGE, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((CUSTOMER_GROUP_ID == null)) {
                throw new System.ArgumentNullException("CUSTOMER_GROUP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CUSTOMER_GROUP_ID));
            }
            if ((CUSTOMER_GROUP_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUSTOMER_GROUP_NAME));
            }
            if ((CUSTOMER_GROUP_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CUSTOMER_GROUP_DESC));
            }
            if ((CUSTOMER_GROUP_PERCENTAGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(CUSTOMER_GROUP_PERCENTAGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((CUSTOMER_GROUP_USE_PERCENTAGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(CUSTOMER_GROUP_USE_PERCENTAGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_CUSTOMER_GROUP_ID == null)) {
                throw new System.ArgumentNullException("Original_CUSTOMER_GROUP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_CUSTOMER_GROUP_ID));
            }
            if ((Original_CUSTOMER_GROUP_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_CUSTOMER_GROUP_NAME));
            }
            if ((Original_CUSTOMER_GROUP_PERCENTAGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_CUSTOMER_GROUP_PERCENTAGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_CUSTOMER_GROUP_USE_PERCENTAGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Original_CUSTOMER_GROUP_USE_PERCENTAGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_DEPTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_DEPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_DEP";
            tableMapping.ColumnMappings.Add("DEP_ID", "DEP_ID");
            tableMapping.ColumnMappings.Add("DEP_NAME", "DEP_NAME");
            tableMapping.ColumnMappings.Add("DEP_STATUS", "DEP_STATUS");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_DEP] WHERE (([DEP_ID] = @Original_DEP_ID) AND ((@IsNull_DEP_NAME = 1 AND [DEP_NAME] IS NULL) OR ([DEP_NAME] = @Original_DEP_NAME)) AND ((@IsNull_DEP_STATUS = 1 AND [DEP_STATUS] IS NULL) OR ([DEP_STATUS] = @Original_DEP_STATUS)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEP_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEP_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEP_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_DEP] ([DEP_ID], [DEP_NAME], [DEP_STATUS], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@DEP_ID, @DEP_NAME, @DEP_STATUS, @MODIFIED_BY, @MODIFIED_DATE);
SELECT DEP_ID, DEP_NAME, DEP_STATUS, MODIFIED_BY, MODIFIED_DATE FROM M_DEP WHERE (DEP_ID = @DEP_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEP_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_DEP] SET [DEP_ID] = @DEP_ID, [DEP_NAME] = @DEP_NAME, [DEP_STATUS] = @DEP_STATUS, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([DEP_ID] = @Original_DEP_ID) AND ((@IsNull_DEP_NAME = 1 AND [DEP_NAME] IS NULL) OR ([DEP_NAME] = @Original_DEP_NAME)) AND ((@IsNull_DEP_STATUS = 1 AND [DEP_STATUS] IS NULL) OR ([DEP_STATUS] = @Original_DEP_STATUS)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT DEP_ID, DEP_NAME, DEP_STATUS, MODIFIED_BY, MODIFIED_DATE FROM M_DEP WHERE (DEP_ID = @DEP_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEP_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEP_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEP_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEP_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DEP_ID, DEP_NAME, DEP_STATUS, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_DEP";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_DEPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_DEPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_DEPDataTable dataTable = new DataSet1.M_DEPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_DEPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_DEP");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_DEP_ID, string Original_DEP_NAME, string Original_DEP_STATUS, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_DEP_ID == null)) {
                throw new System.ArgumentNullException("Original_DEP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_DEP_ID));
            }
            if ((Original_DEP_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DEP_NAME));
            }
            if ((Original_DEP_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DEP_STATUS));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DEP_ID, string DEP_NAME, string DEP_STATUS, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((DEP_ID == null)) {
                throw new System.ArgumentNullException("DEP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DEP_ID));
            }
            if ((DEP_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DEP_NAME));
            }
            if ((DEP_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DEP_STATUS));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DEP_ID, string DEP_NAME, string DEP_STATUS, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_DEP_ID, string Original_DEP_NAME, string Original_DEP_STATUS, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((DEP_ID == null)) {
                throw new System.ArgumentNullException("DEP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DEP_ID));
            }
            if ((DEP_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DEP_NAME));
            }
            if ((DEP_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DEP_STATUS));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_DEP_ID == null)) {
                throw new System.ArgumentNullException("Original_DEP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_DEP_ID));
            }
            if ((Original_DEP_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_DEP_NAME));
            }
            if ((Original_DEP_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DEP_STATUS));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_DESKTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_DESKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_DESK";
            tableMapping.ColumnMappings.Add("DESK_ID", "DESK_ID");
            tableMapping.ColumnMappings.Add("DESK_STATUS", "DESK_STATUS");
            tableMapping.ColumnMappings.Add("DESK_DESC", "DESK_DESC");
            tableMapping.ColumnMappings.Add("DESK_ORDER", "DESK_ORDER");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_DESK] WHERE (([DESK_ID] = @Original_DESK_ID) AND ((@IsNull_DESK_STATUS = 1 AND [DESK_STATUS] IS NULL) OR ([DESK_STATUS] = @Original_DESK_STATUS)) AND ((@IsNull_DESK_ORDER = 1 AND [DESK_ORDER] IS NULL) OR ([DESK_ORDER] = @Original_DESK_ORDER)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_ORDER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ORDER", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_ORDER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ORDER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_DESK] ([DESK_ID], [DESK_STATUS], [DESK_DESC], [DESK_ORDER], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@DESK_ID, @DESK_STATUS, @DESK_DESC, @DESK_ORDER, @MODIFIED_BY, @MODIFIED_DATE);
SELECT DESK_ID, DESK_STATUS, DESK_DESC, DESK_ORDER, MODIFIED_BY, MODIFIED_DATE FROM M_DESK WHERE (DESK_ID = @DESK_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_DESC", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_ORDER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ORDER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_DESK] SET [DESK_ID] = @DESK_ID, [DESK_STATUS] = @DESK_STATUS, [DESK_DESC] = @DESK_DESC, [DESK_ORDER] = @DESK_ORDER, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([DESK_ID] = @Original_DESK_ID) AND ((@IsNull_DESK_STATUS = 1 AND [DESK_STATUS] IS NULL) OR ([DESK_STATUS] = @Original_DESK_STATUS)) AND ((@IsNull_DESK_ORDER = 1 AND [DESK_ORDER] IS NULL) OR ([DESK_ORDER] = @Original_DESK_ORDER)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT DESK_ID, DESK_STATUS, DESK_DESC, DESK_ORDER, MODIFIED_BY, MODIFIED_DATE FROM M_DESK WHERE (DESK_ID = @DESK_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_DESC", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_ORDER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ORDER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_ORDER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ORDER", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_ORDER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ORDER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DESK_ID, DESK_STATUS, DESK_DESC, DESK_ORDER, MODIFIED_BY, MODIFIED_DATE FR" +
                "OM dbo.M_DESK";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_DESKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_DESKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_DESKDataTable dataTable = new DataSet1.M_DESKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_DESKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_DESK");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_DESK_ID, string Original_DESK_STATUS, System.Nullable<int> Original_DESK_ORDER, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_DESK_ID == null)) {
                throw new System.ArgumentNullException("Original_DESK_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_DESK_ID));
            }
            if ((Original_DESK_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DESK_STATUS));
            }
            if ((Original_DESK_ORDER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_DESK_ORDER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DESK_ID, string DESK_STATUS, string DESK_DESC, System.Nullable<int> DESK_ORDER, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((DESK_ID == null)) {
                throw new System.ArgumentNullException("DESK_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DESK_ID));
            }
            if ((DESK_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DESK_STATUS));
            }
            if ((DESK_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DESK_DESC));
            }
            if ((DESK_ORDER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(DESK_ORDER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DESK_ID, string DESK_STATUS, string DESK_DESC, System.Nullable<int> DESK_ORDER, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_DESK_ID, string Original_DESK_STATUS, System.Nullable<int> Original_DESK_ORDER, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((DESK_ID == null)) {
                throw new System.ArgumentNullException("DESK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DESK_ID));
            }
            if ((DESK_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DESK_STATUS));
            }
            if ((DESK_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DESK_DESC));
            }
            if ((DESK_ORDER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(DESK_ORDER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_DESK_ID == null)) {
                throw new System.ArgumentNullException("Original_DESK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_DESK_ID));
            }
            if ((Original_DESK_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_DESK_STATUS));
            }
            if ((Original_DESK_ORDER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_DESK_ORDER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_DISCOUNTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_DISCOUNTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_DISCOUNT";
            tableMapping.ColumnMappings.Add("DISC_ID", "DISC_ID");
            tableMapping.ColumnMappings.Add("DISC", "DISC");
            tableMapping.ColumnMappings.Add("DISC_DAY", "DISC_DAY");
            tableMapping.ColumnMappings.Add("DISC_TIME_HOUR_FROM", "DISC_TIME_HOUR_FROM");
            tableMapping.ColumnMappings.Add("DISC_TIME_MIN_FROM", "DISC_TIME_MIN_FROM");
            tableMapping.ColumnMappings.Add("DISC_TIME_HOUR_TO", "DISC_TIME_HOUR_TO");
            tableMapping.ColumnMappings.Add("DISC_TIME_MIN_TO", "DISC_TIME_MIN_TO");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_DISCOUNT] WHERE (([DISC_ID] = @Original_DISC_ID) AND ((@IsNull_DISC = 1 AND [DISC] IS NULL) OR ([DISC] = @Original_DISC)) AND ((@IsNull_DISC_DAY = 1 AND [DISC_DAY] IS NULL) OR ([DISC_DAY] = @Original_DISC_DAY)) AND ((@IsNull_DISC_TIME_HOUR_FROM = 1 AND [DISC_TIME_HOUR_FROM] IS NULL) OR ([DISC_TIME_HOUR_FROM] = @Original_DISC_TIME_HOUR_FROM)) AND ((@IsNull_DISC_TIME_MIN_FROM = 1 AND [DISC_TIME_MIN_FROM] IS NULL) OR ([DISC_TIME_MIN_FROM] = @Original_DISC_TIME_MIN_FROM)) AND ((@IsNull_DISC_TIME_HOUR_TO = 1 AND [DISC_TIME_HOUR_TO] IS NULL) OR ([DISC_TIME_HOUR_TO] = @Original_DISC_TIME_HOUR_TO)) AND ((@IsNull_DISC_TIME_MIN_TO = 1 AND [DISC_TIME_MIN_TO] IS NULL) OR ([DISC_TIME_MIN_TO] = @Original_DISC_TIME_MIN_TO)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DISC_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DISC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_DAY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_DAY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_DAY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_DAY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_TIME_HOUR_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_FROM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_TIME_HOUR_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_TIME_MIN_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_FROM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_TIME_MIN_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_TIME_HOUR_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_TIME_HOUR_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_TIME_MIN_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_TIME_MIN_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_DISCOUNT] ([DISC], [DISC_DAY], [DISC_TIME_HOUR_FROM], [DISC_TIME_MIN_FROM], [DISC_TIME_HOUR_TO], [DISC_TIME_MIN_TO], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@DISC, @DISC_DAY, @DISC_TIME_HOUR_FROM, @DISC_TIME_MIN_FROM, @DISC_TIME_HOUR_TO, @DISC_TIME_MIN_TO, @MODIFIED_BY, @MODIFIED_DATE);
SELECT DISC_ID, DISC, DISC_DAY, DISC_TIME_HOUR_FROM, DISC_TIME_MIN_FROM, DISC_TIME_HOUR_TO, DISC_TIME_MIN_TO, MODIFIED_BY, MODIFIED_DATE FROM M_DISCOUNT WHERE (DISC_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DISC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_DAY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_DAY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_TIME_HOUR_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_TIME_MIN_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_TIME_HOUR_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_TIME_MIN_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_DISCOUNT] SET [DISC] = @DISC, [DISC_DAY] = @DISC_DAY, [DISC_TIME_HOUR_FROM] = @DISC_TIME_HOUR_FROM, [DISC_TIME_MIN_FROM] = @DISC_TIME_MIN_FROM, [DISC_TIME_HOUR_TO] = @DISC_TIME_HOUR_TO, [DISC_TIME_MIN_TO] = @DISC_TIME_MIN_TO, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([DISC_ID] = @Original_DISC_ID) AND ((@IsNull_DISC = 1 AND [DISC] IS NULL) OR ([DISC] = @Original_DISC)) AND ((@IsNull_DISC_DAY = 1 AND [DISC_DAY] IS NULL) OR ([DISC_DAY] = @Original_DISC_DAY)) AND ((@IsNull_DISC_TIME_HOUR_FROM = 1 AND [DISC_TIME_HOUR_FROM] IS NULL) OR ([DISC_TIME_HOUR_FROM] = @Original_DISC_TIME_HOUR_FROM)) AND ((@IsNull_DISC_TIME_MIN_FROM = 1 AND [DISC_TIME_MIN_FROM] IS NULL) OR ([DISC_TIME_MIN_FROM] = @Original_DISC_TIME_MIN_FROM)) AND ((@IsNull_DISC_TIME_HOUR_TO = 1 AND [DISC_TIME_HOUR_TO] IS NULL) OR ([DISC_TIME_HOUR_TO] = @Original_DISC_TIME_HOUR_TO)) AND ((@IsNull_DISC_TIME_MIN_TO = 1 AND [DISC_TIME_MIN_TO] IS NULL) OR ([DISC_TIME_MIN_TO] = @Original_DISC_TIME_MIN_TO)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT DISC_ID, DISC, DISC_DAY, DISC_TIME_HOUR_FROM, DISC_TIME_MIN_FROM, DISC_TIME_HOUR_TO, DISC_TIME_MIN_TO, MODIFIED_BY, MODIFIED_DATE FROM M_DISCOUNT WHERE (DISC_ID = @DISC_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DISC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_DAY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_DAY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_TIME_HOUR_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_TIME_MIN_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_TIME_HOUR_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_TIME_MIN_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DISC_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DISC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_DAY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_DAY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_DAY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_DAY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_TIME_HOUR_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_FROM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_TIME_HOUR_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_TIME_MIN_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_FROM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_TIME_MIN_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_TIME_HOUR_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_TIME_HOUR_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_HOUR_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC_TIME_MIN_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC_TIME_MIN_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC_TIME_MIN_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "DISC_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISC_ID, DISC, DISC_DAY, DISC_TIME_HOUR_FROM, DISC_TIME_MIN_FROM, DISC_TIM" +
                "E_HOUR_TO, DISC_TIME_MIN_TO, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_DISCOUNT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_DISCOUNTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_DISCOUNTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_DISCOUNTDataTable dataTable = new DataSet1.M_DISCOUNTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_DISCOUNTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_DISCOUNT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_DISC_ID, System.Nullable<decimal> Original_DISC, string Original_DISC_DAY, System.Nullable<int> Original_DISC_TIME_HOUR_FROM, System.Nullable<int> Original_DISC_TIME_MIN_FROM, System.Nullable<int> Original_DISC_TIME_HOUR_TO, System.Nullable<int> Original_DISC_TIME_MIN_TO, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_DISC_ID));
            if ((Original_DISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_DISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_DISC_DAY == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DISC_DAY));
            }
            if ((Original_DISC_TIME_HOUR_FROM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_DISC_TIME_HOUR_FROM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_DISC_TIME_MIN_FROM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_DISC_TIME_MIN_FROM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_DISC_TIME_HOUR_TO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_DISC_TIME_HOUR_TO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_DISC_TIME_MIN_TO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_DISC_TIME_MIN_TO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<decimal> DISC, string DISC_DAY, System.Nullable<int> DISC_TIME_HOUR_FROM, System.Nullable<int> DISC_TIME_MIN_FROM, System.Nullable<int> DISC_TIME_HOUR_TO, System.Nullable<int> DISC_TIME_MIN_TO, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((DISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(DISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((DISC_DAY == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DISC_DAY));
            }
            if ((DISC_TIME_HOUR_FROM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(DISC_TIME_HOUR_FROM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DISC_TIME_MIN_FROM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(DISC_TIME_MIN_FROM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DISC_TIME_HOUR_TO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(DISC_TIME_HOUR_TO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((DISC_TIME_MIN_TO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(DISC_TIME_MIN_TO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<decimal> DISC, 
                    string DISC_DAY, 
                    System.Nullable<int> DISC_TIME_HOUR_FROM, 
                    System.Nullable<int> DISC_TIME_MIN_FROM, 
                    System.Nullable<int> DISC_TIME_HOUR_TO, 
                    System.Nullable<int> DISC_TIME_MIN_TO, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_DISC_ID, 
                    System.Nullable<decimal> Original_DISC, 
                    string Original_DISC_DAY, 
                    System.Nullable<int> Original_DISC_TIME_HOUR_FROM, 
                    System.Nullable<int> Original_DISC_TIME_MIN_FROM, 
                    System.Nullable<int> Original_DISC_TIME_HOUR_TO, 
                    System.Nullable<int> Original_DISC_TIME_MIN_TO, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal DISC_ID) {
            if ((DISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(DISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((DISC_DAY == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DISC_DAY));
            }
            if ((DISC_TIME_HOUR_FROM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(DISC_TIME_HOUR_FROM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DISC_TIME_MIN_FROM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(DISC_TIME_MIN_FROM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DISC_TIME_HOUR_TO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(DISC_TIME_HOUR_TO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((DISC_TIME_MIN_TO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(DISC_TIME_MIN_TO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_DISC_ID));
            if ((Original_DISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_DISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_DISC_DAY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DISC_DAY));
            }
            if ((Original_DISC_TIME_HOUR_FROM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_DISC_TIME_HOUR_FROM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_DISC_TIME_MIN_FROM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_DISC_TIME_MIN_FROM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_DISC_TIME_HOUR_TO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_DISC_TIME_HOUR_TO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_DISC_TIME_MIN_TO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_DISC_TIME_MIN_TO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(DISC_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_EMPLOYEETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_EMPLOYEETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_EMPLOYEE";
            tableMapping.ColumnMappings.Add("EMPLOYEE_ID", "EMPLOYEE_ID");
            tableMapping.ColumnMappings.Add("EMPLOYEE_NAME", "EMPLOYEE_NAME");
            tableMapping.ColumnMappings.Add("DEP_ID", "DEP_ID");
            tableMapping.ColumnMappings.Add("EMPLOYEE_GENDER", "EMPLOYEE_GENDER");
            tableMapping.ColumnMappings.Add("EMPLOYEE_ID_CARD", "EMPLOYEE_ID_CARD");
            tableMapping.ColumnMappings.Add("EMPLOYEE_ADDRESS", "EMPLOYEE_ADDRESS");
            tableMapping.ColumnMappings.Add("EMPLOYEE_PHONE", "EMPLOYEE_PHONE");
            tableMapping.ColumnMappings.Add("EMPLOYEE_BIRTH_PLACE", "EMPLOYEE_BIRTH_PLACE");
            tableMapping.ColumnMappings.Add("EMPLOYEE_BIRTH_DATE", "EMPLOYEE_BIRTH_DATE");
            tableMapping.ColumnMappings.Add("EMPLOYEE_MARITAL_STATUS", "EMPLOYEE_MARITAL_STATUS");
            tableMapping.ColumnMappings.Add("EMPLOYEE_START_WORK", "EMPLOYEE_START_WORK");
            tableMapping.ColumnMappings.Add("EMPLOYEE_STATUS", "EMPLOYEE_STATUS");
            tableMapping.ColumnMappings.Add("EMPLOYEE_DESC", "EMPLOYEE_DESC");
            tableMapping.ColumnMappings.Add("EMPLOYEE_DESC2", "EMPLOYEE_DESC2");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[M_EMPLOYEE] WHERE (([EMPLOYEE_ID] = @Original_EMPLOYEE_ID) AND" +
                " ((@IsNull_EMPLOYEE_NAME = 1 AND [EMPLOYEE_NAME] IS NULL) OR ([EMPLOYEE_NAME] = " +
                "@Original_EMPLOYEE_NAME)) AND ((@IsNull_DEP_ID = 1 AND [DEP_ID] IS NULL) OR ([DE" +
                "P_ID] = @Original_DEP_ID)) AND ((@IsNull_EMPLOYEE_GENDER = 1 AND [EMPLOYEE_GENDE" +
                "R] IS NULL) OR ([EMPLOYEE_GENDER] = @Original_EMPLOYEE_GENDER)) AND ((@IsNull_EM" +
                "PLOYEE_ID_CARD = 1 AND [EMPLOYEE_ID_CARD] IS NULL) OR ([EMPLOYEE_ID_CARD] = @Ori" +
                "ginal_EMPLOYEE_ID_CARD)) AND ((@IsNull_EMPLOYEE_ADDRESS = 1 AND [EMPLOYEE_ADDRES" +
                "S] IS NULL) OR ([EMPLOYEE_ADDRESS] = @Original_EMPLOYEE_ADDRESS)) AND ((@IsNull_" +
                "EMPLOYEE_PHONE = 1 AND [EMPLOYEE_PHONE] IS NULL) OR ([EMPLOYEE_PHONE] = @Origina" +
                "l_EMPLOYEE_PHONE)) AND ((@IsNull_EMPLOYEE_BIRTH_PLACE = 1 AND [EMPLOYEE_BIRTH_PL" +
                "ACE] IS NULL) OR ([EMPLOYEE_BIRTH_PLACE] = @Original_EMPLOYEE_BIRTH_PLACE)) AND " +
                "((@IsNull_EMPLOYEE_BIRTH_DATE = 1 AND [EMPLOYEE_BIRTH_DATE] IS NULL) OR ([EMPLOY" +
                "EE_BIRTH_DATE] = @Original_EMPLOYEE_BIRTH_DATE)) AND ((@IsNull_EMPLOYEE_MARITAL_" +
                "STATUS = 1 AND [EMPLOYEE_MARITAL_STATUS] IS NULL) OR ([EMPLOYEE_MARITAL_STATUS] " +
                "= @Original_EMPLOYEE_MARITAL_STATUS)) AND ((@IsNull_EMPLOYEE_START_WORK = 1 AND " +
                "[EMPLOYEE_START_WORK] IS NULL) OR ([EMPLOYEE_START_WORK] = @Original_EMPLOYEE_ST" +
                "ART_WORK)) AND ((@IsNull_EMPLOYEE_STATUS = 1 AND [EMPLOYEE_STATUS] IS NULL) OR (" +
                "[EMPLOYEE_STATUS] = @Original_EMPLOYEE_STATUS)) AND ((@IsNull_EMPLOYEE_DESC = 1 " +
                "AND [EMPLOYEE_DESC] IS NULL) OR ([EMPLOYEE_DESC] = @Original_EMPLOYEE_DESC)) AND" +
                " ((@IsNull_EMPLOYEE_DESC2 = 1 AND [EMPLOYEE_DESC2] IS NULL) OR ([EMPLOYEE_DESC2]" +
                " = @Original_EMPLOYEE_DESC2)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS" +
                " NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE =" +
                " 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))" +
                "";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_GENDER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_GENDER", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_GENDER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_GENDER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ID_CARD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID_CARD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID_CARD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID_CARD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_BIRTH_PLACE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_PLACE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_BIRTH_PLACE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_PLACE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_BIRTH_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_BIRTH_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_MARITAL_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_MARITAL_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_MARITAL_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_MARITAL_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_START_WORK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_START_WORK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_START_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_START_WORK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_DESC2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_DESC2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_EMPLOYEE] ([EMPLOYEE_ID], [EMPLOYEE_NAME], [DEP_ID], [EMPLOYEE_GENDER], [EMPLOYEE_ID_CARD], [EMPLOYEE_ADDRESS], [EMPLOYEE_PHONE], [EMPLOYEE_BIRTH_PLACE], [EMPLOYEE_BIRTH_DATE], [EMPLOYEE_MARITAL_STATUS], [EMPLOYEE_START_WORK], [EMPLOYEE_STATUS], [EMPLOYEE_DESC], [EMPLOYEE_DESC2], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@EMPLOYEE_ID, @EMPLOYEE_NAME, @DEP_ID, @EMPLOYEE_GENDER, @EMPLOYEE_ID_CARD, @EMPLOYEE_ADDRESS, @EMPLOYEE_PHONE, @EMPLOYEE_BIRTH_PLACE, @EMPLOYEE_BIRTH_DATE, @EMPLOYEE_MARITAL_STATUS, @EMPLOYEE_START_WORK, @EMPLOYEE_STATUS, @EMPLOYEE_DESC, @EMPLOYEE_DESC2, @MODIFIED_BY, @MODIFIED_DATE);
SELECT EMPLOYEE_ID, EMPLOYEE_NAME, DEP_ID, EMPLOYEE_GENDER, EMPLOYEE_ID_CARD, EMPLOYEE_ADDRESS, EMPLOYEE_PHONE, EMPLOYEE_BIRTH_PLACE, EMPLOYEE_BIRTH_DATE, EMPLOYEE_MARITAL_STATUS, EMPLOYEE_START_WORK, EMPLOYEE_STATUS, EMPLOYEE_DESC, EMPLOYEE_DESC2, MODIFIED_BY, MODIFIED_DATE FROM M_EMPLOYEE WHERE (EMPLOYEE_ID = @EMPLOYEE_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_GENDER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_GENDER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID_CARD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID_CARD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_BIRTH_PLACE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_PLACE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_BIRTH_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_MARITAL_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_MARITAL_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_START_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_START_WORK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_DESC2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[M_EMPLOYEE] SET [EMPLOYEE_ID] = @EMPLOYEE_ID, [EMPLOYEE_NAME] = @EM" +
                "PLOYEE_NAME, [DEP_ID] = @DEP_ID, [EMPLOYEE_GENDER] = @EMPLOYEE_GENDER, [EMPLOYEE" +
                "_ID_CARD] = @EMPLOYEE_ID_CARD, [EMPLOYEE_ADDRESS] = @EMPLOYEE_ADDRESS, [EMPLOYEE" +
                "_PHONE] = @EMPLOYEE_PHONE, [EMPLOYEE_BIRTH_PLACE] = @EMPLOYEE_BIRTH_PLACE, [EMPL" +
                "OYEE_BIRTH_DATE] = @EMPLOYEE_BIRTH_DATE, [EMPLOYEE_MARITAL_STATUS] = @EMPLOYEE_M" +
                "ARITAL_STATUS, [EMPLOYEE_START_WORK] = @EMPLOYEE_START_WORK, [EMPLOYEE_STATUS] =" +
                " @EMPLOYEE_STATUS, [EMPLOYEE_DESC] = @EMPLOYEE_DESC, [EMPLOYEE_DESC2] = @EMPLOYE" +
                "E_DESC2, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE ((" +
                "[EMPLOYEE_ID] = @Original_EMPLOYEE_ID) AND ((@IsNull_EMPLOYEE_NAME = 1 AND [EMPL" +
                "OYEE_NAME] IS NULL) OR ([EMPLOYEE_NAME] = @Original_EMPLOYEE_NAME)) AND ((@IsNul" +
                "l_DEP_ID = 1 AND [DEP_ID] IS NULL) OR ([DEP_ID] = @Original_DEP_ID)) AND ((@IsNu" +
                "ll_EMPLOYEE_GENDER = 1 AND [EMPLOYEE_GENDER] IS NULL) OR ([EMPLOYEE_GENDER] = @O" +
                "riginal_EMPLOYEE_GENDER)) AND ((@IsNull_EMPLOYEE_ID_CARD = 1 AND [EMPLOYEE_ID_CA" +
                "RD] IS NULL) OR ([EMPLOYEE_ID_CARD] = @Original_EMPLOYEE_ID_CARD)) AND ((@IsNull" +
                "_EMPLOYEE_ADDRESS = 1 AND [EMPLOYEE_ADDRESS] IS NULL) OR ([EMPLOYEE_ADDRESS] = @" +
                "Original_EMPLOYEE_ADDRESS)) AND ((@IsNull_EMPLOYEE_PHONE = 1 AND [EMPLOYEE_PHONE" +
                "] IS NULL) OR ([EMPLOYEE_PHONE] = @Original_EMPLOYEE_PHONE)) AND ((@IsNull_EMPLO" +
                "YEE_BIRTH_PLACE = 1 AND [EMPLOYEE_BIRTH_PLACE] IS NULL) OR ([EMPLOYEE_BIRTH_PLAC" +
                "E] = @Original_EMPLOYEE_BIRTH_PLACE)) AND ((@IsNull_EMPLOYEE_BIRTH_DATE = 1 AND " +
                "[EMPLOYEE_BIRTH_DATE] IS NULL) OR ([EMPLOYEE_BIRTH_DATE] = @Original_EMPLOYEE_BI" +
                "RTH_DATE)) AND ((@IsNull_EMPLOYEE_MARITAL_STATUS = 1 AND [EMPLOYEE_MARITAL_STATU" +
                "S] IS NULL) OR ([EMPLOYEE_MARITAL_STATUS] = @Original_EMPLOYEE_MARITAL_STATUS)) " +
                "AND ((@IsNull_EMPLOYEE_START_WORK = 1 AND [EMPLOYEE_START_WORK] IS NULL) OR ([EM" +
                "PLOYEE_START_WORK] = @Original_EMPLOYEE_START_WORK)) AND ((@IsNull_EMPLOYEE_STAT" +
                "US = 1 AND [EMPLOYEE_STATUS] IS NULL) OR ([EMPLOYEE_STATUS] = @Original_EMPLOYEE" +
                "_STATUS)) AND ((@IsNull_EMPLOYEE_DESC = 1 AND [EMPLOYEE_DESC] IS NULL) OR ([EMPL" +
                "OYEE_DESC] = @Original_EMPLOYEE_DESC)) AND ((@IsNull_EMPLOYEE_DESC2 = 1 AND [EMP" +
                "LOYEE_DESC2] IS NULL) OR ([EMPLOYEE_DESC2] = @Original_EMPLOYEE_DESC2)) AND ((@I" +
                "sNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_M" +
                "ODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([M" +
                "ODIFIED_DATE] = @Original_MODIFIED_DATE)));\r\nSELECT EMPLOYEE_ID, EMPLOYEE_NAME, " +
                "DEP_ID, EMPLOYEE_GENDER, EMPLOYEE_ID_CARD, EMPLOYEE_ADDRESS, EMPLOYEE_PHONE, EMP" +
                "LOYEE_BIRTH_PLACE, EMPLOYEE_BIRTH_DATE, EMPLOYEE_MARITAL_STATUS, EMPLOYEE_START_" +
                "WORK, EMPLOYEE_STATUS, EMPLOYEE_DESC, EMPLOYEE_DESC2, MODIFIED_BY, MODIFIED_DATE" +
                " FROM M_EMPLOYEE WHERE (EMPLOYEE_ID = @EMPLOYEE_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_GENDER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_GENDER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID_CARD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID_CARD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_BIRTH_PLACE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_PLACE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_BIRTH_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_MARITAL_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_MARITAL_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_START_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_START_WORK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_DESC2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEP_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_GENDER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_GENDER", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_GENDER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_GENDER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ID_CARD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID_CARD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID_CARD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID_CARD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_BIRTH_PLACE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_PLACE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_BIRTH_PLACE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_PLACE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_BIRTH_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_BIRTH_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_BIRTH_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_MARITAL_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_MARITAL_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_MARITAL_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_MARITAL_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_START_WORK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_START_WORK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_START_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_START_WORK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_DESC2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_DESC2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_DESC2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT EMPLOYEE_ID, EMPLOYEE_NAME, DEP_ID, EMPLOYEE_GENDER, EMPLOYEE_ID_CARD, EMPLOYEE_ADDRESS, EMPLOYEE_PHONE, EMPLOYEE_BIRTH_PLACE, EMPLOYEE_BIRTH_DATE, EMPLOYEE_MARITAL_STATUS, EMPLOYEE_START_WORK, EMPLOYEE_STATUS, EMPLOYEE_DESC, EMPLOYEE_DESC2, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_EMPLOYEE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_EMPLOYEEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_EMPLOYEEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_EMPLOYEEDataTable dataTable = new DataSet1.M_EMPLOYEEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_EMPLOYEEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_EMPLOYEE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_EMPLOYEE_ID, 
                    string Original_EMPLOYEE_NAME, 
                    string Original_DEP_ID, 
                    string Original_EMPLOYEE_GENDER, 
                    string Original_EMPLOYEE_ID_CARD, 
                    string Original_EMPLOYEE_ADDRESS, 
                    string Original_EMPLOYEE_PHONE, 
                    string Original_EMPLOYEE_BIRTH_PLACE, 
                    System.Nullable<System.DateTime> Original_EMPLOYEE_BIRTH_DATE, 
                    string Original_EMPLOYEE_MARITAL_STATUS, 
                    System.Nullable<System.DateTime> Original_EMPLOYEE_START_WORK, 
                    string Original_EMPLOYEE_STATUS, 
                    string Original_EMPLOYEE_DESC, 
                    string Original_EMPLOYEE_DESC2, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_EMPLOYEE_ID == null)) {
                throw new System.ArgumentNullException("Original_EMPLOYEE_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_EMPLOYEE_ID));
            }
            if ((Original_EMPLOYEE_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EMPLOYEE_NAME));
            }
            if ((Original_DEP_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DEP_ID));
            }
            if ((Original_EMPLOYEE_GENDER == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_EMPLOYEE_GENDER));
            }
            if ((Original_EMPLOYEE_ID_CARD == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_EMPLOYEE_ID_CARD));
            }
            if ((Original_EMPLOYEE_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_EMPLOYEE_ADDRESS));
            }
            if ((Original_EMPLOYEE_PHONE == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_EMPLOYEE_PHONE));
            }
            if ((Original_EMPLOYEE_BIRTH_PLACE == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_EMPLOYEE_BIRTH_PLACE));
            }
            if ((Original_EMPLOYEE_BIRTH_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_EMPLOYEE_BIRTH_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_MARITAL_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_EMPLOYEE_MARITAL_STATUS));
            }
            if ((Original_EMPLOYEE_START_WORK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_EMPLOYEE_START_WORK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_EMPLOYEE_STATUS));
            }
            if ((Original_EMPLOYEE_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_EMPLOYEE_DESC));
            }
            if ((Original_EMPLOYEE_DESC2 == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_EMPLOYEE_DESC2));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string EMPLOYEE_ID, 
                    string EMPLOYEE_NAME, 
                    string DEP_ID, 
                    string EMPLOYEE_GENDER, 
                    string EMPLOYEE_ID_CARD, 
                    string EMPLOYEE_ADDRESS, 
                    string EMPLOYEE_PHONE, 
                    string EMPLOYEE_BIRTH_PLACE, 
                    System.Nullable<System.DateTime> EMPLOYEE_BIRTH_DATE, 
                    string EMPLOYEE_MARITAL_STATUS, 
                    System.Nullable<System.DateTime> EMPLOYEE_START_WORK, 
                    string EMPLOYEE_STATUS, 
                    string EMPLOYEE_DESC, 
                    string EMPLOYEE_DESC2, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((EMPLOYEE_ID == null)) {
                throw new System.ArgumentNullException("EMPLOYEE_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMPLOYEE_ID));
            }
            if ((EMPLOYEE_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMPLOYEE_NAME));
            }
            if ((DEP_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DEP_ID));
            }
            if ((EMPLOYEE_GENDER == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(EMPLOYEE_GENDER));
            }
            if ((EMPLOYEE_ID_CARD == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EMPLOYEE_ID_CARD));
            }
            if ((EMPLOYEE_ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(EMPLOYEE_ADDRESS));
            }
            if ((EMPLOYEE_PHONE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(EMPLOYEE_PHONE));
            }
            if ((EMPLOYEE_BIRTH_PLACE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(EMPLOYEE_BIRTH_PLACE));
            }
            if ((EMPLOYEE_BIRTH_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(EMPLOYEE_BIRTH_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((EMPLOYEE_MARITAL_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(EMPLOYEE_MARITAL_STATUS));
            }
            if ((EMPLOYEE_START_WORK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(EMPLOYEE_START_WORK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((EMPLOYEE_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(EMPLOYEE_STATUS));
            }
            if ((EMPLOYEE_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(EMPLOYEE_DESC));
            }
            if ((EMPLOYEE_DESC2 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(EMPLOYEE_DESC2));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string EMPLOYEE_ID, 
                    string EMPLOYEE_NAME, 
                    string DEP_ID, 
                    string EMPLOYEE_GENDER, 
                    string EMPLOYEE_ID_CARD, 
                    string EMPLOYEE_ADDRESS, 
                    string EMPLOYEE_PHONE, 
                    string EMPLOYEE_BIRTH_PLACE, 
                    System.Nullable<System.DateTime> EMPLOYEE_BIRTH_DATE, 
                    string EMPLOYEE_MARITAL_STATUS, 
                    System.Nullable<System.DateTime> EMPLOYEE_START_WORK, 
                    string EMPLOYEE_STATUS, 
                    string EMPLOYEE_DESC, 
                    string EMPLOYEE_DESC2, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_EMPLOYEE_ID, 
                    string Original_EMPLOYEE_NAME, 
                    string Original_DEP_ID, 
                    string Original_EMPLOYEE_GENDER, 
                    string Original_EMPLOYEE_ID_CARD, 
                    string Original_EMPLOYEE_ADDRESS, 
                    string Original_EMPLOYEE_PHONE, 
                    string Original_EMPLOYEE_BIRTH_PLACE, 
                    System.Nullable<System.DateTime> Original_EMPLOYEE_BIRTH_DATE, 
                    string Original_EMPLOYEE_MARITAL_STATUS, 
                    System.Nullable<System.DateTime> Original_EMPLOYEE_START_WORK, 
                    string Original_EMPLOYEE_STATUS, 
                    string Original_EMPLOYEE_DESC, 
                    string Original_EMPLOYEE_DESC2, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((EMPLOYEE_ID == null)) {
                throw new System.ArgumentNullException("EMPLOYEE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMPLOYEE_ID));
            }
            if ((EMPLOYEE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMPLOYEE_NAME));
            }
            if ((DEP_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DEP_ID));
            }
            if ((EMPLOYEE_GENDER == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(EMPLOYEE_GENDER));
            }
            if ((EMPLOYEE_ID_CARD == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(EMPLOYEE_ID_CARD));
            }
            if ((EMPLOYEE_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(EMPLOYEE_ADDRESS));
            }
            if ((EMPLOYEE_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(EMPLOYEE_PHONE));
            }
            if ((EMPLOYEE_BIRTH_PLACE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(EMPLOYEE_BIRTH_PLACE));
            }
            if ((EMPLOYEE_BIRTH_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(EMPLOYEE_BIRTH_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((EMPLOYEE_MARITAL_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(EMPLOYEE_MARITAL_STATUS));
            }
            if ((EMPLOYEE_START_WORK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(EMPLOYEE_START_WORK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((EMPLOYEE_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(EMPLOYEE_STATUS));
            }
            if ((EMPLOYEE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(EMPLOYEE_DESC));
            }
            if ((EMPLOYEE_DESC2 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(EMPLOYEE_DESC2));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_ID == null)) {
                throw new System.ArgumentNullException("Original_EMPLOYEE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_EMPLOYEE_ID));
            }
            if ((Original_EMPLOYEE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_EMPLOYEE_NAME));
            }
            if ((Original_DEP_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_DEP_ID));
            }
            if ((Original_EMPLOYEE_GENDER == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_EMPLOYEE_GENDER));
            }
            if ((Original_EMPLOYEE_ID_CARD == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_EMPLOYEE_ID_CARD));
            }
            if ((Original_EMPLOYEE_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_EMPLOYEE_ADDRESS));
            }
            if ((Original_EMPLOYEE_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_EMPLOYEE_PHONE));
            }
            if ((Original_EMPLOYEE_BIRTH_PLACE == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_EMPLOYEE_BIRTH_PLACE));
            }
            if ((Original_EMPLOYEE_BIRTH_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_EMPLOYEE_BIRTH_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_MARITAL_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_EMPLOYEE_MARITAL_STATUS));
            }
            if ((Original_EMPLOYEE_START_WORK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_EMPLOYEE_START_WORK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_EMPLOYEE_STATUS));
            }
            if ((Original_EMPLOYEE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_EMPLOYEE_DESC));
            }
            if ((Original_EMPLOYEE_DESC2 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_EMPLOYEE_DESC2));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_GROUPTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_GROUPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_GROUP";
            tableMapping.ColumnMappings.Add("GROUP_ID", "GROUP_ID");
            tableMapping.ColumnMappings.Add("GROUP_NAME", "GROUP_NAME");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_GROUP] WHERE (([GROUP_ID] = @Original_GROUP_ID) AND ((@IsNull_GROUP_NAME = 1 AND [GROUP_NAME] IS NULL) OR ([GROUP_NAME] = @Original_GROUP_NAME)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GROUP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GROUP_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[M_GROUP] ([GROUP_NAME], [MODIFIED_BY], [MODIFIED_DATE]) VALUES" +
                " (@GROUP_NAME, @MODIFIED_BY, @MODIFIED_DATE);\r\nSELECT GROUP_ID, GROUP_NAME, MODI" +
                "FIED_BY, MODIFIED_DATE FROM M_GROUP WHERE (GROUP_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_GROUP] SET [GROUP_NAME] = @GROUP_NAME, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([GROUP_ID] = @Original_GROUP_ID) AND ((@IsNull_GROUP_NAME = 1 AND [GROUP_NAME] IS NULL) OR ([GROUP_NAME] = @Original_GROUP_NAME)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT GROUP_ID, GROUP_NAME, MODIFIED_BY, MODIFIED_DATE FROM M_GROUP WHERE (GROUP_ID = @GROUP_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GROUP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GROUP_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GROUP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GROUP_ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GROUP_ID, GROUP_NAME, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_GROUP";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_GROUPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_GROUPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_GROUPDataTable dataTable = new DataSet1.M_GROUPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_GROUPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_GROUP");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_GROUP_ID, string Original_GROUP_NAME, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_GROUP_ID));
            if ((Original_GROUP_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_GROUP_NAME));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string GROUP_NAME, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((GROUP_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(GROUP_NAME));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string GROUP_NAME, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, int Original_GROUP_ID, string Original_GROUP_NAME, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE, int GROUP_ID) {
            if ((GROUP_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(GROUP_NAME));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_GROUP_ID));
            if ((Original_GROUP_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_GROUP_NAME));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(GROUP_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_GUDANGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_GUDANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_GUDANG";
            tableMapping.ColumnMappings.Add("GUDANG_ID", "GUDANG_ID");
            tableMapping.ColumnMappings.Add("LOCATION_ID", "LOCATION_ID");
            tableMapping.ColumnMappings.Add("GUDANG_NAME", "GUDANG_NAME");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_GUDANG] WHERE (([GUDANG_ID] = @Original_GUDANG_ID) AND ((@IsNull_LOCATION_ID = 1 AND [LOCATION_ID] IS NULL) OR ([LOCATION_ID] = @Original_LOCATION_ID)) AND ((@IsNull_GUDANG_NAME = 1 AND [GUDANG_NAME] IS NULL) OR ([GUDANG_NAME] = @Original_GUDANG_NAME)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GUDANG_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_GUDANG] ([LOCATION_ID], [GUDANG_NAME], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@LOCATION_ID, @GUDANG_NAME, @MODIFIED_BY, @MODIFIED_DATE);
SELECT GUDANG_ID, LOCATION_ID, GUDANG_NAME, MODIFIED_BY, MODIFIED_DATE FROM M_GUDANG WHERE (GUDANG_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_GUDANG] SET [LOCATION_ID] = @LOCATION_ID, [GUDANG_NAME] = @GUDANG_NAME, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([GUDANG_ID] = @Original_GUDANG_ID) AND ((@IsNull_LOCATION_ID = 1 AND [LOCATION_ID] IS NULL) OR ([LOCATION_ID] = @Original_LOCATION_ID)) AND ((@IsNull_GUDANG_NAME = 1 AND [GUDANG_NAME] IS NULL) OR ([GUDANG_NAME] = @Original_GUDANG_NAME)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT GUDANG_ID, LOCATION_ID, GUDANG_NAME, MODIFIED_BY, MODIFIED_DATE FROM M_GUDANG WHERE (GUDANG_ID = @GUDANG_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GUDANG_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GUDANG_ID, LOCATION_ID, GUDANG_NAME, MODIFIED_BY, MODIFIED_DATE FROM dbo.M" +
                "_GUDANG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_GUDANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_GUDANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_GUDANGDataTable dataTable = new DataSet1.M_GUDANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_GUDANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_GUDANG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_GUDANG_ID, System.Nullable<int> Original_LOCATION_ID, string Original_GUDANG_NAME, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_GUDANG_ID));
            if ((Original_LOCATION_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_LOCATION_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_GUDANG_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_GUDANG_NAME));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> LOCATION_ID, string GUDANG_NAME, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((LOCATION_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(LOCATION_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((GUDANG_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GUDANG_NAME));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> LOCATION_ID, string GUDANG_NAME, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, int Original_GUDANG_ID, System.Nullable<int> Original_LOCATION_ID, string Original_GUDANG_NAME, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE, int GUDANG_ID) {
            if ((LOCATION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(LOCATION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((GUDANG_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GUDANG_NAME));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_GUDANG_ID));
            if ((Original_LOCATION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_LOCATION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_GUDANG_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_GUDANG_NAME));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(GUDANG_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_ITEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_ITEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_ITEM";
            tableMapping.ColumnMappings.Add("ITEM_ID", "ITEM_ID");
            tableMapping.ColumnMappings.Add("ITEM_TYPE_ID", "ITEM_TYPE_ID");
            tableMapping.ColumnMappings.Add("GROUP_ID", "GROUP_ID");
            tableMapping.ColumnMappings.Add("ITEM_NAME", "ITEM_NAME");
            tableMapping.ColumnMappings.Add("ITEM_SATUAN", "ITEM_SATUAN");
            tableMapping.ColumnMappings.Add("ITEM_DESC", "ITEM_DESC");
            tableMapping.ColumnMappings.Add("ITEM_COMMISION", "ITEM_COMMISION");
            tableMapping.ColumnMappings.Add("DEFAULT_GUDANG_ID", "DEFAULT_GUDANG_ID");
            tableMapping.ColumnMappings.Add("ITEM_PRICE_MAX_VIP", "ITEM_PRICE_MAX_VIP");
            tableMapping.ColumnMappings.Add("ITEM_PRICE_MIN_VIP", "ITEM_PRICE_MIN_VIP");
            tableMapping.ColumnMappings.Add("ITEM_PRICE_MAX", "ITEM_PRICE_MAX");
            tableMapping.ColumnMappings.Add("ITEM_PRICE_MIN", "ITEM_PRICE_MIN");
            tableMapping.ColumnMappings.Add("ITEM_PRICE_PURCHASE", "ITEM_PRICE_PURCHASE");
            tableMapping.ColumnMappings.Add("ITEM_PRICE_PURCHASE_AVG", "ITEM_PRICE_PURCHASE_AVG");
            tableMapping.ColumnMappings.Add("ITEM_EXPIRED_DATE", "ITEM_EXPIRED_DATE");
            tableMapping.ColumnMappings.Add("SUPPLIER_ID", "SUPPLIER_ID");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[M_ITEM] WHERE (([ITEM_ID] = @Original_ITEM_ID) AND ((@IsNull_I" +
                "TEM_TYPE_ID = 1 AND [ITEM_TYPE_ID] IS NULL) OR ([ITEM_TYPE_ID] = @Original_ITEM_" +
                "TYPE_ID)) AND ((@IsNull_GROUP_ID = 1 AND [GROUP_ID] IS NULL) OR ([GROUP_ID] = @O" +
                "riginal_GROUP_ID)) AND ((@IsNull_ITEM_NAME = 1 AND [ITEM_NAME] IS NULL) OR ([ITE" +
                "M_NAME] = @Original_ITEM_NAME)) AND ((@IsNull_ITEM_SATUAN = 1 AND [ITEM_SATUAN] " +
                "IS NULL) OR ([ITEM_SATUAN] = @Original_ITEM_SATUAN)) AND ((@IsNull_ITEM_COMMISIO" +
                "N = 1 AND [ITEM_COMMISION] IS NULL) OR ([ITEM_COMMISION] = @Original_ITEM_COMMIS" +
                "ION)) AND ((@IsNull_DEFAULT_GUDANG_ID = 1 AND [DEFAULT_GUDANG_ID] IS NULL) OR ([" +
                "DEFAULT_GUDANG_ID] = @Original_DEFAULT_GUDANG_ID)) AND ((@IsNull_ITEM_PRICE_MAX_" +
                "VIP = 1 AND [ITEM_PRICE_MAX_VIP] IS NULL) OR ([ITEM_PRICE_MAX_VIP] = @Original_I" +
                "TEM_PRICE_MAX_VIP)) AND ((@IsNull_ITEM_PRICE_MIN_VIP = 1 AND [ITEM_PRICE_MIN_VIP" +
                "] IS NULL) OR ([ITEM_PRICE_MIN_VIP] = @Original_ITEM_PRICE_MIN_VIP)) AND ((@IsNu" +
                "ll_ITEM_PRICE_MAX = 1 AND [ITEM_PRICE_MAX] IS NULL) OR ([ITEM_PRICE_MAX] = @Orig" +
                "inal_ITEM_PRICE_MAX)) AND ((@IsNull_ITEM_PRICE_MIN = 1 AND [ITEM_PRICE_MIN] IS N" +
                "ULL) OR ([ITEM_PRICE_MIN] = @Original_ITEM_PRICE_MIN)) AND ((@IsNull_ITEM_PRICE_" +
                "PURCHASE = 1 AND [ITEM_PRICE_PURCHASE] IS NULL) OR ([ITEM_PRICE_PURCHASE] = @Ori" +
                "ginal_ITEM_PRICE_PURCHASE)) AND ((@IsNull_ITEM_PRICE_PURCHASE_AVG = 1 AND [ITEM_" +
                "PRICE_PURCHASE_AVG] IS NULL) OR ([ITEM_PRICE_PURCHASE_AVG] = @Original_ITEM_PRIC" +
                "E_PURCHASE_AVG)) AND ((@IsNull_ITEM_EXPIRED_DATE = 1 AND [ITEM_EXPIRED_DATE] IS " +
                "NULL) OR ([ITEM_EXPIRED_DATE] = @Original_ITEM_EXPIRED_DATE)) AND ((@IsNull_SUPP" +
                "LIER_ID = 1 AND [SUPPLIER_ID] IS NULL) OR ([SUPPLIER_ID] = @Original_SUPPLIER_ID" +
                ")) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = " +
                "@Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS N" +
                "ULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_TYPE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_TYPE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GROUP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GROUP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_SATUAN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_SATUAN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_SATUAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_SATUAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_COMMISION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_COMMISION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_COMMISION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_COMMISION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_GUDANG_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_MAX_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_MAX_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_MAX_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MAX_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_MIN_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_MIN_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_MIN_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MIN_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_MAX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_MAX", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_MAX", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MAX", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_MIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_MIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_MIN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_PURCHASE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_PURCHASE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_PURCHASE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_PURCHASE_AVG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_PURCHASE_AVG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_PURCHASE_AVG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_PURCHASE_AVG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_EXPIRED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_EXPIRED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_EXPIRED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_EXPIRED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_ITEM] ([ITEM_ID], [ITEM_TYPE_ID], [GROUP_ID], [ITEM_NAME], [ITEM_SATUAN], [ITEM_DESC], [ITEM_COMMISION], [DEFAULT_GUDANG_ID], [ITEM_PRICE_MAX_VIP], [ITEM_PRICE_MIN_VIP], [ITEM_PRICE_MAX], [ITEM_PRICE_MIN], [ITEM_PRICE_PURCHASE], [ITEM_PRICE_PURCHASE_AVG], [ITEM_EXPIRED_DATE], [SUPPLIER_ID], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@ITEM_ID, @ITEM_TYPE_ID, @GROUP_ID, @ITEM_NAME, @ITEM_SATUAN, @ITEM_DESC, @ITEM_COMMISION, @DEFAULT_GUDANG_ID, @ITEM_PRICE_MAX_VIP, @ITEM_PRICE_MIN_VIP, @ITEM_PRICE_MAX, @ITEM_PRICE_MIN, @ITEM_PRICE_PURCHASE, @ITEM_PRICE_PURCHASE_AVG, @ITEM_EXPIRED_DATE, @SUPPLIER_ID, @MODIFIED_BY, @MODIFIED_DATE);
SELECT ITEM_ID, ITEM_TYPE_ID, GROUP_ID, ITEM_NAME, ITEM_SATUAN, ITEM_DESC, ITEM_COMMISION, DEFAULT_GUDANG_ID, ITEM_PRICE_MAX_VIP, ITEM_PRICE_MIN_VIP, ITEM_PRICE_MAX, ITEM_PRICE_MIN, ITEM_PRICE_PURCHASE, ITEM_PRICE_PURCHASE_AVG, ITEM_EXPIRED_DATE, SUPPLIER_ID, MODIFIED_BY, MODIFIED_DATE FROM M_ITEM WHERE (ITEM_ID = @ITEM_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_TYPE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GROUP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_SATUAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_SATUAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_DESC", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_COMMISION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_COMMISION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_MAX_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MAX_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_MIN_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MIN_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_MAX", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MAX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_MIN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_PURCHASE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_PURCHASE_AVG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_PURCHASE_AVG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_EXPIRED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_EXPIRED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[M_ITEM] SET [ITEM_ID] = @ITEM_ID, [ITEM_TYPE_ID] = @ITEM_TYPE_ID, [" +
                "GROUP_ID] = @GROUP_ID, [ITEM_NAME] = @ITEM_NAME, [ITEM_SATUAN] = @ITEM_SATUAN, [" +
                "ITEM_DESC] = @ITEM_DESC, [ITEM_COMMISION] = @ITEM_COMMISION, [DEFAULT_GUDANG_ID]" +
                " = @DEFAULT_GUDANG_ID, [ITEM_PRICE_MAX_VIP] = @ITEM_PRICE_MAX_VIP, [ITEM_PRICE_M" +
                "IN_VIP] = @ITEM_PRICE_MIN_VIP, [ITEM_PRICE_MAX] = @ITEM_PRICE_MAX, [ITEM_PRICE_M" +
                "IN] = @ITEM_PRICE_MIN, [ITEM_PRICE_PURCHASE] = @ITEM_PRICE_PURCHASE, [ITEM_PRICE" +
                "_PURCHASE_AVG] = @ITEM_PRICE_PURCHASE_AVG, [ITEM_EXPIRED_DATE] = @ITEM_EXPIRED_D" +
                "ATE, [SUPPLIER_ID] = @SUPPLIER_ID, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE]" +
                " = @MODIFIED_DATE WHERE (([ITEM_ID] = @Original_ITEM_ID) AND ((@IsNull_ITEM_TYPE" +
                "_ID = 1 AND [ITEM_TYPE_ID] IS NULL) OR ([ITEM_TYPE_ID] = @Original_ITEM_TYPE_ID)" +
                ") AND ((@IsNull_GROUP_ID = 1 AND [GROUP_ID] IS NULL) OR ([GROUP_ID] = @Original_" +
                "GROUP_ID)) AND ((@IsNull_ITEM_NAME = 1 AND [ITEM_NAME] IS NULL) OR ([ITEM_NAME] " +
                "= @Original_ITEM_NAME)) AND ((@IsNull_ITEM_SATUAN = 1 AND [ITEM_SATUAN] IS NULL)" +
                " OR ([ITEM_SATUAN] = @Original_ITEM_SATUAN)) AND ((@IsNull_ITEM_COMMISION = 1 AN" +
                "D [ITEM_COMMISION] IS NULL) OR ([ITEM_COMMISION] = @Original_ITEM_COMMISION)) AN" +
                "D ((@IsNull_DEFAULT_GUDANG_ID = 1 AND [DEFAULT_GUDANG_ID] IS NULL) OR ([DEFAULT_" +
                "GUDANG_ID] = @Original_DEFAULT_GUDANG_ID)) AND ((@IsNull_ITEM_PRICE_MAX_VIP = 1 " +
                "AND [ITEM_PRICE_MAX_VIP] IS NULL) OR ([ITEM_PRICE_MAX_VIP] = @Original_ITEM_PRIC" +
                "E_MAX_VIP)) AND ((@IsNull_ITEM_PRICE_MIN_VIP = 1 AND [ITEM_PRICE_MIN_VIP] IS NUL" +
                "L) OR ([ITEM_PRICE_MIN_VIP] = @Original_ITEM_PRICE_MIN_VIP)) AND ((@IsNull_ITEM_" +
                "PRICE_MAX = 1 AND [ITEM_PRICE_MAX] IS NULL) OR ([ITEM_PRICE_MAX] = @Original_ITE" +
                "M_PRICE_MAX)) AND ((@IsNull_ITEM_PRICE_MIN = 1 AND [ITEM_PRICE_MIN] IS NULL) OR " +
                "([ITEM_PRICE_MIN] = @Original_ITEM_PRICE_MIN)) AND ((@IsNull_ITEM_PRICE_PURCHASE" +
                " = 1 AND [ITEM_PRICE_PURCHASE] IS NULL) OR ([ITEM_PRICE_PURCHASE] = @Original_IT" +
                "EM_PRICE_PURCHASE)) AND ((@IsNull_ITEM_PRICE_PURCHASE_AVG = 1 AND [ITEM_PRICE_PU" +
                "RCHASE_AVG] IS NULL) OR ([ITEM_PRICE_PURCHASE_AVG] = @Original_ITEM_PRICE_PURCHA" +
                "SE_AVG)) AND ((@IsNull_ITEM_EXPIRED_DATE = 1 AND [ITEM_EXPIRED_DATE] IS NULL) OR" +
                " ([ITEM_EXPIRED_DATE] = @Original_ITEM_EXPIRED_DATE)) AND ((@IsNull_SUPPLIER_ID " +
                "= 1 AND [SUPPLIER_ID] IS NULL) OR ([SUPPLIER_ID] = @Original_SUPPLIER_ID)) AND (" +
                "(@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Origina" +
                "l_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR " +
                "([MODIFIED_DATE] = @Original_MODIFIED_DATE)));\r\nSELECT ITEM_ID, ITEM_TYPE_ID, GR" +
                "OUP_ID, ITEM_NAME, ITEM_SATUAN, ITEM_DESC, ITEM_COMMISION, DEFAULT_GUDANG_ID, IT" +
                "EM_PRICE_MAX_VIP, ITEM_PRICE_MIN_VIP, ITEM_PRICE_MAX, ITEM_PRICE_MIN, ITEM_PRICE" +
                "_PURCHASE, ITEM_PRICE_PURCHASE_AVG, ITEM_EXPIRED_DATE, SUPPLIER_ID, MODIFIED_BY," +
                " MODIFIED_DATE FROM M_ITEM WHERE (ITEM_ID = @ITEM_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_TYPE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GROUP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_SATUAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_SATUAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_DESC", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_COMMISION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_COMMISION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_MAX_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MAX_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_MIN_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MIN_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_MAX", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MAX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_MIN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_PURCHASE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_PRICE_PURCHASE_AVG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_PURCHASE_AVG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_EXPIRED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_EXPIRED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_TYPE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_TYPE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GROUP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GROUP_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GROUP_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_SATUAN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_SATUAN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_SATUAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_SATUAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_COMMISION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_COMMISION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_COMMISION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_COMMISION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_GUDANG_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_MAX_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_MAX_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_MAX_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MAX_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_MIN_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_MIN_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_MIN_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MIN_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_MAX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_MAX", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_MAX", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MAX", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_MIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_MIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_MIN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_MIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_PURCHASE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_PURCHASE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_PURCHASE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_PRICE_PURCHASE_AVG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_PRICE_PURCHASE_AVG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_PRICE_PURCHASE_AVG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "ITEM_PRICE_PURCHASE_AVG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_EXPIRED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_EXPIRED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_EXPIRED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_EXPIRED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ITEM_ID, ITEM_TYPE_ID, GROUP_ID, ITEM_NAME, ITEM_SATUAN, ITEM_DESC, ITEM_COMMISION, DEFAULT_GUDANG_ID, ITEM_PRICE_MAX_VIP, ITEM_PRICE_MIN_VIP, ITEM_PRICE_MAX, ITEM_PRICE_MIN, ITEM_PRICE_PURCHASE, ITEM_PRICE_PURCHASE_AVG, ITEM_EXPIRED_DATE, SUPPLIER_ID, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_ITEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_ITEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_ITEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_ITEMDataTable dataTable = new DataSet1.M_ITEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_ITEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_ITEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_ITEM_ID, 
                    System.Nullable<int> Original_ITEM_TYPE_ID, 
                    System.Nullable<int> Original_GROUP_ID, 
                    string Original_ITEM_NAME, 
                    string Original_ITEM_SATUAN, 
                    System.Nullable<decimal> Original_ITEM_COMMISION, 
                    System.Nullable<int> Original_DEFAULT_GUDANG_ID, 
                    System.Nullable<decimal> Original_ITEM_PRICE_MAX_VIP, 
                    System.Nullable<decimal> Original_ITEM_PRICE_MIN_VIP, 
                    System.Nullable<decimal> Original_ITEM_PRICE_MAX, 
                    System.Nullable<decimal> Original_ITEM_PRICE_MIN, 
                    System.Nullable<decimal> Original_ITEM_PRICE_PURCHASE, 
                    System.Nullable<decimal> Original_ITEM_PRICE_PURCHASE_AVG, 
                    System.Nullable<System.DateTime> Original_ITEM_EXPIRED_DATE, 
                    string Original_SUPPLIER_ID, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_ITEM_ID == null)) {
                throw new System.ArgumentNullException("Original_ITEM_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ITEM_ID));
            }
            if ((Original_ITEM_TYPE_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ITEM_TYPE_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_GROUP_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_GROUP_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ITEM_NAME));
            }
            if ((Original_ITEM_SATUAN == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ITEM_SATUAN));
            }
            if ((Original_ITEM_COMMISION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_ITEM_COMMISION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_DEFAULT_GUDANG_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_DEFAULT_GUDANG_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_MAX_VIP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_ITEM_PRICE_MAX_VIP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_MIN_VIP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_ITEM_PRICE_MIN_VIP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_MAX.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_ITEM_PRICE_MAX.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_MIN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_ITEM_PRICE_MIN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_PURCHASE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_ITEM_PRICE_PURCHASE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_PURCHASE_AVG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_ITEM_PRICE_PURCHASE_AVG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_EXPIRED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_ITEM_EXPIRED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_SUPPLIER_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_SUPPLIER_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ITEM_ID, 
                    System.Nullable<int> ITEM_TYPE_ID, 
                    System.Nullable<int> GROUP_ID, 
                    string ITEM_NAME, 
                    string ITEM_SATUAN, 
                    string ITEM_DESC, 
                    System.Nullable<decimal> ITEM_COMMISION, 
                    System.Nullable<int> DEFAULT_GUDANG_ID, 
                    System.Nullable<decimal> ITEM_PRICE_MAX_VIP, 
                    System.Nullable<decimal> ITEM_PRICE_MIN_VIP, 
                    System.Nullable<decimal> ITEM_PRICE_MAX, 
                    System.Nullable<decimal> ITEM_PRICE_MIN, 
                    System.Nullable<decimal> ITEM_PRICE_PURCHASE, 
                    System.Nullable<decimal> ITEM_PRICE_PURCHASE_AVG, 
                    System.Nullable<System.DateTime> ITEM_EXPIRED_DATE, 
                    string SUPPLIER_ID, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((ITEM_ID == null)) {
                throw new System.ArgumentNullException("ITEM_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ITEM_ID));
            }
            if ((ITEM_TYPE_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ITEM_TYPE_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((GROUP_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(GROUP_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ITEM_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ITEM_NAME));
            }
            if ((ITEM_SATUAN == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ITEM_SATUAN));
            }
            if ((ITEM_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ITEM_DESC));
            }
            if ((ITEM_COMMISION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ITEM_COMMISION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((DEFAULT_GUDANG_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(DEFAULT_GUDANG_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_MAX_VIP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(ITEM_PRICE_MAX_VIP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_MIN_VIP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(ITEM_PRICE_MIN_VIP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_MAX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(ITEM_PRICE_MAX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_MIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(ITEM_PRICE_MIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_PURCHASE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(ITEM_PRICE_PURCHASE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_PURCHASE_AVG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(ITEM_PRICE_PURCHASE_AVG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((ITEM_EXPIRED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(ITEM_EXPIRED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((SUPPLIER_ID == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(SUPPLIER_ID));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ITEM_ID, 
                    System.Nullable<int> ITEM_TYPE_ID, 
                    System.Nullable<int> GROUP_ID, 
                    string ITEM_NAME, 
                    string ITEM_SATUAN, 
                    string ITEM_DESC, 
                    System.Nullable<decimal> ITEM_COMMISION, 
                    System.Nullable<int> DEFAULT_GUDANG_ID, 
                    System.Nullable<decimal> ITEM_PRICE_MAX_VIP, 
                    System.Nullable<decimal> ITEM_PRICE_MIN_VIP, 
                    System.Nullable<decimal> ITEM_PRICE_MAX, 
                    System.Nullable<decimal> ITEM_PRICE_MIN, 
                    System.Nullable<decimal> ITEM_PRICE_PURCHASE, 
                    System.Nullable<decimal> ITEM_PRICE_PURCHASE_AVG, 
                    System.Nullable<System.DateTime> ITEM_EXPIRED_DATE, 
                    string SUPPLIER_ID, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_ITEM_ID, 
                    System.Nullable<int> Original_ITEM_TYPE_ID, 
                    System.Nullable<int> Original_GROUP_ID, 
                    string Original_ITEM_NAME, 
                    string Original_ITEM_SATUAN, 
                    System.Nullable<decimal> Original_ITEM_COMMISION, 
                    System.Nullable<int> Original_DEFAULT_GUDANG_ID, 
                    System.Nullable<decimal> Original_ITEM_PRICE_MAX_VIP, 
                    System.Nullable<decimal> Original_ITEM_PRICE_MIN_VIP, 
                    System.Nullable<decimal> Original_ITEM_PRICE_MAX, 
                    System.Nullable<decimal> Original_ITEM_PRICE_MIN, 
                    System.Nullable<decimal> Original_ITEM_PRICE_PURCHASE, 
                    System.Nullable<decimal> Original_ITEM_PRICE_PURCHASE_AVG, 
                    System.Nullable<System.DateTime> Original_ITEM_EXPIRED_DATE, 
                    string Original_SUPPLIER_ID, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((ITEM_ID == null)) {
                throw new System.ArgumentNullException("ITEM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ITEM_ID));
            }
            if ((ITEM_TYPE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ITEM_TYPE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((GROUP_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(GROUP_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ITEM_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ITEM_NAME));
            }
            if ((ITEM_SATUAN == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ITEM_SATUAN));
            }
            if ((ITEM_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ITEM_DESC));
            }
            if ((ITEM_COMMISION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ITEM_COMMISION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((DEFAULT_GUDANG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(DEFAULT_GUDANG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_MAX_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(ITEM_PRICE_MAX_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_MIN_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(ITEM_PRICE_MIN_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_MAX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(ITEM_PRICE_MAX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_MIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(ITEM_PRICE_MIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_PURCHASE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(ITEM_PRICE_PURCHASE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((ITEM_PRICE_PURCHASE_AVG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(ITEM_PRICE_PURCHASE_AVG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((ITEM_EXPIRED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(ITEM_EXPIRED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((SUPPLIER_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(SUPPLIER_ID));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_ID == null)) {
                throw new System.ArgumentNullException("Original_ITEM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ITEM_ID));
            }
            if ((Original_ITEM_TYPE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_ITEM_TYPE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_GROUP_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_GROUP_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_ITEM_NAME));
            }
            if ((Original_ITEM_SATUAN == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ITEM_SATUAN));
            }
            if ((Original_ITEM_COMMISION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_ITEM_COMMISION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_DEFAULT_GUDANG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_DEFAULT_GUDANG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_MAX_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_ITEM_PRICE_MAX_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_MIN_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_ITEM_PRICE_MIN_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_MAX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Original_ITEM_PRICE_MAX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_MIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Original_ITEM_PRICE_MIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_PURCHASE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_ITEM_PRICE_PURCHASE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_PRICE_PURCHASE_AVG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_ITEM_PRICE_PURCHASE_AVG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_EXPIRED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_ITEM_EXPIRED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_SUPPLIER_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_SUPPLIER_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_ITEM_TYPETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_ITEM_TYPETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_ITEM_TYPE";
            tableMapping.ColumnMappings.Add("ITEM_TYPE_ID", "ITEM_TYPE_ID");
            tableMapping.ColumnMappings.Add("ITEM_TYPE_NAME", "ITEM_TYPE_NAME");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_ITEM_TYPE] WHERE (([ITEM_TYPE_ID] = @Original_ITEM_TYPE_ID) AND ((@IsNull_ITEM_TYPE_NAME = 1 AND [ITEM_TYPE_NAME] IS NULL) OR ([ITEM_TYPE_NAME] = @Original_ITEM_TYPE_NAME)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_TYPE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_TYPE_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_TYPE_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_ITEM_TYPE] ([ITEM_TYPE_NAME], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@ITEM_TYPE_NAME, @MODIFIED_BY, @MODIFIED_DATE);
SELECT ITEM_TYPE_ID, ITEM_TYPE_NAME, MODIFIED_BY, MODIFIED_DATE FROM M_ITEM_TYPE WHERE (ITEM_TYPE_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_TYPE_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_ITEM_TYPE] SET [ITEM_TYPE_NAME] = @ITEM_TYPE_NAME, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([ITEM_TYPE_ID] = @Original_ITEM_TYPE_ID) AND ((@IsNull_ITEM_TYPE_NAME = 1 AND [ITEM_TYPE_NAME] IS NULL) OR ([ITEM_TYPE_NAME] = @Original_ITEM_TYPE_NAME)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT ITEM_TYPE_ID, ITEM_TYPE_NAME, MODIFIED_BY, MODIFIED_DATE FROM M_ITEM_TYPE WHERE (ITEM_TYPE_ID = @ITEM_TYPE_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_TYPE_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_TYPE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_TYPE_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_TYPE_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_TYPE_ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ITEM_TYPE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ITEM_TYPE_ID, ITEM_TYPE_NAME, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_ITEM_T" +
                "YPE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_ITEM_TYPEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_ITEM_TYPEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_ITEM_TYPEDataTable dataTable = new DataSet1.M_ITEM_TYPEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_ITEM_TYPEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_ITEM_TYPE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ITEM_TYPE_ID, string Original_ITEM_TYPE_NAME, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ITEM_TYPE_ID));
            if ((Original_ITEM_TYPE_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ITEM_TYPE_NAME));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ITEM_TYPE_NAME, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((ITEM_TYPE_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ITEM_TYPE_NAME));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ITEM_TYPE_NAME, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, int Original_ITEM_TYPE_ID, string Original_ITEM_TYPE_NAME, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE, int ITEM_TYPE_ID) {
            if ((ITEM_TYPE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ITEM_TYPE_NAME));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ITEM_TYPE_ID));
            if ((Original_ITEM_TYPE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ITEM_TYPE_NAME));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ITEM_TYPE_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_LOCATIONTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_LOCATIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_LOCATION";
            tableMapping.ColumnMappings.Add("LOCATION_ID", "LOCATION_ID");
            tableMapping.ColumnMappings.Add("LOCATION_PARENT_ID", "LOCATION_PARENT_ID");
            tableMapping.ColumnMappings.Add("LOCATION_NAME", "LOCATION_NAME");
            tableMapping.ColumnMappings.Add("LOCATION_SHORT_NAME", "LOCATION_SHORT_NAME");
            tableMapping.ColumnMappings.Add("LOCATION_DESC", "LOCATION_DESC");
            tableMapping.ColumnMappings.Add("LOCATION_IS_CRITICAL", "LOCATION_IS_CRITICAL");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_LOCATION] WHERE (([LOCATION_ID] = @Original_LOCATION_ID) AND ([LOCATION_PARENT_ID] = @Original_LOCATION_PARENT_ID) AND ((@IsNull_LOCATION_NAME = 1 AND [LOCATION_NAME] IS NULL) OR ([LOCATION_NAME] = @Original_LOCATION_NAME)) AND ((@IsNull_LOCATION_SHORT_NAME = 1 AND [LOCATION_SHORT_NAME] IS NULL) OR ([LOCATION_SHORT_NAME] = @Original_LOCATION_SHORT_NAME)) AND ((@IsNull_LOCATION_DESC = 1 AND [LOCATION_DESC] IS NULL) OR ([LOCATION_DESC] = @Original_LOCATION_DESC)) AND ((@IsNull_LOCATION_IS_CRITICAL = 1 AND [LOCATION_IS_CRITICAL] IS NULL) OR ([LOCATION_IS_CRITICAL] = @Original_LOCATION_IS_CRITICAL)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_PARENT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_PARENT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_SHORT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_SHORT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_SHORT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_SHORT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_IS_CRITICAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_IS_CRITICAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_IS_CRITICAL", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_IS_CRITICAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_LOCATION] ([LOCATION_ID], [LOCATION_PARENT_ID], [LOCATION_NAME], [LOCATION_SHORT_NAME], [LOCATION_DESC], [LOCATION_IS_CRITICAL], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@LOCATION_ID, @LOCATION_PARENT_ID, @LOCATION_NAME, @LOCATION_SHORT_NAME, @LOCATION_DESC, @LOCATION_IS_CRITICAL, @MODIFIED_BY, @MODIFIED_DATE);
SELECT LOCATION_ID, LOCATION_PARENT_ID, LOCATION_NAME, LOCATION_SHORT_NAME, LOCATION_DESC, LOCATION_IS_CRITICAL, MODIFIED_BY, MODIFIED_DATE FROM M_LOCATION WHERE (LOCATION_ID = @LOCATION_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_PARENT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_PARENT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_SHORT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_SHORT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_IS_CRITICAL", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_IS_CRITICAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_LOCATION] SET [LOCATION_ID] = @LOCATION_ID, [LOCATION_PARENT_ID] = @LOCATION_PARENT_ID, [LOCATION_NAME] = @LOCATION_NAME, [LOCATION_SHORT_NAME] = @LOCATION_SHORT_NAME, [LOCATION_DESC] = @LOCATION_DESC, [LOCATION_IS_CRITICAL] = @LOCATION_IS_CRITICAL, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([LOCATION_ID] = @Original_LOCATION_ID) AND ([LOCATION_PARENT_ID] = @Original_LOCATION_PARENT_ID) AND ((@IsNull_LOCATION_NAME = 1 AND [LOCATION_NAME] IS NULL) OR ([LOCATION_NAME] = @Original_LOCATION_NAME)) AND ((@IsNull_LOCATION_SHORT_NAME = 1 AND [LOCATION_SHORT_NAME] IS NULL) OR ([LOCATION_SHORT_NAME] = @Original_LOCATION_SHORT_NAME)) AND ((@IsNull_LOCATION_DESC = 1 AND [LOCATION_DESC] IS NULL) OR ([LOCATION_DESC] = @Original_LOCATION_DESC)) AND ((@IsNull_LOCATION_IS_CRITICAL = 1 AND [LOCATION_IS_CRITICAL] IS NULL) OR ([LOCATION_IS_CRITICAL] = @Original_LOCATION_IS_CRITICAL)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT LOCATION_ID, LOCATION_PARENT_ID, LOCATION_NAME, LOCATION_SHORT_NAME, LOCATION_DESC, LOCATION_IS_CRITICAL, MODIFIED_BY, MODIFIED_DATE FROM M_LOCATION WHERE (LOCATION_ID = @LOCATION_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_PARENT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_PARENT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_SHORT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_SHORT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOCATION_IS_CRITICAL", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_IS_CRITICAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_PARENT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_PARENT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_SHORT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_SHORT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_SHORT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_SHORT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOCATION_IS_CRITICAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_IS_CRITICAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOCATION_IS_CRITICAL", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "LOCATION_IS_CRITICAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LOCATION_ID, LOCATION_PARENT_ID, LOCATION_NAME, LOCATION_SHORT_NAME, LOCAT" +
                "ION_DESC, LOCATION_IS_CRITICAL, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_LOCATION";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_LOCATIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_LOCATIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_LOCATIONDataTable dataTable = new DataSet1.M_LOCATIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_LOCATIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_LOCATION");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_LOCATION_ID, int Original_LOCATION_PARENT_ID, string Original_LOCATION_NAME, string Original_LOCATION_SHORT_NAME, string Original_LOCATION_DESC, System.Nullable<bool> Original_LOCATION_IS_CRITICAL, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_LOCATION_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_LOCATION_PARENT_ID));
            if ((Original_LOCATION_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_LOCATION_NAME));
            }
            if ((Original_LOCATION_SHORT_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_LOCATION_SHORT_NAME));
            }
            if ((Original_LOCATION_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_LOCATION_DESC));
            }
            if ((Original_LOCATION_IS_CRITICAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_LOCATION_IS_CRITICAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int LOCATION_ID, int LOCATION_PARENT_ID, string LOCATION_NAME, string LOCATION_SHORT_NAME, string LOCATION_DESC, System.Nullable<bool> LOCATION_IS_CRITICAL, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(LOCATION_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(LOCATION_PARENT_ID));
            if ((LOCATION_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LOCATION_NAME));
            }
            if ((LOCATION_SHORT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LOCATION_SHORT_NAME));
            }
            if ((LOCATION_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LOCATION_DESC));
            }
            if ((LOCATION_IS_CRITICAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(LOCATION_IS_CRITICAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int LOCATION_ID, 
                    int LOCATION_PARENT_ID, 
                    string LOCATION_NAME, 
                    string LOCATION_SHORT_NAME, 
                    string LOCATION_DESC, 
                    System.Nullable<bool> LOCATION_IS_CRITICAL, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    int Original_LOCATION_ID, 
                    int Original_LOCATION_PARENT_ID, 
                    string Original_LOCATION_NAME, 
                    string Original_LOCATION_SHORT_NAME, 
                    string Original_LOCATION_DESC, 
                    System.Nullable<bool> Original_LOCATION_IS_CRITICAL, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(LOCATION_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(LOCATION_PARENT_ID));
            if ((LOCATION_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LOCATION_NAME));
            }
            if ((LOCATION_SHORT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LOCATION_SHORT_NAME));
            }
            if ((LOCATION_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LOCATION_DESC));
            }
            if ((LOCATION_IS_CRITICAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(LOCATION_IS_CRITICAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_LOCATION_ID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_LOCATION_PARENT_ID));
            if ((Original_LOCATION_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_LOCATION_NAME));
            }
            if ((Original_LOCATION_SHORT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_LOCATION_SHORT_NAME));
            }
            if ((Original_LOCATION_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_LOCATION_DESC));
            }
            if ((Original_LOCATION_IS_CRITICAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Original_LOCATION_IS_CRITICAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_MENUTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_MENUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_MENU";
            tableMapping.ColumnMappings.Add("MENU_ID", "MENU_ID");
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("MENU_NAME", "MENU_NAME");
            tableMapping.ColumnMappings.Add("MENU_STATUS", "MENU_STATUS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_MENU] WHERE (([MENU_ID] = @Original_MENU_ID) AND ([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_MENU_NAME = 1 AND [MENU_NAME] IS NULL) OR ([MENU_NAME] = @Original_MENU_NAME)) AND ((@IsNull_MENU_STATUS = 1 AND [MENU_STATUS] IS NULL) OR ([MENU_STATUS] = @Original_MENU_STATUS)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MENU_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MENU_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MENU_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MENU_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MENU_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MENU_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_MENU] ([MENU_ID], [SETTING_ID], [MENU_NAME], [MENU_STATUS]) VALUES (@MENU_ID, @SETTING_ID, @MENU_NAME, @MENU_STATUS);
SELECT MENU_ID, SETTING_ID, MENU_NAME, MENU_STATUS FROM M_MENU WHERE (MENU_ID = @MENU_ID) AND (SETTING_ID = @SETTING_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MENU_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MENU_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MENU_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MENU_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_MENU] SET [MENU_ID] = @MENU_ID, [SETTING_ID] = @SETTING_ID, [MENU_NAME] = @MENU_NAME, [MENU_STATUS] = @MENU_STATUS WHERE (([MENU_ID] = @Original_MENU_ID) AND ([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_MENU_NAME = 1 AND [MENU_NAME] IS NULL) OR ([MENU_NAME] = @Original_MENU_NAME)) AND ((@IsNull_MENU_STATUS = 1 AND [MENU_STATUS] IS NULL) OR ([MENU_STATUS] = @Original_MENU_STATUS)));
SELECT MENU_ID, SETTING_ID, MENU_NAME, MENU_STATUS FROM M_MENU WHERE (MENU_ID = @MENU_ID) AND (SETTING_ID = @SETTING_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MENU_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MENU_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MENU_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MENU_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MENU_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MENU_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MENU_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MENU_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MENU_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MENU_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MENU_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MENU_ID, SETTING_ID, MENU_NAME, MENU_STATUS FROM dbo.M_MENU";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_MENUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_MENUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_MENUDataTable dataTable = new DataSet1.M_MENUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_MENUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_MENU");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MENU_ID, string Original_SETTING_ID, string Original_MENU_NAME, string Original_MENU_STATUS) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MENU_ID));
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_MENU_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MENU_NAME));
            }
            if ((Original_MENU_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_MENU_STATUS));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal MENU_ID, string SETTING_ID, string MENU_NAME, string MENU_STATUS) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(MENU_ID));
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SETTING_ID));
            }
            if ((MENU_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MENU_NAME));
            }
            if ((MENU_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MENU_STATUS));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal MENU_ID, string SETTING_ID, string MENU_NAME, string MENU_STATUS, decimal Original_MENU_ID, string Original_SETTING_ID, string Original_MENU_NAME, string Original_MENU_STATUS) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(MENU_ID));
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SETTING_ID));
            }
            if ((MENU_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MENU_NAME));
            }
            if ((MENU_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MENU_STATUS));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_MENU_ID));
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_MENU_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MENU_NAME));
            }
            if ((Original_MENU_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MENU_STATUS));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_PACKETTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_PACKETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_PACKET";
            tableMapping.ColumnMappings.Add("PACKET_ID", "PACKET_ID");
            tableMapping.ColumnMappings.Add("PACKET_NAME", "PACKET_NAME");
            tableMapping.ColumnMappings.Add("PACKET_DISCOUNT", "PACKET_DISCOUNT");
            tableMapping.ColumnMappings.Add("PACKET_PRICE", "PACKET_PRICE");
            tableMapping.ColumnMappings.Add("PACKET_DESC", "PACKET_DESC");
            tableMapping.ColumnMappings.Add("PACKET_PRICE_AVG", "PACKET_PRICE_AVG");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_PACKET] WHERE (([PACKET_ID] = @Original_PACKET_ID) AND ((@IsNull_PACKET_NAME = 1 AND [PACKET_NAME] IS NULL) OR ([PACKET_NAME] = @Original_PACKET_NAME)) AND ((@IsNull_PACKET_DISCOUNT = 1 AND [PACKET_DISCOUNT] IS NULL) OR ([PACKET_DISCOUNT] = @Original_PACKET_DISCOUNT)) AND ((@IsNull_PACKET_PRICE = 1 AND [PACKET_PRICE] IS NULL) OR ([PACKET_PRICE] = @Original_PACKET_PRICE)) AND ((@IsNull_PACKET_DESC = 1 AND [PACKET_DESC] IS NULL) OR ([PACKET_DESC] = @Original_PACKET_DESC)) AND ((@IsNull_PACKET_PRICE_AVG = 1 AND [PACKET_PRICE_AVG] IS NULL) OR ([PACKET_PRICE_AVG] = @Original_PACKET_PRICE_AVG)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_DISCOUNT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_DISCOUNT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_DISCOUNT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_DISCOUNT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_PRICE_AVG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_PRICE_AVG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_PRICE_AVG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_PRICE_AVG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_PACKET] ([PACKET_ID], [PACKET_NAME], [PACKET_DISCOUNT], [PACKET_PRICE], [PACKET_DESC], [PACKET_PRICE_AVG], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@PACKET_ID, @PACKET_NAME, @PACKET_DISCOUNT, @PACKET_PRICE, @PACKET_DESC, @PACKET_PRICE_AVG, @MODIFIED_BY, @MODIFIED_DATE);
SELECT PACKET_ID, PACKET_NAME, PACKET_DISCOUNT, PACKET_PRICE, PACKET_DESC, PACKET_PRICE_AVG, MODIFIED_BY, MODIFIED_DATE FROM M_PACKET WHERE (PACKET_ID = @PACKET_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_DISCOUNT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_DISCOUNT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_PRICE_AVG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_PRICE_AVG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_PACKET] SET [PACKET_ID] = @PACKET_ID, [PACKET_NAME] = @PACKET_NAME, [PACKET_DISCOUNT] = @PACKET_DISCOUNT, [PACKET_PRICE] = @PACKET_PRICE, [PACKET_DESC] = @PACKET_DESC, [PACKET_PRICE_AVG] = @PACKET_PRICE_AVG, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([PACKET_ID] = @Original_PACKET_ID) AND ((@IsNull_PACKET_NAME = 1 AND [PACKET_NAME] IS NULL) OR ([PACKET_NAME] = @Original_PACKET_NAME)) AND ((@IsNull_PACKET_DISCOUNT = 1 AND [PACKET_DISCOUNT] IS NULL) OR ([PACKET_DISCOUNT] = @Original_PACKET_DISCOUNT)) AND ((@IsNull_PACKET_PRICE = 1 AND [PACKET_PRICE] IS NULL) OR ([PACKET_PRICE] = @Original_PACKET_PRICE)) AND ((@IsNull_PACKET_DESC = 1 AND [PACKET_DESC] IS NULL) OR ([PACKET_DESC] = @Original_PACKET_DESC)) AND ((@IsNull_PACKET_PRICE_AVG = 1 AND [PACKET_PRICE_AVG] IS NULL) OR ([PACKET_PRICE_AVG] = @Original_PACKET_PRICE_AVG)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT PACKET_ID, PACKET_NAME, PACKET_DISCOUNT, PACKET_PRICE, PACKET_DESC, PACKET_PRICE_AVG, MODIFIED_BY, MODIFIED_DATE FROM M_PACKET WHERE (PACKET_ID = @PACKET_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_DISCOUNT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_DISCOUNT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_PRICE_AVG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_PRICE_AVG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_DISCOUNT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_DISCOUNT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_DISCOUNT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_DISCOUNT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_PRICE_AVG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_PRICE_AVG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_PRICE_AVG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_PRICE_AVG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PACKET_ID, PACKET_NAME, PACKET_DISCOUNT, PACKET_PRICE, PACKET_DESC, PACKET" +
                "_PRICE_AVG, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_PACKET";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_PACKETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_PACKETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_PACKETDataTable dataTable = new DataSet1.M_PACKETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_PACKETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_PACKET");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_PACKET_ID, string Original_PACKET_NAME, System.Nullable<decimal> Original_PACKET_DISCOUNT, System.Nullable<decimal> Original_PACKET_PRICE, string Original_PACKET_DESC, System.Nullable<decimal> Original_PACKET_PRICE_AVG, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_PACKET_ID == null)) {
                throw new System.ArgumentNullException("Original_PACKET_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_PACKET_ID));
            }
            if ((Original_PACKET_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PACKET_NAME));
            }
            if ((Original_PACKET_DISCOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PACKET_DISCOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_PACKET_PRICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_PACKET_PRICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_PACKET_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PACKET_DESC));
            }
            if ((Original_PACKET_PRICE_AVG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_PACKET_PRICE_AVG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PACKET_ID, string PACKET_NAME, System.Nullable<decimal> PACKET_DISCOUNT, System.Nullable<decimal> PACKET_PRICE, string PACKET_DESC, System.Nullable<decimal> PACKET_PRICE_AVG, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((PACKET_ID == null)) {
                throw new System.ArgumentNullException("PACKET_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PACKET_ID));
            }
            if ((PACKET_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PACKET_NAME));
            }
            if ((PACKET_DISCOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PACKET_DISCOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((PACKET_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PACKET_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((PACKET_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PACKET_DESC));
            }
            if ((PACKET_PRICE_AVG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PACKET_PRICE_AVG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PACKET_ID, 
                    string PACKET_NAME, 
                    System.Nullable<decimal> PACKET_DISCOUNT, 
                    System.Nullable<decimal> PACKET_PRICE, 
                    string PACKET_DESC, 
                    System.Nullable<decimal> PACKET_PRICE_AVG, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_PACKET_ID, 
                    string Original_PACKET_NAME, 
                    System.Nullable<decimal> Original_PACKET_DISCOUNT, 
                    System.Nullable<decimal> Original_PACKET_PRICE, 
                    string Original_PACKET_DESC, 
                    System.Nullable<decimal> Original_PACKET_PRICE_AVG, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((PACKET_ID == null)) {
                throw new System.ArgumentNullException("PACKET_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PACKET_ID));
            }
            if ((PACKET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PACKET_NAME));
            }
            if ((PACKET_DISCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PACKET_DISCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((PACKET_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PACKET_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((PACKET_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PACKET_DESC));
            }
            if ((PACKET_PRICE_AVG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PACKET_PRICE_AVG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_PACKET_ID == null)) {
                throw new System.ArgumentNullException("Original_PACKET_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PACKET_ID));
            }
            if ((Original_PACKET_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PACKET_NAME));
            }
            if ((Original_PACKET_DISCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_PACKET_DISCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_PACKET_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_PACKET_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_PACKET_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_PACKET_DESC));
            }
            if ((Original_PACKET_PRICE_AVG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_PACKET_PRICE_AVG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_PACKET_ITEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_PACKET_ITEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_PACKET_ITEM";
            tableMapping.ColumnMappings.Add("PACKET_ITEM_ID", "PACKET_ITEM_ID");
            tableMapping.ColumnMappings.Add("PACKET_ID", "PACKET_ID");
            tableMapping.ColumnMappings.Add("ITEM_ID", "ITEM_ID");
            tableMapping.ColumnMappings.Add("PACKET_ITEM_QUANTITY", "PACKET_ITEM_QUANTITY");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_PACKET_ITEM] WHERE (([PACKET_ITEM_ID] = @Original_PACKET_ITEM_ID) AND ((@IsNull_PACKET_ID = 1 AND [PACKET_ID] IS NULL) OR ([PACKET_ID] = @Original_PACKET_ID)) AND ((@IsNull_ITEM_ID = 1 AND [ITEM_ID] IS NULL) OR ([ITEM_ID] = @Original_ITEM_ID)) AND ((@IsNull_PACKET_ITEM_QUANTITY = 1 AND [PACKET_ITEM_QUANTITY] IS NULL) OR ([PACKET_ITEM_QUANTITY] = @Original_PACKET_ITEM_QUANTITY)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_ITEM_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PACKET_ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_ITEM_QUANTITY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ITEM_QUANTITY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_ITEM_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_ITEM_QUANTITY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_PACKET_ITEM] ([PACKET_ID], [ITEM_ID], [PACKET_ITEM_QUANTITY], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@PACKET_ID, @ITEM_ID, @PACKET_ITEM_QUANTITY, @MODIFIED_BY, @MODIFIED_DATE);
SELECT PACKET_ITEM_ID, PACKET_ID, ITEM_ID, PACKET_ITEM_QUANTITY, MODIFIED_BY, MODIFIED_DATE FROM M_PACKET_ITEM WHERE (PACKET_ITEM_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_ITEM_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_ITEM_QUANTITY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_PACKET_ITEM] SET [PACKET_ID] = @PACKET_ID, [ITEM_ID] = @ITEM_ID, [PACKET_ITEM_QUANTITY] = @PACKET_ITEM_QUANTITY, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([PACKET_ITEM_ID] = @Original_PACKET_ITEM_ID) AND ((@IsNull_PACKET_ID = 1 AND [PACKET_ID] IS NULL) OR ([PACKET_ID] = @Original_PACKET_ID)) AND ((@IsNull_ITEM_ID = 1 AND [ITEM_ID] IS NULL) OR ([ITEM_ID] = @Original_ITEM_ID)) AND ((@IsNull_PACKET_ITEM_QUANTITY = 1 AND [PACKET_ITEM_QUANTITY] IS NULL) OR ([PACKET_ITEM_QUANTITY] = @Original_PACKET_ITEM_QUANTITY)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT PACKET_ITEM_ID, PACKET_ID, ITEM_ID, PACKET_ITEM_QUANTITY, MODIFIED_BY, MODIFIED_DATE FROM M_PACKET_ITEM WHERE (PACKET_ITEM_ID = @PACKET_ITEM_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_ITEM_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_ITEM_QUANTITY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_ITEM_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PACKET_ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PACKET_ITEM_QUANTITY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PACKET_ITEM_QUANTITY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PACKET_ITEM_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PACKET_ITEM_QUANTITY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PACKET_ITEM_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PACKET_ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PACKET_ITEM_ID, PACKET_ID, ITEM_ID, PACKET_ITEM_QUANTITY, MODIFIED_BY, MOD" +
                "IFIED_DATE FROM dbo.M_PACKET_ITEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_PACKET_ITEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_PACKET_ITEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_PACKET_ITEMDataTable dataTable = new DataSet1.M_PACKET_ITEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_PACKET_ITEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_PACKET_ITEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PACKET_ITEM_ID, string Original_PACKET_ID, string Original_ITEM_ID, System.Nullable<decimal> Original_PACKET_ITEM_QUANTITY, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PACKET_ITEM_ID));
            if ((Original_PACKET_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PACKET_ID));
            }
            if ((Original_ITEM_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ITEM_ID));
            }
            if ((Original_PACKET_ITEM_QUANTITY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_PACKET_ITEM_QUANTITY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PACKET_ID, string ITEM_ID, System.Nullable<decimal> PACKET_ITEM_QUANTITY, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((PACKET_ID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PACKET_ID));
            }
            if ((ITEM_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ITEM_ID));
            }
            if ((PACKET_ITEM_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PACKET_ITEM_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PACKET_ID, string ITEM_ID, System.Nullable<decimal> PACKET_ITEM_QUANTITY, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, decimal Original_PACKET_ITEM_ID, string Original_PACKET_ID, string Original_ITEM_ID, System.Nullable<decimal> Original_PACKET_ITEM_QUANTITY, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE, decimal PACKET_ITEM_ID) {
            if ((PACKET_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PACKET_ID));
            }
            if ((ITEM_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ITEM_ID));
            }
            if ((PACKET_ITEM_QUANTITY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PACKET_ITEM_QUANTITY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_PACKET_ITEM_ID));
            if ((Original_PACKET_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_PACKET_ID));
            }
            if ((Original_ITEM_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ITEM_ID));
            }
            if ((Original_PACKET_ITEM_QUANTITY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_PACKET_ITEM_QUANTITY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(PACKET_ITEM_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_ROOMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_ROOMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_ROOM";
            tableMapping.ColumnMappings.Add("ROOM_ID", "ROOM_ID");
            tableMapping.ColumnMappings.Add("ROOM_NAME", "ROOM_NAME");
            tableMapping.ColumnMappings.Add("ROOM_COMISSION", "ROOM_COMISSION");
            tableMapping.ColumnMappings.Add("ROOM_DESC", "ROOM_DESC");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_ROOM] WHERE (([ROOM_ID] = @Original_ROOM_ID) AND ((@IsNull_ROOM_NAME = 1 AND [ROOM_NAME] IS NULL) OR ([ROOM_NAME] = @Original_ROOM_NAME)) AND ((@IsNull_ROOM_COMISSION = 1 AND [ROOM_COMISSION] IS NULL) OR ([ROOM_COMISSION] = @Original_ROOM_COMISSION)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ROOM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ROOM_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ROOM_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ROOM_COMISSION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_COMISSION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ROOM_COMISSION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ROOM_COMISSION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_ROOM] ([ROOM_ID], [ROOM_NAME], [ROOM_COMISSION], [ROOM_DESC], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@ROOM_ID, @ROOM_NAME, @ROOM_COMISSION, @ROOM_DESC, @MODIFIED_BY, @MODIFIED_DATE);
SELECT ROOM_ID, ROOM_NAME, ROOM_COMISSION, ROOM_DESC, MODIFIED_BY, MODIFIED_DATE FROM M_ROOM WHERE (ROOM_ID = @ROOM_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROOM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROOM_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROOM_COMISSION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ROOM_COMISSION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROOM_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_ROOM] SET [ROOM_ID] = @ROOM_ID, [ROOM_NAME] = @ROOM_NAME, [ROOM_COMISSION] = @ROOM_COMISSION, [ROOM_DESC] = @ROOM_DESC, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([ROOM_ID] = @Original_ROOM_ID) AND ((@IsNull_ROOM_NAME = 1 AND [ROOM_NAME] IS NULL) OR ([ROOM_NAME] = @Original_ROOM_NAME)) AND ((@IsNull_ROOM_COMISSION = 1 AND [ROOM_COMISSION] IS NULL) OR ([ROOM_COMISSION] = @Original_ROOM_COMISSION)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT ROOM_ID, ROOM_NAME, ROOM_COMISSION, ROOM_DESC, MODIFIED_BY, MODIFIED_DATE FROM M_ROOM WHERE (ROOM_ID = @ROOM_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROOM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROOM_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROOM_COMISSION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ROOM_COMISSION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ROOM_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ROOM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ROOM_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ROOM_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ROOM_COMISSION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ROOM_COMISSION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ROOM_COMISSION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ROOM_COMISSION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ROOM_ID, ROOM_NAME, ROOM_COMISSION, ROOM_DESC, MODIFIED_BY, MODIFIED_DATE " +
                "FROM dbo.M_ROOM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_ROOMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_ROOMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_ROOMDataTable dataTable = new DataSet1.M_ROOMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_ROOMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_ROOM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ROOM_ID, string Original_ROOM_NAME, System.Nullable<decimal> Original_ROOM_COMISSION, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_ROOM_ID == null)) {
                throw new System.ArgumentNullException("Original_ROOM_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ROOM_ID));
            }
            if ((Original_ROOM_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ROOM_NAME));
            }
            if ((Original_ROOM_COMISSION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_ROOM_COMISSION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ROOM_ID, string ROOM_NAME, System.Nullable<decimal> ROOM_COMISSION, string ROOM_DESC, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((ROOM_ID == null)) {
                throw new System.ArgumentNullException("ROOM_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ROOM_ID));
            }
            if ((ROOM_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ROOM_NAME));
            }
            if ((ROOM_COMISSION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ROOM_COMISSION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ROOM_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ROOM_DESC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ROOM_ID, string ROOM_NAME, System.Nullable<decimal> ROOM_COMISSION, string ROOM_DESC, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_ROOM_ID, string Original_ROOM_NAME, System.Nullable<decimal> Original_ROOM_COMISSION, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((ROOM_ID == null)) {
                throw new System.ArgumentNullException("ROOM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ROOM_ID));
            }
            if ((ROOM_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ROOM_NAME));
            }
            if ((ROOM_COMISSION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(ROOM_COMISSION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((ROOM_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ROOM_DESC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_ROOM_ID == null)) {
                throw new System.ArgumentNullException("Original_ROOM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_ROOM_ID));
            }
            if ((Original_ROOM_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ROOM_NAME));
            }
            if ((Original_ROOM_COMISSION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_ROOM_COMISSION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_SETTINGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_SETTINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_SETTING";
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("COMPANY_NAME", "COMPANY_NAME");
            tableMapping.ColumnMappings.Add("COMPANY_ADDRESS", "COMPANY_ADDRESS");
            tableMapping.ColumnMappings.Add("COMPANY_ADDRESS2", "COMPANY_ADDRESS2");
            tableMapping.ColumnMappings.Add("COMPANY_CITY", "COMPANY_CITY");
            tableMapping.ColumnMappings.Add("COMPANY_TELP", "COMPANY_TELP");
            tableMapping.ColumnMappings.Add("COMPANY_FAX", "COMPANY_FAX");
            tableMapping.ColumnMappings.Add("COMPANY_NPWP", "COMPANY_NPWP");
            tableMapping.ColumnMappings.Add("COMPANY_PKP_DATE", "COMPANY_PKP_DATE");
            tableMapping.ColumnMappings.Add("COMPANY_LOGO", "COMPANY_LOGO");
            tableMapping.ColumnMappings.Add("AUTO_PRINT_SALES", "AUTO_PRINT_SALES");
            tableMapping.ColumnMappings.Add("AUTO_BACKUP", "AUTO_BACKUP");
            tableMapping.ColumnMappings.Add("BACKUP_DIR", "BACKUP_DIR");
            tableMapping.ColumnMappings.Add("FACTUR_NO_FORMAT", "FACTUR_NO_FORMAT");
            tableMapping.ColumnMappings.Add("FACTUR_NO_LENGTH", "FACTUR_NO_LENGTH");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[M_SETTING] WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((" +
                "@IsNull_COMPANY_NAME = 1 AND [COMPANY_NAME] IS NULL) OR ([COMPANY_NAME] = @Origi" +
                "nal_COMPANY_NAME)) AND ((@IsNull_COMPANY_ADDRESS = 1 AND [COMPANY_ADDRESS] IS NU" +
                "LL) OR ([COMPANY_ADDRESS] = @Original_COMPANY_ADDRESS)) AND ((@IsNull_COMPANY_AD" +
                "DRESS2 = 1 AND [COMPANY_ADDRESS2] IS NULL) OR ([COMPANY_ADDRESS2] = @Original_CO" +
                "MPANY_ADDRESS2)) AND ((@IsNull_COMPANY_CITY = 1 AND [COMPANY_CITY] IS NULL) OR (" +
                "[COMPANY_CITY] = @Original_COMPANY_CITY)) AND ((@IsNull_COMPANY_TELP = 1 AND [CO" +
                "MPANY_TELP] IS NULL) OR ([COMPANY_TELP] = @Original_COMPANY_TELP)) AND ((@IsNull" +
                "_COMPANY_FAX = 1 AND [COMPANY_FAX] IS NULL) OR ([COMPANY_FAX] = @Original_COMPAN" +
                "Y_FAX)) AND ((@IsNull_COMPANY_NPWP = 1 AND [COMPANY_NPWP] IS NULL) OR ([COMPANY_" +
                "NPWP] = @Original_COMPANY_NPWP)) AND ((@IsNull_COMPANY_PKP_DATE = 1 AND [COMPANY" +
                "_PKP_DATE] IS NULL) OR ([COMPANY_PKP_DATE] = @Original_COMPANY_PKP_DATE)) AND ((" +
                "@IsNull_AUTO_PRINT_SALES = 1 AND [AUTO_PRINT_SALES] IS NULL) OR ([AUTO_PRINT_SAL" +
                "ES] = @Original_AUTO_PRINT_SALES)) AND ((@IsNull_AUTO_BACKUP = 1 AND [AUTO_BACKU" +
                "P] IS NULL) OR ([AUTO_BACKUP] = @Original_AUTO_BACKUP)) AND ((@IsNull_BACKUP_DIR" +
                " = 1 AND [BACKUP_DIR] IS NULL) OR ([BACKUP_DIR] = @Original_BACKUP_DIR)) AND ((@" +
                "IsNull_FACTUR_NO_FORMAT = 1 AND [FACTUR_NO_FORMAT] IS NULL) OR ([FACTUR_NO_FORMA" +
                "T] = @Original_FACTUR_NO_FORMAT)) AND ((@IsNull_FACTUR_NO_LENGTH = 1 AND [FACTUR" +
                "_NO_LENGTH] IS NULL) OR ([FACTUR_NO_LENGTH] = @Original_FACTUR_NO_LENGTH)) AND (" +
                "(@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Origina" +
                "l_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR " +
                "([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_ADDRESS2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_ADDRESS2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_CITY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_CITY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_CITY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_CITY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_TELP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_TELP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_TELP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_TELP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_FAX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_FAX", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_FAX", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NPWP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NPWP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NPWP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_PKP_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_PKP_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_PKP_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_PKP_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_AUTO_PRINT_SALES", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_PRINT_SALES", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AUTO_PRINT_SALES", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_PRINT_SALES", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_AUTO_BACKUP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_BACKUP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AUTO_BACKUP", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_BACKUP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BACKUP_DIR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BACKUP_DIR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BACKUP_DIR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BACKUP_DIR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_FACTUR_NO_FORMAT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_FORMAT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FACTUR_NO_FORMAT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_FORMAT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_FACTUR_NO_LENGTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_LENGTH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FACTUR_NO_LENGTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_LENGTH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_SETTING] ([SETTING_ID], [COMPANY_NAME], [COMPANY_ADDRESS], [COMPANY_ADDRESS2], [COMPANY_CITY], [COMPANY_TELP], [COMPANY_FAX], [COMPANY_NPWP], [COMPANY_PKP_DATE], [COMPANY_LOGO], [AUTO_PRINT_SALES], [AUTO_BACKUP], [BACKUP_DIR], [FACTUR_NO_FORMAT], [FACTUR_NO_LENGTH], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@SETTING_ID, @COMPANY_NAME, @COMPANY_ADDRESS, @COMPANY_ADDRESS2, @COMPANY_CITY, @COMPANY_TELP, @COMPANY_FAX, @COMPANY_NPWP, @COMPANY_PKP_DATE, @COMPANY_LOGO, @AUTO_PRINT_SALES, @AUTO_BACKUP, @BACKUP_DIR, @FACTUR_NO_FORMAT, @FACTUR_NO_LENGTH, @MODIFIED_BY, @MODIFIED_DATE);
SELECT SETTING_ID, COMPANY_NAME, COMPANY_ADDRESS, COMPANY_ADDRESS2, COMPANY_CITY, COMPANY_TELP, COMPANY_FAX, COMPANY_NPWP, COMPANY_PKP_DATE, COMPANY_LOGO, AUTO_PRINT_SALES, AUTO_BACKUP, BACKUP_DIR, FACTUR_NO_FORMAT, FACTUR_NO_LENGTH, MODIFIED_BY, MODIFIED_DATE FROM M_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_ADDRESS2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_CITY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_CITY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_TELP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_TELP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_FAX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NPWP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_PKP_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_PKP_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_LOGO", System.Data.SqlDbType.Image, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_LOGO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AUTO_PRINT_SALES", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_PRINT_SALES", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AUTO_BACKUP", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_BACKUP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BACKUP_DIR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BACKUP_DIR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FACTUR_NO_FORMAT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_FORMAT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FACTUR_NO_LENGTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_LENGTH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[M_SETTING] SET [SETTING_ID] = @SETTING_ID, [COMPANY_NAME] = @COMPAN" +
                "Y_NAME, [COMPANY_ADDRESS] = @COMPANY_ADDRESS, [COMPANY_ADDRESS2] = @COMPANY_ADDR" +
                "ESS2, [COMPANY_CITY] = @COMPANY_CITY, [COMPANY_TELP] = @COMPANY_TELP, [COMPANY_F" +
                "AX] = @COMPANY_FAX, [COMPANY_NPWP] = @COMPANY_NPWP, [COMPANY_PKP_DATE] = @COMPAN" +
                "Y_PKP_DATE, [COMPANY_LOGO] = @COMPANY_LOGO, [AUTO_PRINT_SALES] = @AUTO_PRINT_SAL" +
                "ES, [AUTO_BACKUP] = @AUTO_BACKUP, [BACKUP_DIR] = @BACKUP_DIR, [FACTUR_NO_FORMAT]" +
                " = @FACTUR_NO_FORMAT, [FACTUR_NO_LENGTH] = @FACTUR_NO_LENGTH, [MODIFIED_BY] = @M" +
                "ODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([SETTING_ID] = @Original_SE" +
                "TTING_ID) AND ((@IsNull_COMPANY_NAME = 1 AND [COMPANY_NAME] IS NULL) OR ([COMPAN" +
                "Y_NAME] = @Original_COMPANY_NAME)) AND ((@IsNull_COMPANY_ADDRESS = 1 AND [COMPAN" +
                "Y_ADDRESS] IS NULL) OR ([COMPANY_ADDRESS] = @Original_COMPANY_ADDRESS)) AND ((@I" +
                "sNull_COMPANY_ADDRESS2 = 1 AND [COMPANY_ADDRESS2] IS NULL) OR ([COMPANY_ADDRESS2" +
                "] = @Original_COMPANY_ADDRESS2)) AND ((@IsNull_COMPANY_CITY = 1 AND [COMPANY_CIT" +
                "Y] IS NULL) OR ([COMPANY_CITY] = @Original_COMPANY_CITY)) AND ((@IsNull_COMPANY_" +
                "TELP = 1 AND [COMPANY_TELP] IS NULL) OR ([COMPANY_TELP] = @Original_COMPANY_TELP" +
                ")) AND ((@IsNull_COMPANY_FAX = 1 AND [COMPANY_FAX] IS NULL) OR ([COMPANY_FAX] = " +
                "@Original_COMPANY_FAX)) AND ((@IsNull_COMPANY_NPWP = 1 AND [COMPANY_NPWP] IS NUL" +
                "L) OR ([COMPANY_NPWP] = @Original_COMPANY_NPWP)) AND ((@IsNull_COMPANY_PKP_DATE " +
                "= 1 AND [COMPANY_PKP_DATE] IS NULL) OR ([COMPANY_PKP_DATE] = @Original_COMPANY_P" +
                "KP_DATE)) AND ((@IsNull_AUTO_PRINT_SALES = 1 AND [AUTO_PRINT_SALES] IS NULL) OR " +
                "([AUTO_PRINT_SALES] = @Original_AUTO_PRINT_SALES)) AND ((@IsNull_AUTO_BACKUP = 1" +
                " AND [AUTO_BACKUP] IS NULL) OR ([AUTO_BACKUP] = @Original_AUTO_BACKUP)) AND ((@I" +
                "sNull_BACKUP_DIR = 1 AND [BACKUP_DIR] IS NULL) OR ([BACKUP_DIR] = @Original_BACK" +
                "UP_DIR)) AND ((@IsNull_FACTUR_NO_FORMAT = 1 AND [FACTUR_NO_FORMAT] IS NULL) OR (" +
                "[FACTUR_NO_FORMAT] = @Original_FACTUR_NO_FORMAT)) AND ((@IsNull_FACTUR_NO_LENGTH" +
                " = 1 AND [FACTUR_NO_LENGTH] IS NULL) OR ([FACTUR_NO_LENGTH] = @Original_FACTUR_N" +
                "O_LENGTH)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIE" +
                "D_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DA" +
                "TE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));\r\nSELECT SETTING_I" +
                "D, COMPANY_NAME, COMPANY_ADDRESS, COMPANY_ADDRESS2, COMPANY_CITY, COMPANY_TELP, " +
                "COMPANY_FAX, COMPANY_NPWP, COMPANY_PKP_DATE, COMPANY_LOGO, AUTO_PRINT_SALES, AUT" +
                "O_BACKUP, BACKUP_DIR, FACTUR_NO_FORMAT, FACTUR_NO_LENGTH, MODIFIED_BY, MODIFIED_" +
                "DATE FROM M_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_ADDRESS2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_CITY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_CITY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_TELP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_TELP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_FAX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NPWP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_PKP_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_PKP_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_LOGO", System.Data.SqlDbType.Image, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_LOGO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AUTO_PRINT_SALES", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_PRINT_SALES", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AUTO_BACKUP", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_BACKUP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BACKUP_DIR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BACKUP_DIR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FACTUR_NO_FORMAT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_FORMAT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FACTUR_NO_LENGTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_LENGTH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_ADDRESS2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_ADDRESS2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_ADDRESS2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_CITY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_CITY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_CITY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_CITY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_TELP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_TELP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_TELP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_TELP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_FAX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_FAX", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_FAX", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NPWP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NPWP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NPWP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_PKP_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_PKP_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_PKP_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_PKP_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_AUTO_PRINT_SALES", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_PRINT_SALES", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AUTO_PRINT_SALES", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_PRINT_SALES", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_AUTO_BACKUP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_BACKUP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_AUTO_BACKUP", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "AUTO_BACKUP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BACKUP_DIR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BACKUP_DIR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BACKUP_DIR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BACKUP_DIR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_FACTUR_NO_FORMAT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_FORMAT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FACTUR_NO_FORMAT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_FORMAT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_FACTUR_NO_LENGTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_LENGTH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FACTUR_NO_LENGTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FACTUR_NO_LENGTH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SETTING_ID, COMPANY_NAME, COMPANY_ADDRESS, COMPANY_ADDRESS2, COMPANY_CITY, COMPANY_TELP, COMPANY_FAX, COMPANY_NPWP, COMPANY_PKP_DATE, COMPANY_LOGO, AUTO_PRINT_SALES, AUTO_BACKUP, BACKUP_DIR, FACTUR_NO_FORMAT, FACTUR_NO_LENGTH, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_SETTING";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_SETTINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_SETTINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_SETTINGDataTable dataTable = new DataSet1.M_SETTINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_SETTINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_SETTING");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_SETTING_ID, 
                    string Original_COMPANY_NAME, 
                    string Original_COMPANY_ADDRESS, 
                    string Original_COMPANY_ADDRESS2, 
                    string Original_COMPANY_CITY, 
                    string Original_COMPANY_TELP, 
                    string Original_COMPANY_FAX, 
                    string Original_COMPANY_NPWP, 
                    System.Nullable<System.DateTime> Original_COMPANY_PKP_DATE, 
                    System.Nullable<bool> Original_AUTO_PRINT_SALES, 
                    System.Nullable<bool> Original_AUTO_BACKUP, 
                    string Original_BACKUP_DIR, 
                    string Original_FACTUR_NO_FORMAT, 
                    System.Nullable<int> Original_FACTUR_NO_LENGTH, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_COMPANY_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_COMPANY_NAME));
            }
            if ((Original_COMPANY_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_COMPANY_ADDRESS));
            }
            if ((Original_COMPANY_ADDRESS2 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_COMPANY_ADDRESS2));
            }
            if ((Original_COMPANY_CITY == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_COMPANY_CITY));
            }
            if ((Original_COMPANY_TELP == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_COMPANY_TELP));
            }
            if ((Original_COMPANY_FAX == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_COMPANY_FAX));
            }
            if ((Original_COMPANY_NPWP == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_COMPANY_NPWP));
            }
            if ((Original_COMPANY_PKP_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_COMPANY_PKP_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_AUTO_PRINT_SALES.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_AUTO_PRINT_SALES.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_AUTO_BACKUP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_AUTO_BACKUP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_BACKUP_DIR == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_BACKUP_DIR));
            }
            if ((Original_FACTUR_NO_FORMAT == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_FACTUR_NO_FORMAT));
            }
            if ((Original_FACTUR_NO_LENGTH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_FACTUR_NO_LENGTH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SETTING_ID, 
                    string COMPANY_NAME, 
                    string COMPANY_ADDRESS, 
                    string COMPANY_ADDRESS2, 
                    string COMPANY_CITY, 
                    string COMPANY_TELP, 
                    string COMPANY_FAX, 
                    string COMPANY_NPWP, 
                    System.Nullable<System.DateTime> COMPANY_PKP_DATE, 
                    byte[] COMPANY_LOGO, 
                    System.Nullable<bool> AUTO_PRINT_SALES, 
                    System.Nullable<bool> AUTO_BACKUP, 
                    string BACKUP_DIR, 
                    string FACTUR_NO_FORMAT, 
                    System.Nullable<int> FACTUR_NO_LENGTH, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((COMPANY_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(COMPANY_NAME));
            }
            if ((COMPANY_ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(COMPANY_ADDRESS));
            }
            if ((COMPANY_ADDRESS2 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(COMPANY_ADDRESS2));
            }
            if ((COMPANY_CITY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(COMPANY_CITY));
            }
            if ((COMPANY_TELP == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(COMPANY_TELP));
            }
            if ((COMPANY_FAX == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(COMPANY_FAX));
            }
            if ((COMPANY_NPWP == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(COMPANY_NPWP));
            }
            if ((COMPANY_PKP_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(COMPANY_PKP_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((COMPANY_LOGO == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte[])(COMPANY_LOGO));
            }
            if ((AUTO_PRINT_SALES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(AUTO_PRINT_SALES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((AUTO_BACKUP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(AUTO_BACKUP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((BACKUP_DIR == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(BACKUP_DIR));
            }
            if ((FACTUR_NO_FORMAT == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(FACTUR_NO_FORMAT));
            }
            if ((FACTUR_NO_LENGTH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(FACTUR_NO_LENGTH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SETTING_ID, 
                    string COMPANY_NAME, 
                    string COMPANY_ADDRESS, 
                    string COMPANY_ADDRESS2, 
                    string COMPANY_CITY, 
                    string COMPANY_TELP, 
                    string COMPANY_FAX, 
                    string COMPANY_NPWP, 
                    System.Nullable<System.DateTime> COMPANY_PKP_DATE, 
                    byte[] COMPANY_LOGO, 
                    System.Nullable<bool> AUTO_PRINT_SALES, 
                    System.Nullable<bool> AUTO_BACKUP, 
                    string BACKUP_DIR, 
                    string FACTUR_NO_FORMAT, 
                    System.Nullable<int> FACTUR_NO_LENGTH, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_SETTING_ID, 
                    string Original_COMPANY_NAME, 
                    string Original_COMPANY_ADDRESS, 
                    string Original_COMPANY_ADDRESS2, 
                    string Original_COMPANY_CITY, 
                    string Original_COMPANY_TELP, 
                    string Original_COMPANY_FAX, 
                    string Original_COMPANY_NPWP, 
                    System.Nullable<System.DateTime> Original_COMPANY_PKP_DATE, 
                    System.Nullable<bool> Original_AUTO_PRINT_SALES, 
                    System.Nullable<bool> Original_AUTO_BACKUP, 
                    string Original_BACKUP_DIR, 
                    string Original_FACTUR_NO_FORMAT, 
                    System.Nullable<int> Original_FACTUR_NO_LENGTH, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((COMPANY_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(COMPANY_NAME));
            }
            if ((COMPANY_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(COMPANY_ADDRESS));
            }
            if ((COMPANY_ADDRESS2 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(COMPANY_ADDRESS2));
            }
            if ((COMPANY_CITY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(COMPANY_CITY));
            }
            if ((COMPANY_TELP == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(COMPANY_TELP));
            }
            if ((COMPANY_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(COMPANY_FAX));
            }
            if ((COMPANY_NPWP == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(COMPANY_NPWP));
            }
            if ((COMPANY_PKP_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(COMPANY_PKP_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((COMPANY_LOGO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte[])(COMPANY_LOGO));
            }
            if ((AUTO_PRINT_SALES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(AUTO_PRINT_SALES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((AUTO_BACKUP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(AUTO_BACKUP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((BACKUP_DIR == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(BACKUP_DIR));
            }
            if ((FACTUR_NO_FORMAT == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(FACTUR_NO_FORMAT));
            }
            if ((FACTUR_NO_LENGTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(FACTUR_NO_LENGTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_COMPANY_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_COMPANY_NAME));
            }
            if ((Original_COMPANY_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_COMPANY_ADDRESS));
            }
            if ((Original_COMPANY_ADDRESS2 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_COMPANY_ADDRESS2));
            }
            if ((Original_COMPANY_CITY == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_COMPANY_CITY));
            }
            if ((Original_COMPANY_TELP == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_COMPANY_TELP));
            }
            if ((Original_COMPANY_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_COMPANY_FAX));
            }
            if ((Original_COMPANY_NPWP == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_COMPANY_NPWP));
            }
            if ((Original_COMPANY_PKP_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_COMPANY_PKP_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((Original_AUTO_PRINT_SALES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_AUTO_PRINT_SALES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Original_AUTO_BACKUP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_AUTO_BACKUP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_BACKUP_DIR == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_BACKUP_DIR));
            }
            if ((Original_FACTUR_NO_FORMAT == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_FACTUR_NO_FORMAT));
            }
            if ((Original_FACTUR_NO_LENGTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_FACTUR_NO_LENGTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_SUB_ACCOUNTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_SUB_ACCOUNTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_SUB_ACCOUNT";
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_ID", "SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_ID", "ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_NAME", "SUB_ACCOUNT_NAME");
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_SALDO", "SUB_ACCOUNT_SALDO");
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_DESC", "SUB_ACCOUNT_DESC");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_SUB_ACCOUNT] WHERE (([SUB_ACCOUNT_ID] = @Original_SUB_ACCOUNT_ID) AND ((@IsNull_ACCOUNT_ID = 1 AND [ACCOUNT_ID] IS NULL) OR ([ACCOUNT_ID] = @Original_ACCOUNT_ID)) AND ((@IsNull_SUB_ACCOUNT_NAME = 1 AND [SUB_ACCOUNT_NAME] IS NULL) OR ([SUB_ACCOUNT_NAME] = @Original_SUB_ACCOUNT_NAME)) AND ((@IsNull_SUB_ACCOUNT_SALDO = 1 AND [SUB_ACCOUNT_SALDO] IS NULL) OR ([SUB_ACCOUNT_SALDO] = @Original_SUB_ACCOUNT_SALDO)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SUB_ACCOUNT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_SUB_ACCOUNT] ([SUB_ACCOUNT_ID], [ACCOUNT_ID], [SUB_ACCOUNT_NAME], [SUB_ACCOUNT_SALDO], [SUB_ACCOUNT_DESC], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@SUB_ACCOUNT_ID, @ACCOUNT_ID, @SUB_ACCOUNT_NAME, @SUB_ACCOUNT_SALDO, @SUB_ACCOUNT_DESC, @MODIFIED_BY, @MODIFIED_DATE);
SELECT SUB_ACCOUNT_ID, ACCOUNT_ID, SUB_ACCOUNT_NAME, SUB_ACCOUNT_SALDO, SUB_ACCOUNT_DESC, MODIFIED_BY, MODIFIED_DATE FROM M_SUB_ACCOUNT WHERE (SUB_ACCOUNT_ID = @SUB_ACCOUNT_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SUB_ACCOUNT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_SUB_ACCOUNT] SET [SUB_ACCOUNT_ID] = @SUB_ACCOUNT_ID, [ACCOUNT_ID] = @ACCOUNT_ID, [SUB_ACCOUNT_NAME] = @SUB_ACCOUNT_NAME, [SUB_ACCOUNT_SALDO] = @SUB_ACCOUNT_SALDO, [SUB_ACCOUNT_DESC] = @SUB_ACCOUNT_DESC, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([SUB_ACCOUNT_ID] = @Original_SUB_ACCOUNT_ID) AND ((@IsNull_ACCOUNT_ID = 1 AND [ACCOUNT_ID] IS NULL) OR ([ACCOUNT_ID] = @Original_ACCOUNT_ID)) AND ((@IsNull_SUB_ACCOUNT_NAME = 1 AND [SUB_ACCOUNT_NAME] IS NULL) OR ([SUB_ACCOUNT_NAME] = @Original_SUB_ACCOUNT_NAME)) AND ((@IsNull_SUB_ACCOUNT_SALDO = 1 AND [SUB_ACCOUNT_SALDO] IS NULL) OR ([SUB_ACCOUNT_SALDO] = @Original_SUB_ACCOUNT_SALDO)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT SUB_ACCOUNT_ID, ACCOUNT_ID, SUB_ACCOUNT_NAME, SUB_ACCOUNT_SALDO, SUB_ACCOUNT_DESC, MODIFIED_BY, MODIFIED_DATE FROM M_SUB_ACCOUNT WHERE (SUB_ACCOUNT_ID = @SUB_ACCOUNT_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SUB_ACCOUNT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SUB_ACCOUNT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SUB_ACCOUNT_ID, ACCOUNT_ID, SUB_ACCOUNT_NAME, SUB_ACCOUNT_SALDO, SUB_ACCOU" +
                "NT_DESC, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_SUB_ACCOUNT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_SUB_ACCOUNTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_SUB_ACCOUNTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_SUB_ACCOUNTDataTable dataTable = new DataSet1.M_SUB_ACCOUNTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_SUB_ACCOUNTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_SUB_ACCOUNT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SUB_ACCOUNT_ID, string Original_ACCOUNT_ID, string Original_SUB_ACCOUNT_NAME, System.Nullable<decimal> Original_SUB_ACCOUNT_SALDO, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_SUB_ACCOUNT_ID == null)) {
                throw new System.ArgumentNullException("Original_SUB_ACCOUNT_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ACCOUNT_ID));
            }
            if ((Original_SUB_ACCOUNT_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SUB_ACCOUNT_NAME));
            }
            if ((Original_SUB_ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_SUB_ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SUB_ACCOUNT_ID, string ACCOUNT_ID, string SUB_ACCOUNT_NAME, System.Nullable<decimal> SUB_ACCOUNT_SALDO, string SUB_ACCOUNT_DESC, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((SUB_ACCOUNT_ID == null)) {
                throw new System.ArgumentNullException("SUB_ACCOUNT_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ACCOUNT_ID));
            }
            if ((SUB_ACCOUNT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SUB_ACCOUNT_NAME));
            }
            if ((SUB_ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(SUB_ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SUB_ACCOUNT_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SUB_ACCOUNT_DESC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SUB_ACCOUNT_ID, string ACCOUNT_ID, string SUB_ACCOUNT_NAME, System.Nullable<decimal> SUB_ACCOUNT_SALDO, string SUB_ACCOUNT_DESC, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_SUB_ACCOUNT_ID, string Original_ACCOUNT_ID, string Original_SUB_ACCOUNT_NAME, System.Nullable<decimal> Original_SUB_ACCOUNT_SALDO, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((SUB_ACCOUNT_ID == null)) {
                throw new System.ArgumentNullException("SUB_ACCOUNT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ACCOUNT_ID));
            }
            if ((SUB_ACCOUNT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SUB_ACCOUNT_NAME));
            }
            if ((SUB_ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(SUB_ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SUB_ACCOUNT_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SUB_ACCOUNT_DESC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                throw new System.ArgumentNullException("Original_SUB_ACCOUNT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ACCOUNT_ID));
            }
            if ((Original_SUB_ACCOUNT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_SUB_ACCOUNT_NAME));
            }
            if ((Original_SUB_ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_SUB_ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_SUPPLIERTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_SUPPLIERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_SUPPLIER";
            tableMapping.ColumnMappings.Add("SUPPLIER_ID", "SUPPLIER_ID");
            tableMapping.ColumnMappings.Add("SUPPLIER_NAME", "SUPPLIER_NAME");
            tableMapping.ColumnMappings.Add("SUPPLIER_ADDRESS", "SUPPLIER_ADDRESS");
            tableMapping.ColumnMappings.Add("SUPPLIER_PHONE", "SUPPLIER_PHONE");
            tableMapping.ColumnMappings.Add("SUPPLIER_FAX", "SUPPLIER_FAX");
            tableMapping.ColumnMappings.Add("SUPPLIER_NPWP", "SUPPLIER_NPWP");
            tableMapping.ColumnMappings.Add("SUPPLIER_CONTACT", "SUPPLIER_CONTACT");
            tableMapping.ColumnMappings.Add("SUPPLIER_CONTACT_PHONE", "SUPPLIER_CONTACT_PHONE");
            tableMapping.ColumnMappings.Add("SUPPLIER_LIMIT", "SUPPLIER_LIMIT");
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_ID", "SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_SUPPLIER] WHERE (([SUPPLIER_ID] = @Original_SUPPLIER_ID) AND ((@IsNull_SUPPLIER_NAME = 1 AND [SUPPLIER_NAME] IS NULL) OR ([SUPPLIER_NAME] = @Original_SUPPLIER_NAME)) AND ((@IsNull_SUPPLIER_ADDRESS = 1 AND [SUPPLIER_ADDRESS] IS NULL) OR ([SUPPLIER_ADDRESS] = @Original_SUPPLIER_ADDRESS)) AND ((@IsNull_SUPPLIER_PHONE = 1 AND [SUPPLIER_PHONE] IS NULL) OR ([SUPPLIER_PHONE] = @Original_SUPPLIER_PHONE)) AND ((@IsNull_SUPPLIER_FAX = 1 AND [SUPPLIER_FAX] IS NULL) OR ([SUPPLIER_FAX] = @Original_SUPPLIER_FAX)) AND ((@IsNull_SUPPLIER_NPWP = 1 AND [SUPPLIER_NPWP] IS NULL) OR ([SUPPLIER_NPWP] = @Original_SUPPLIER_NPWP)) AND ((@IsNull_SUPPLIER_CONTACT = 1 AND [SUPPLIER_CONTACT] IS NULL) OR ([SUPPLIER_CONTACT] = @Original_SUPPLIER_CONTACT)) AND ((@IsNull_SUPPLIER_CONTACT_PHONE = 1 AND [SUPPLIER_CONTACT_PHONE] IS NULL) OR ([SUPPLIER_CONTACT_PHONE] = @Original_SUPPLIER_CONTACT_PHONE)) AND ((@IsNull_SUPPLIER_LIMIT = 1 AND [SUPPLIER_LIMIT] IS NULL) OR ([SUPPLIER_LIMIT] = @Original_SUPPLIER_LIMIT)) AND ((@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACCOUNT_ID] = @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_FAX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_FAX", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_FAX", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_NPWP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NPWP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NPWP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_CONTACT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_CONTACT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_CONTACT_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_CONTACT_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_LIMIT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_LIMIT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_LIMIT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_LIMIT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_SUPPLIER] ([SUPPLIER_ID], [SUPPLIER_NAME], [SUPPLIER_ADDRESS], [SUPPLIER_PHONE], [SUPPLIER_FAX], [SUPPLIER_NPWP], [SUPPLIER_CONTACT], [SUPPLIER_CONTACT_PHONE], [SUPPLIER_LIMIT], [SUB_ACCOUNT_ID], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@SUPPLIER_ID, @SUPPLIER_NAME, @SUPPLIER_ADDRESS, @SUPPLIER_PHONE, @SUPPLIER_FAX, @SUPPLIER_NPWP, @SUPPLIER_CONTACT, @SUPPLIER_CONTACT_PHONE, @SUPPLIER_LIMIT, @SUB_ACCOUNT_ID, @MODIFIED_BY, @MODIFIED_DATE);
SELECT SUPPLIER_ID, SUPPLIER_NAME, SUPPLIER_ADDRESS, SUPPLIER_PHONE, SUPPLIER_FAX, SUPPLIER_NPWP, SUPPLIER_CONTACT, SUPPLIER_CONTACT_PHONE, SUPPLIER_LIMIT, SUB_ACCOUNT_ID, MODIFIED_BY, MODIFIED_DATE FROM M_SUPPLIER WHERE (SUPPLIER_ID = @SUPPLIER_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_FAX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NPWP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_CONTACT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_CONTACT_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_LIMIT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_LIMIT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[M_SUPPLIER] SET [SUPPLIER_ID] = @SUPPLIER_ID, [SUPPLIER_NAME] = @SU" +
                "PPLIER_NAME, [SUPPLIER_ADDRESS] = @SUPPLIER_ADDRESS, [SUPPLIER_PHONE] = @SUPPLIE" +
                "R_PHONE, [SUPPLIER_FAX] = @SUPPLIER_FAX, [SUPPLIER_NPWP] = @SUPPLIER_NPWP, [SUPP" +
                "LIER_CONTACT] = @SUPPLIER_CONTACT, [SUPPLIER_CONTACT_PHONE] = @SUPPLIER_CONTACT_" +
                "PHONE, [SUPPLIER_LIMIT] = @SUPPLIER_LIMIT, [SUB_ACCOUNT_ID] = @SUB_ACCOUNT_ID, [" +
                "MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([SUPPLIER_" +
                "ID] = @Original_SUPPLIER_ID) AND ((@IsNull_SUPPLIER_NAME = 1 AND [SUPPLIER_NAME]" +
                " IS NULL) OR ([SUPPLIER_NAME] = @Original_SUPPLIER_NAME)) AND ((@IsNull_SUPPLIER" +
                "_ADDRESS = 1 AND [SUPPLIER_ADDRESS] IS NULL) OR ([SUPPLIER_ADDRESS] = @Original_" +
                "SUPPLIER_ADDRESS)) AND ((@IsNull_SUPPLIER_PHONE = 1 AND [SUPPLIER_PHONE] IS NULL" +
                ") OR ([SUPPLIER_PHONE] = @Original_SUPPLIER_PHONE)) AND ((@IsNull_SUPPLIER_FAX =" +
                " 1 AND [SUPPLIER_FAX] IS NULL) OR ([SUPPLIER_FAX] = @Original_SUPPLIER_FAX)) AND" +
                " ((@IsNull_SUPPLIER_NPWP = 1 AND [SUPPLIER_NPWP] IS NULL) OR ([SUPPLIER_NPWP] = " +
                "@Original_SUPPLIER_NPWP)) AND ((@IsNull_SUPPLIER_CONTACT = 1 AND [SUPPLIER_CONTA" +
                "CT] IS NULL) OR ([SUPPLIER_CONTACT] = @Original_SUPPLIER_CONTACT)) AND ((@IsNull" +
                "_SUPPLIER_CONTACT_PHONE = 1 AND [SUPPLIER_CONTACT_PHONE] IS NULL) OR ([SUPPLIER_" +
                "CONTACT_PHONE] = @Original_SUPPLIER_CONTACT_PHONE)) AND ((@IsNull_SUPPLIER_LIMIT" +
                " = 1 AND [SUPPLIER_LIMIT] IS NULL) OR ([SUPPLIER_LIMIT] = @Original_SUPPLIER_LIM" +
                "IT)) AND ((@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACC" +
                "OUNT_ID] = @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIE" +
                "D_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIE" +
                "D_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED" +
                "_DATE)));\r\nSELECT SUPPLIER_ID, SUPPLIER_NAME, SUPPLIER_ADDRESS, SUPPLIER_PHONE, " +
                "SUPPLIER_FAX, SUPPLIER_NPWP, SUPPLIER_CONTACT, SUPPLIER_CONTACT_PHONE, SUPPLIER_" +
                "LIMIT, SUB_ACCOUNT_ID, MODIFIED_BY, MODIFIED_DATE FROM M_SUPPLIER WHERE (SUPPLIE" +
                "R_ID = @SUPPLIER_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_FAX", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NPWP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_CONTACT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_CONTACT_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_LIMIT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_LIMIT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ADDRESS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_FAX", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_FAX", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_FAX", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_FAX", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_NPWP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NPWP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_NPWP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_NPWP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_CONTACT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_CONTACT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_CONTACT_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_CONTACT_PHONE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_CONTACT_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_LIMIT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_LIMIT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_LIMIT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_LIMIT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SUPPLIER_ID, SUPPLIER_NAME, SUPPLIER_ADDRESS, SUPPLIER_PHONE, SUPPLIER_FAX" +
                ", SUPPLIER_NPWP, SUPPLIER_CONTACT, SUPPLIER_CONTACT_PHONE, SUPPLIER_LIMIT, SUB_A" +
                "CCOUNT_ID, MODIFIED_BY, MODIFIED_DATE FROM dbo.M_SUPPLIER";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_SUPPLIERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_SUPPLIERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_SUPPLIERDataTable dataTable = new DataSet1.M_SUPPLIERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_SUPPLIERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_SUPPLIER");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SUPPLIER_ID, string Original_SUPPLIER_NAME, string Original_SUPPLIER_ADDRESS, string Original_SUPPLIER_PHONE, string Original_SUPPLIER_FAX, string Original_SUPPLIER_NPWP, string Original_SUPPLIER_CONTACT, string Original_SUPPLIER_CONTACT_PHONE, System.Nullable<decimal> Original_SUPPLIER_LIMIT, string Original_SUB_ACCOUNT_ID, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_SUPPLIER_ID == null)) {
                throw new System.ArgumentNullException("Original_SUPPLIER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SUPPLIER_ID));
            }
            if ((Original_SUPPLIER_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SUPPLIER_NAME));
            }
            if ((Original_SUPPLIER_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SUPPLIER_ADDRESS));
            }
            if ((Original_SUPPLIER_PHONE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SUPPLIER_PHONE));
            }
            if ((Original_SUPPLIER_FAX == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SUPPLIER_FAX));
            }
            if ((Original_SUPPLIER_NPWP == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SUPPLIER_NPWP));
            }
            if ((Original_SUPPLIER_CONTACT == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_SUPPLIER_CONTACT));
            }
            if ((Original_SUPPLIER_CONTACT_PHONE == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_SUPPLIER_CONTACT_PHONE));
            }
            if ((Original_SUPPLIER_LIMIT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_SUPPLIER_LIMIT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SUPPLIER_ID, string SUPPLIER_NAME, string SUPPLIER_ADDRESS, string SUPPLIER_PHONE, string SUPPLIER_FAX, string SUPPLIER_NPWP, string SUPPLIER_CONTACT, string SUPPLIER_CONTACT_PHONE, System.Nullable<decimal> SUPPLIER_LIMIT, string SUB_ACCOUNT_ID, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((SUPPLIER_ID == null)) {
                throw new System.ArgumentNullException("SUPPLIER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SUPPLIER_ID));
            }
            if ((SUPPLIER_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SUPPLIER_NAME));
            }
            if ((SUPPLIER_ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SUPPLIER_ADDRESS));
            }
            if ((SUPPLIER_PHONE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SUPPLIER_PHONE));
            }
            if ((SUPPLIER_FAX == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SUPPLIER_FAX));
            }
            if ((SUPPLIER_NPWP == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SUPPLIER_NPWP));
            }
            if ((SUPPLIER_CONTACT == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SUPPLIER_CONTACT));
            }
            if ((SUPPLIER_CONTACT_PHONE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SUPPLIER_CONTACT_PHONE));
            }
            if ((SUPPLIER_LIMIT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(SUPPLIER_LIMIT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SUPPLIER_ID, 
                    string SUPPLIER_NAME, 
                    string SUPPLIER_ADDRESS, 
                    string SUPPLIER_PHONE, 
                    string SUPPLIER_FAX, 
                    string SUPPLIER_NPWP, 
                    string SUPPLIER_CONTACT, 
                    string SUPPLIER_CONTACT_PHONE, 
                    System.Nullable<decimal> SUPPLIER_LIMIT, 
                    string SUB_ACCOUNT_ID, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_SUPPLIER_ID, 
                    string Original_SUPPLIER_NAME, 
                    string Original_SUPPLIER_ADDRESS, 
                    string Original_SUPPLIER_PHONE, 
                    string Original_SUPPLIER_FAX, 
                    string Original_SUPPLIER_NPWP, 
                    string Original_SUPPLIER_CONTACT, 
                    string Original_SUPPLIER_CONTACT_PHONE, 
                    System.Nullable<decimal> Original_SUPPLIER_LIMIT, 
                    string Original_SUB_ACCOUNT_ID, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((SUPPLIER_ID == null)) {
                throw new System.ArgumentNullException("SUPPLIER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SUPPLIER_ID));
            }
            if ((SUPPLIER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SUPPLIER_NAME));
            }
            if ((SUPPLIER_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SUPPLIER_ADDRESS));
            }
            if ((SUPPLIER_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SUPPLIER_PHONE));
            }
            if ((SUPPLIER_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SUPPLIER_FAX));
            }
            if ((SUPPLIER_NPWP == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SUPPLIER_NPWP));
            }
            if ((SUPPLIER_CONTACT == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SUPPLIER_CONTACT));
            }
            if ((SUPPLIER_CONTACT_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SUPPLIER_CONTACT_PHONE));
            }
            if ((SUPPLIER_LIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(SUPPLIER_LIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_SUPPLIER_ID == null)) {
                throw new System.ArgumentNullException("Original_SUPPLIER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_SUPPLIER_ID));
            }
            if ((Original_SUPPLIER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SUPPLIER_NAME));
            }
            if ((Original_SUPPLIER_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_SUPPLIER_ADDRESS));
            }
            if ((Original_SUPPLIER_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_SUPPLIER_PHONE));
            }
            if ((Original_SUPPLIER_FAX == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_SUPPLIER_FAX));
            }
            if ((Original_SUPPLIER_NPWP == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_SUPPLIER_NPWP));
            }
            if ((Original_SUPPLIER_CONTACT == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_SUPPLIER_CONTACT));
            }
            if ((Original_SUPPLIER_CONTACT_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_SUPPLIER_CONTACT_PHONE));
            }
            if ((Original_SUPPLIER_LIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_SUPPLIER_LIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_SUPPLIER_ACCOUNTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_SUPPLIER_ACCOUNTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_SUPPLIER_ACCOUNT";
            tableMapping.ColumnMappings.Add("SUPPLIER_ID", "SUPPLIER_ID");
            tableMapping.ColumnMappings.Add("CURRENCY_ID", "CURRENCY_ID");
            tableMapping.ColumnMappings.Add("BANK_ID", "BANK_ID");
            tableMapping.ColumnMappings.Add("SUPPLIER_ACCOUNT_NO", "SUPPLIER_ACCOUNT_NO");
            tableMapping.ColumnMappings.Add("SUPPLIER_ACCOUNT_NAME", "SUPPLIER_ACCOUNT_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_SUPPLIER_ACCOUNT] WHERE (([SUPPLIER_ID] = @Original_SUPPLIER_ID) AND ([CURRENCY_ID] = @Original_CURRENCY_ID) AND ((@IsNull_BANK_ID = 1 AND [BANK_ID] IS NULL) OR ([BANK_ID] = @Original_BANK_ID)) AND ((@IsNull_SUPPLIER_ACCOUNT_NO = 1 AND [SUPPLIER_ACCOUNT_NO] IS NULL) OR ([SUPPLIER_ACCOUNT_NO] = @Original_SUPPLIER_ACCOUNT_NO)) AND ((@IsNull_SUPPLIER_ACCOUNT_NAME = 1 AND [SUPPLIER_ACCOUNT_NAME] IS NULL) OR ([SUPPLIER_ACCOUNT_NAME] = @Original_SUPPLIER_ACCOUNT_NAME)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CURRENCY_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_ACCOUNT_NO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ACCOUNT_NO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_ACCOUNT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ACCOUNT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_SUPPLIER_ACCOUNT] ([SUPPLIER_ID], [CURRENCY_ID], [BANK_ID], [SUPPLIER_ACCOUNT_NO], [SUPPLIER_ACCOUNT_NAME]) VALUES (@SUPPLIER_ID, @CURRENCY_ID, @BANK_ID, @SUPPLIER_ACCOUNT_NO, @SUPPLIER_ACCOUNT_NAME);
SELECT SUPPLIER_ID, CURRENCY_ID, BANK_ID, SUPPLIER_ACCOUNT_NO, SUPPLIER_ACCOUNT_NAME FROM M_SUPPLIER_ACCOUNT WHERE (CURRENCY_ID = @CURRENCY_ID) AND (SUPPLIER_ID = @SUPPLIER_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CURRENCY_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ACCOUNT_NO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ACCOUNT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_SUPPLIER_ACCOUNT] SET [SUPPLIER_ID] = @SUPPLIER_ID, [CURRENCY_ID] = @CURRENCY_ID, [BANK_ID] = @BANK_ID, [SUPPLIER_ACCOUNT_NO] = @SUPPLIER_ACCOUNT_NO, [SUPPLIER_ACCOUNT_NAME] = @SUPPLIER_ACCOUNT_NAME WHERE (([SUPPLIER_ID] = @Original_SUPPLIER_ID) AND ([CURRENCY_ID] = @Original_CURRENCY_ID) AND ((@IsNull_BANK_ID = 1 AND [BANK_ID] IS NULL) OR ([BANK_ID] = @Original_BANK_ID)) AND ((@IsNull_SUPPLIER_ACCOUNT_NO = 1 AND [SUPPLIER_ACCOUNT_NO] IS NULL) OR ([SUPPLIER_ACCOUNT_NO] = @Original_SUPPLIER_ACCOUNT_NO)) AND ((@IsNull_SUPPLIER_ACCOUNT_NAME = 1 AND [SUPPLIER_ACCOUNT_NAME] IS NULL) OR ([SUPPLIER_ACCOUNT_NAME] = @Original_SUPPLIER_ACCOUNT_NAME)));
SELECT SUPPLIER_ID, CURRENCY_ID, BANK_ID, SUPPLIER_ACCOUNT_NO, SUPPLIER_ACCOUNT_NAME FROM M_SUPPLIER_ACCOUNT WHERE (CURRENCY_ID = @CURRENCY_ID) AND (SUPPLIER_ID = @SUPPLIER_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CURRENCY_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ACCOUNT_NO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUPPLIER_ACCOUNT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CURRENCY_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_ACCOUNT_NO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ACCOUNT_NO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUPPLIER_ACCOUNT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUPPLIER_ACCOUNT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUPPLIER_ACCOUNT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SUPPLIER_ID, CURRENCY_ID, BANK_ID, SUPPLIER_ACCOUNT_NO, SUPPLIER_ACCOUNT_N" +
                "AME FROM dbo.M_SUPPLIER_ACCOUNT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_SUPPLIER_ACCOUNTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_SUPPLIER_ACCOUNTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_SUPPLIER_ACCOUNTDataTable dataTable = new DataSet1.M_SUPPLIER_ACCOUNTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_SUPPLIER_ACCOUNTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_SUPPLIER_ACCOUNT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SUPPLIER_ID, string Original_CURRENCY_ID, string Original_BANK_ID, string Original_SUPPLIER_ACCOUNT_NO, string Original_SUPPLIER_ACCOUNT_NAME) {
            if ((Original_SUPPLIER_ID == null)) {
                throw new System.ArgumentNullException("Original_SUPPLIER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SUPPLIER_ID));
            }
            if ((Original_CURRENCY_ID == null)) {
                throw new System.ArgumentNullException("Original_CURRENCY_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CURRENCY_ID));
            }
            if ((Original_BANK_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_BANK_ID));
            }
            if ((Original_SUPPLIER_ACCOUNT_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_SUPPLIER_ACCOUNT_NO));
            }
            if ((Original_SUPPLIER_ACCOUNT_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SUPPLIER_ACCOUNT_NAME));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SUPPLIER_ID, string CURRENCY_ID, string BANK_ID, string SUPPLIER_ACCOUNT_NO, string SUPPLIER_ACCOUNT_NAME) {
            if ((SUPPLIER_ID == null)) {
                throw new System.ArgumentNullException("SUPPLIER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SUPPLIER_ID));
            }
            if ((CURRENCY_ID == null)) {
                throw new System.ArgumentNullException("CURRENCY_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CURRENCY_ID));
            }
            if ((BANK_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BANK_ID));
            }
            if ((SUPPLIER_ACCOUNT_NO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SUPPLIER_ACCOUNT_NO));
            }
            if ((SUPPLIER_ACCOUNT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SUPPLIER_ACCOUNT_NAME));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SUPPLIER_ID, string CURRENCY_ID, string BANK_ID, string SUPPLIER_ACCOUNT_NO, string SUPPLIER_ACCOUNT_NAME, string Original_SUPPLIER_ID, string Original_CURRENCY_ID, string Original_BANK_ID, string Original_SUPPLIER_ACCOUNT_NO, string Original_SUPPLIER_ACCOUNT_NAME) {
            if ((SUPPLIER_ID == null)) {
                throw new System.ArgumentNullException("SUPPLIER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SUPPLIER_ID));
            }
            if ((CURRENCY_ID == null)) {
                throw new System.ArgumentNullException("CURRENCY_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CURRENCY_ID));
            }
            if ((BANK_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BANK_ID));
            }
            if ((SUPPLIER_ACCOUNT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SUPPLIER_ACCOUNT_NO));
            }
            if ((SUPPLIER_ACCOUNT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SUPPLIER_ACCOUNT_NAME));
            }
            if ((Original_SUPPLIER_ID == null)) {
                throw new System.ArgumentNullException("Original_SUPPLIER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SUPPLIER_ID));
            }
            if ((Original_CURRENCY_ID == null)) {
                throw new System.ArgumentNullException("Original_CURRENCY_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_CURRENCY_ID));
            }
            if ((Original_BANK_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_BANK_ID));
            }
            if ((Original_SUPPLIER_ACCOUNT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_SUPPLIER_ACCOUNT_NO));
            }
            if ((Original_SUPPLIER_ACCOUNT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_SUPPLIER_ACCOUNT_NAME));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class M_USERTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public M_USERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "M_USER";
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            tableMapping.ColumnMappings.Add("USER_PASSWORD", "USER_PASSWORD");
            tableMapping.ColumnMappings.Add("USER_STATUS", "USER_STATUS");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[M_USER] WHERE (([USER_NAME] = @Original_USER_NAME) AND ((@IsNull_USER_PASSWORD = 1 AND [USER_PASSWORD] IS NULL) OR ([USER_PASSWORD] = @Original_USER_PASSWORD)) AND ((@IsNull_USER_STATUS = 1 AND [USER_STATUS] IS NULL) OR ([USER_STATUS] = @Original_USER_STATUS)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_USER_PASSWORD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USER_PASSWORD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_USER_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USER_STATUS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[M_USER] ([USER_NAME], [USER_PASSWORD], [USER_STATUS], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@USER_NAME, @USER_PASSWORD, @USER_STATUS, @MODIFIED_BY, @MODIFIED_DATE);
SELECT USER_NAME, USER_PASSWORD, USER_STATUS, MODIFIED_BY, MODIFIED_DATE FROM M_USER WHERE (USER_NAME = @USER_NAME)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USER_PASSWORD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USER_STATUS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[M_USER] SET [USER_NAME] = @USER_NAME, [USER_PASSWORD] = @USER_PASSWORD, [USER_STATUS] = @USER_STATUS, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([USER_NAME] = @Original_USER_NAME) AND ((@IsNull_USER_PASSWORD = 1 AND [USER_PASSWORD] IS NULL) OR ([USER_PASSWORD] = @Original_USER_PASSWORD)) AND ((@IsNull_USER_STATUS = 1 AND [USER_STATUS] IS NULL) OR ([USER_STATUS] = @Original_USER_STATUS)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT USER_NAME, USER_PASSWORD, USER_STATUS, MODIFIED_BY, MODIFIED_DATE FROM M_USER WHERE (USER_NAME = @USER_NAME)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USER_PASSWORD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USER_STATUS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_USER_PASSWORD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USER_PASSWORD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_PASSWORD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_USER_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USER_STATUS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT USER_NAME, USER_PASSWORD, USER_STATUS, MODIFIED_BY, MODIFIED_DATE FROM dbo" +
                ".M_USER";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.M_USERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.M_USERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.M_USERDataTable dataTable = new DataSet1.M_USERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.M_USERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "M_USER");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_USER_NAME, string Original_USER_PASSWORD, System.Nullable<bool> Original_USER_STATUS, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_USER_NAME == null)) {
                throw new System.ArgumentNullException("Original_USER_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_USER_NAME));
            }
            if ((Original_USER_PASSWORD == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USER_PASSWORD));
            }
            if ((Original_USER_STATUS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_USER_STATUS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string USER_NAME, string USER_PASSWORD, System.Nullable<bool> USER_STATUS, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((USER_NAME == null)) {
                throw new System.ArgumentNullException("USER_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(USER_NAME));
            }
            if ((USER_PASSWORD == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USER_PASSWORD));
            }
            if ((USER_STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(USER_STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string USER_NAME, string USER_PASSWORD, System.Nullable<bool> USER_STATUS, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_USER_NAME, string Original_USER_PASSWORD, System.Nullable<bool> Original_USER_STATUS, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((USER_NAME == null)) {
                throw new System.ArgumentNullException("USER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(USER_NAME));
            }
            if ((USER_PASSWORD == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USER_PASSWORD));
            }
            if ((USER_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(USER_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_USER_NAME == null)) {
                throw new System.ArgumentNullException("Original_USER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_USER_NAME));
            }
            if ((Original_USER_PASSWORD == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_USER_PASSWORD));
            }
            if ((Original_USER_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_USER_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_APOTEK_SETTINGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_APOTEK_SETTINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_APOTEK_SETTING";
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("DEFAULT_PIUTANG_CREDIT_LONG", "DEFAULT_PIUTANG_CREDIT_LONG");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_APOTEK_SETTING] WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_DEFAULT_PIUTANG_CREDIT_LONG = 1 AND [DEFAULT_PIUTANG_CREDIT_LONG] IS NULL) OR ([DEFAULT_PIUTANG_CREDIT_LONG] = @Original_DEFAULT_PIUTANG_CREDIT_LONG)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_APOTEK_SETTING] ([SETTING_ID], [DEFAULT_PIUTANG_CREDIT_LONG], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@SETTING_ID, @DEFAULT_PIUTANG_CREDIT_LONG, @MODIFIED_BY, @MODIFIED_DATE);
SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, MODIFIED_BY, MODIFIED_DATE FROM T_APOTEK_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_APOTEK_SETTING] SET [SETTING_ID] = @SETTING_ID, [DEFAULT_PIUTANG_CREDIT_LONG] = @DEFAULT_PIUTANG_CREDIT_LONG, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_DEFAULT_PIUTANG_CREDIT_LONG = 1 AND [DEFAULT_PIUTANG_CREDIT_LONG] IS NULL) OR ([DEFAULT_PIUTANG_CREDIT_LONG] = @Original_DEFAULT_PIUTANG_CREDIT_LONG)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, MODIFIED_BY, MODIFIED_DATE FROM T_APOTEK_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, MODIFIED_BY, MODIFIED_DATE FROM d" +
                "bo.T_APOTEK_SETTING";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_APOTEK_SETTINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_APOTEK_SETTINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_APOTEK_SETTINGDataTable dataTable = new DataSet1.T_APOTEK_SETTINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_APOTEK_SETTINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_APOTEK_SETTING");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SETTING_ID, System.Nullable<int> Original_DEFAULT_PIUTANG_CREDIT_LONG, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SETTING_ID, System.Nullable<int> DEFAULT_PIUTANG_CREDIT_LONG, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SETTING_ID, System.Nullable<int> DEFAULT_PIUTANG_CREDIT_LONG, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_SETTING_ID, System.Nullable<int> Original_DEFAULT_PIUTANG_CREDIT_LONG, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_BILLIARD_SETTINGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_BILLIARD_SETTINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_BILLIARD_SETTING";
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("BILIARD_ITEM_PRICE", "BILIARD_ITEM_PRICE");
            tableMapping.ColumnMappings.Add("BILIARD_ITEM_PRICE_VIP", "BILIARD_ITEM_PRICE_VIP");
            tableMapping.ColumnMappings.Add("BILIARD_ITEM_PRICE_MINI", "BILIARD_ITEM_PRICE_MINI");
            tableMapping.ColumnMappings.Add("QUIT_TIMEOUT", "QUIT_TIMEOUT");
            tableMapping.ColumnMappings.Add("MINIMUM_PLAY", "MINIMUM_PLAY");
            tableMapping.ColumnMappings.Add("FULLFILL_PRICE", "FULLFILL_PRICE");
            tableMapping.ColumnMappings.Add("REFEREE_BONUS", "REFEREE_BONUS");
            tableMapping.ColumnMappings.Add("BACK_COLOR", "BACK_COLOR");
            tableMapping.ColumnMappings.Add("DESK_BACK_COLOR", "DESK_BACK_COLOR");
            tableMapping.ColumnMappings.Add("DESK_FONT_NAME", "DESK_FONT_NAME");
            tableMapping.ColumnMappings.Add("DESK_FONT_SIZE", "DESK_FONT_SIZE");
            tableMapping.ColumnMappings.Add("DESK_FONT_BOLD", "DESK_FONT_BOLD");
            tableMapping.ColumnMappings.Add("DESK_FONT_ITALIC", "DESK_FONT_ITALIC");
            tableMapping.ColumnMappings.Add("DESK_FONT_UNDERLINE", "DESK_FONT_UNDERLINE");
            tableMapping.ColumnMappings.Add("DESK_FONT_COLOR", "DESK_FONT_COLOR");
            tableMapping.ColumnMappings.Add("DESK_WIDTH", "DESK_WIDTH");
            tableMapping.ColumnMappings.Add("DESK_HEIGHT", "DESK_HEIGHT");
            tableMapping.ColumnMappings.Add("DESK_BACK_COLOR1", "DESK_BACK_COLOR1");
            tableMapping.ColumnMappings.Add("DESK_FONT_NAME1", "DESK_FONT_NAME1");
            tableMapping.ColumnMappings.Add("DESK_FONT_SIZE1", "DESK_FONT_SIZE1");
            tableMapping.ColumnMappings.Add("DESK_FONT_BOLD1", "DESK_FONT_BOLD1");
            tableMapping.ColumnMappings.Add("DESK_FONT_ITALIC1", "DESK_FONT_ITALIC1");
            tableMapping.ColumnMappings.Add("DESK_FONT_UNDERLINE1", "DESK_FONT_UNDERLINE1");
            tableMapping.ColumnMappings.Add("DESK_FONT_COLOR1", "DESK_FONT_COLOR1");
            tableMapping.ColumnMappings.Add("DESK_WIDTH1", "DESK_WIDTH1");
            tableMapping.ColumnMappings.Add("DESK_HEIGHT1", "DESK_HEIGHT1");
            tableMapping.ColumnMappings.Add("DESK_BACK_COLOR2", "DESK_BACK_COLOR2");
            tableMapping.ColumnMappings.Add("DESK_FONT_NAME2", "DESK_FONT_NAME2");
            tableMapping.ColumnMappings.Add("DESK_FONT_SIZE2", "DESK_FONT_SIZE2");
            tableMapping.ColumnMappings.Add("DESK_FONT_BOLD2", "DESK_FONT_BOLD2");
            tableMapping.ColumnMappings.Add("DESK_FONT_ITALIC2", "DESK_FONT_ITALIC2");
            tableMapping.ColumnMappings.Add("DESK_FONT_UNDERLINE2", "DESK_FONT_UNDERLINE2");
            tableMapping.ColumnMappings.Add("DESK_FONT_COLOR2", "DESK_FONT_COLOR2");
            tableMapping.ColumnMappings.Add("DESK_WIDTH2", "DESK_WIDTH2");
            tableMapping.ColumnMappings.Add("DESK_HEIGHT2", "DESK_HEIGHT2");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T_BILLIARD_SETTING] WHERE (([SETTING_ID] = @Original_SETTING_I" +
                "D) AND ((@IsNull_BILIARD_ITEM_PRICE = 1 AND [BILIARD_ITEM_PRICE] IS NULL) OR ([B" +
                "ILIARD_ITEM_PRICE] = @Original_BILIARD_ITEM_PRICE)) AND ((@IsNull_BILIARD_ITEM_P" +
                "RICE_VIP = 1 AND [BILIARD_ITEM_PRICE_VIP] IS NULL) OR ([BILIARD_ITEM_PRICE_VIP] " +
                "= @Original_BILIARD_ITEM_PRICE_VIP)) AND ((@IsNull_BILIARD_ITEM_PRICE_MINI = 1 A" +
                "ND [BILIARD_ITEM_PRICE_MINI] IS NULL) OR ([BILIARD_ITEM_PRICE_MINI] = @Original_" +
                "BILIARD_ITEM_PRICE_MINI)) AND ((@IsNull_QUIT_TIMEOUT = 1 AND [QUIT_TIMEOUT] IS N" +
                "ULL) OR ([QUIT_TIMEOUT] = @Original_QUIT_TIMEOUT)) AND ((@IsNull_MINIMUM_PLAY = " +
                "1 AND [MINIMUM_PLAY] IS NULL) OR ([MINIMUM_PLAY] = @Original_MINIMUM_PLAY)) AND " +
                "((@IsNull_FULLFILL_PRICE = 1 AND [FULLFILL_PRICE] IS NULL) OR ([FULLFILL_PRICE] " +
                "= @Original_FULLFILL_PRICE)) AND ((@IsNull_REFEREE_BONUS = 1 AND [REFEREE_BONUS]" +
                " IS NULL) OR ([REFEREE_BONUS] = @Original_REFEREE_BONUS)) AND ((@IsNull_BACK_COL" +
                "OR = 1 AND [BACK_COLOR] IS NULL) OR ([BACK_COLOR] = @Original_BACK_COLOR)) AND (" +
                "(@IsNull_DESK_BACK_COLOR = 1 AND [DESK_BACK_COLOR] IS NULL) OR ([DESK_BACK_COLOR" +
                "] = @Original_DESK_BACK_COLOR)) AND ((@IsNull_DESK_FONT_NAME = 1 AND [DESK_FONT_" +
                "NAME] IS NULL) OR ([DESK_FONT_NAME] = @Original_DESK_FONT_NAME)) AND ((@IsNull_D" +
                "ESK_FONT_SIZE = 1 AND [DESK_FONT_SIZE] IS NULL) OR ([DESK_FONT_SIZE] = @Original" +
                "_DESK_FONT_SIZE)) AND ((@IsNull_DESK_FONT_BOLD = 1 AND [DESK_FONT_BOLD] IS NULL)" +
                " OR ([DESK_FONT_BOLD] = @Original_DESK_FONT_BOLD)) AND ((@IsNull_DESK_FONT_ITALI" +
                "C = 1 AND [DESK_FONT_ITALIC] IS NULL) OR ([DESK_FONT_ITALIC] = @Original_DESK_FO" +
                "NT_ITALIC)) AND ((@IsNull_DESK_FONT_UNDERLINE = 1 AND [DESK_FONT_UNDERLINE] IS N" +
                "ULL) OR ([DESK_FONT_UNDERLINE] = @Original_DESK_FONT_UNDERLINE)) AND ((@IsNull_D" +
                "ESK_FONT_COLOR = 1 AND [DESK_FONT_COLOR] IS NULL) OR ([DESK_FONT_COLOR] = @Origi" +
                "nal_DESK_FONT_COLOR)) AND ((@IsNull_DESK_WIDTH = 1 AND [DESK_WIDTH] IS NULL) OR " +
                "([DESK_WIDTH] = @Original_DESK_WIDTH)) AND ((@IsNull_DESK_HEIGHT = 1 AND [DESK_H" +
                "EIGHT] IS NULL) OR ([DESK_HEIGHT] = @Original_DESK_HEIGHT)) AND ((@IsNull_DESK_B" +
                "ACK_COLOR1 = 1 AND [DESK_BACK_COLOR1] IS NULL) OR ([DESK_BACK_COLOR1] = @Origina" +
                "l_DESK_BACK_COLOR1)) AND ((@IsNull_DESK_FONT_NAME1 = 1 AND [DESK_FONT_NAME1] IS " +
                "NULL) OR ([DESK_FONT_NAME1] = @Original_DESK_FONT_NAME1)) AND ((@IsNull_DESK_FON" +
                "T_SIZE1 = 1 AND [DESK_FONT_SIZE1] IS NULL) OR ([DESK_FONT_SIZE1] = @Original_DES" +
                "K_FONT_SIZE1)) AND ((@IsNull_DESK_FONT_BOLD1 = 1 AND [DESK_FONT_BOLD1] IS NULL) " +
                "OR ([DESK_FONT_BOLD1] = @Original_DESK_FONT_BOLD1)) AND ((@IsNull_DESK_FONT_ITAL" +
                "IC1 = 1 AND [DESK_FONT_ITALIC1] IS NULL) OR ([DESK_FONT_ITALIC1] = @Original_DES" +
                "K_FONT_ITALIC1)) AND ((@IsNull_DESK_FONT_UNDERLINE1 = 1 AND [DESK_FONT_UNDERLINE" +
                "1] IS NULL) OR ([DESK_FONT_UNDERLINE1] = @Original_DESK_FONT_UNDERLINE1)) AND ((" +
                "@IsNull_DESK_FONT_COLOR1 = 1 AND [DESK_FONT_COLOR1] IS NULL) OR ([DESK_FONT_COLO" +
                "R1] = @Original_DESK_FONT_COLOR1)) AND ((@IsNull_DESK_WIDTH1 = 1 AND [DESK_WIDTH" +
                "1] IS NULL) OR ([DESK_WIDTH1] = @Original_DESK_WIDTH1)) AND ((@IsNull_DESK_HEIGH" +
                "T1 = 1 AND [DESK_HEIGHT1] IS NULL) OR ([DESK_HEIGHT1] = @Original_DESK_HEIGHT1))" +
                " AND ((@IsNull_DESK_BACK_COLOR2 = 1 AND [DESK_BACK_COLOR2] IS NULL) OR ([DESK_BA" +
                "CK_COLOR2] = @Original_DESK_BACK_COLOR2)) AND ((@IsNull_DESK_FONT_NAME2 = 1 AND " +
                "[DESK_FONT_NAME2] IS NULL) OR ([DESK_FONT_NAME2] = @Original_DESK_FONT_NAME2)) A" +
                "ND ((@IsNull_DESK_FONT_SIZE2 = 1 AND [DESK_FONT_SIZE2] IS NULL) OR ([DESK_FONT_S" +
                "IZE2] = @Original_DESK_FONT_SIZE2)) AND ((@IsNull_DESK_FONT_BOLD2 = 1 AND [DESK_" +
                "FONT_BOLD2] IS NULL) OR ([DESK_FONT_BOLD2] = @Original_DESK_FONT_BOLD2)) AND ((@" +
                "IsNull_DESK_FONT_ITALIC2 = 1 AND [DESK_FONT_ITALIC2] IS NULL) OR ([DESK_FONT_ITA" +
                "LIC2] = @Original_DESK_FONT_ITALIC2)) AND ((@IsNull_DESK_FONT_UNDERLINE2 = 1 AND" +
                " [DESK_FONT_UNDERLINE2] IS NULL) OR ([DESK_FONT_UNDERLINE2] = @Original_DESK_FON" +
                "T_UNDERLINE2)) AND ((@IsNull_DESK_FONT_COLOR2 = 1 AND [DESK_FONT_COLOR2] IS NULL" +
                ") OR ([DESK_FONT_COLOR2] = @Original_DESK_FONT_COLOR2)) AND ((@IsNull_DESK_WIDTH" +
                "2 = 1 AND [DESK_WIDTH2] IS NULL) OR ([DESK_WIDTH2] = @Original_DESK_WIDTH2)) AND" +
                " ((@IsNull_DESK_HEIGHT2 = 1 AND [DESK_HEIGHT2] IS NULL) OR ([DESK_HEIGHT2] = @Or" +
                "iginal_DESK_HEIGHT2)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) O" +
                "R ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [" +
                "MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BILIARD_ITEM_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BILIARD_ITEM_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BILIARD_ITEM_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BILIARD_ITEM_PRICE_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BILIARD_ITEM_PRICE_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BILIARD_ITEM_PRICE_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BILIARD_ITEM_PRICE_MINI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BILIARD_ITEM_PRICE_MINI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BILIARD_ITEM_PRICE_MINI", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE_MINI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_QUIT_TIMEOUT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "QUIT_TIMEOUT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_QUIT_TIMEOUT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "QUIT_TIMEOUT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MINIMUM_PLAY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_PLAY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MINIMUM_PLAY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MINIMUM_PLAY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_FULLFILL_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FULLFILL_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FULLFILL_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "FULLFILL_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFEREE_BONUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFEREE_BONUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFEREE_BONUS", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_BONUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BACK_COLOR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BACK_COLOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_SIZE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_SIZE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_SIZE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_BOLD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_BOLD", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_ITALIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_ITALIC", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_UNDERLINE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_UNDERLINE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_WIDTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_WIDTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_BACK_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_BACK_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_NAME1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_NAME1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_SIZE1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_SIZE1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_SIZE1", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_BOLD1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_BOLD1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_ITALIC1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_ITALIC1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_UNDERLINE1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_UNDERLINE1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_WIDTH1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_WIDTH1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_HEIGHT1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_HEIGHT1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_BACK_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_BACK_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_NAME2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_NAME2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_SIZE2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_SIZE2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_SIZE2", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_BOLD2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_BOLD2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_ITALIC2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_ITALIC2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_UNDERLINE2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_UNDERLINE2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_WIDTH2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_WIDTH2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_HEIGHT2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_HEIGHT2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_BILLIARD_SETTING] ([SETTING_ID], [BILIARD_ITEM_PRICE], [BILI" +
                "ARD_ITEM_PRICE_VIP], [BILIARD_ITEM_PRICE_MINI], [QUIT_TIMEOUT], [MINIMUM_PLAY], " +
                "[FULLFILL_PRICE], [REFEREE_BONUS], [BACK_COLOR], [DESK_BACK_COLOR], [DESK_FONT_N" +
                "AME], [DESK_FONT_SIZE], [DESK_FONT_BOLD], [DESK_FONT_ITALIC], [DESK_FONT_UNDERLI" +
                "NE], [DESK_FONT_COLOR], [DESK_WIDTH], [DESK_HEIGHT], [DESK_BACK_COLOR1], [DESK_F" +
                "ONT_NAME1], [DESK_FONT_SIZE1], [DESK_FONT_BOLD1], [DESK_FONT_ITALIC1], [DESK_FON" +
                "T_UNDERLINE1], [DESK_FONT_COLOR1], [DESK_WIDTH1], [DESK_HEIGHT1], [DESK_BACK_COL" +
                "OR2], [DESK_FONT_NAME2], [DESK_FONT_SIZE2], [DESK_FONT_BOLD2], [DESK_FONT_ITALIC" +
                "2], [DESK_FONT_UNDERLINE2], [DESK_FONT_COLOR2], [DESK_WIDTH2], [DESK_HEIGHT2], [" +
                "MODIFIED_BY], [MODIFIED_DATE]) VALUES (@SETTING_ID, @BILIARD_ITEM_PRICE, @BILIAR" +
                "D_ITEM_PRICE_VIP, @BILIARD_ITEM_PRICE_MINI, @QUIT_TIMEOUT, @MINIMUM_PLAY, @FULLF" +
                "ILL_PRICE, @REFEREE_BONUS, @BACK_COLOR, @DESK_BACK_COLOR, @DESK_FONT_NAME, @DESK" +
                "_FONT_SIZE, @DESK_FONT_BOLD, @DESK_FONT_ITALIC, @DESK_FONT_UNDERLINE, @DESK_FONT" +
                "_COLOR, @DESK_WIDTH, @DESK_HEIGHT, @DESK_BACK_COLOR1, @DESK_FONT_NAME1, @DESK_FO" +
                "NT_SIZE1, @DESK_FONT_BOLD1, @DESK_FONT_ITALIC1, @DESK_FONT_UNDERLINE1, @DESK_FON" +
                "T_COLOR1, @DESK_WIDTH1, @DESK_HEIGHT1, @DESK_BACK_COLOR2, @DESK_FONT_NAME2, @DES" +
                "K_FONT_SIZE2, @DESK_FONT_BOLD2, @DESK_FONT_ITALIC2, @DESK_FONT_UNDERLINE2, @DESK" +
                "_FONT_COLOR2, @DESK_WIDTH2, @DESK_HEIGHT2, @MODIFIED_BY, @MODIFIED_DATE);\r\nSELEC" +
                "T SETTING_ID, BILIARD_ITEM_PRICE, BILIARD_ITEM_PRICE_VIP, BILIARD_ITEM_PRICE_MIN" +
                "I, QUIT_TIMEOUT, MINIMUM_PLAY, FULLFILL_PRICE, REFEREE_BONUS, BACK_COLOR, DESK_B" +
                "ACK_COLOR, DESK_FONT_NAME, DESK_FONT_SIZE, DESK_FONT_BOLD, DESK_FONT_ITALIC, DES" +
                "K_FONT_UNDERLINE, DESK_FONT_COLOR, DESK_WIDTH, DESK_HEIGHT, DESK_BACK_COLOR1, DE" +
                "SK_FONT_NAME1, DESK_FONT_SIZE1, DESK_FONT_BOLD1, DESK_FONT_ITALIC1, DESK_FONT_UN" +
                "DERLINE1, DESK_FONT_COLOR1, DESK_WIDTH1, DESK_HEIGHT1, DESK_BACK_COLOR2, DESK_FO" +
                "NT_NAME2, DESK_FONT_SIZE2, DESK_FONT_BOLD2, DESK_FONT_ITALIC2, DESK_FONT_UNDERLI" +
                "NE2, DESK_FONT_COLOR2, DESK_WIDTH2, DESK_HEIGHT2, MODIFIED_BY, MODIFIED_DATE FRO" +
                "M T_BILLIARD_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BILIARD_ITEM_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BILIARD_ITEM_PRICE_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BILIARD_ITEM_PRICE_MINI", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE_MINI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@QUIT_TIMEOUT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "QUIT_TIMEOUT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MINIMUM_PLAY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MINIMUM_PLAY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FULLFILL_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "FULLFILL_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFEREE_BONUS", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_BONUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BACK_COLOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_SIZE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_BOLD", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_ITALIC", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_UNDERLINE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_WIDTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_BACK_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_NAME1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_SIZE1", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_BOLD1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_ITALIC1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_UNDERLINE1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_WIDTH1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_HEIGHT1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_BACK_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_NAME2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_SIZE2", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_BOLD2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_ITALIC2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_UNDERLINE2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_WIDTH2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_HEIGHT2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_BILLIARD_SETTING] SET [SETTING_ID] = @SETTING_ID, [BILIARD_ITEM_P" +
                "RICE] = @BILIARD_ITEM_PRICE, [BILIARD_ITEM_PRICE_VIP] = @BILIARD_ITEM_PRICE_VIP," +
                " [BILIARD_ITEM_PRICE_MINI] = @BILIARD_ITEM_PRICE_MINI, [QUIT_TIMEOUT] = @QUIT_TI" +
                "MEOUT, [MINIMUM_PLAY] = @MINIMUM_PLAY, [FULLFILL_PRICE] = @FULLFILL_PRICE, [REFE" +
                "REE_BONUS] = @REFEREE_BONUS, [BACK_COLOR] = @BACK_COLOR, [DESK_BACK_COLOR] = @DE" +
                "SK_BACK_COLOR, [DESK_FONT_NAME] = @DESK_FONT_NAME, [DESK_FONT_SIZE] = @DESK_FONT" +
                "_SIZE, [DESK_FONT_BOLD] = @DESK_FONT_BOLD, [DESK_FONT_ITALIC] = @DESK_FONT_ITALI" +
                "C, [DESK_FONT_UNDERLINE] = @DESK_FONT_UNDERLINE, [DESK_FONT_COLOR] = @DESK_FONT_" +
                "COLOR, [DESK_WIDTH] = @DESK_WIDTH, [DESK_HEIGHT] = @DESK_HEIGHT, [DESK_BACK_COLO" +
                "R1] = @DESK_BACK_COLOR1, [DESK_FONT_NAME1] = @DESK_FONT_NAME1, [DESK_FONT_SIZE1]" +
                " = @DESK_FONT_SIZE1, [DESK_FONT_BOLD1] = @DESK_FONT_BOLD1, [DESK_FONT_ITALIC1] =" +
                " @DESK_FONT_ITALIC1, [DESK_FONT_UNDERLINE1] = @DESK_FONT_UNDERLINE1, [DESK_FONT_" +
                "COLOR1] = @DESK_FONT_COLOR1, [DESK_WIDTH1] = @DESK_WIDTH1, [DESK_HEIGHT1] = @DES" +
                "K_HEIGHT1, [DESK_BACK_COLOR2] = @DESK_BACK_COLOR2, [DESK_FONT_NAME2] = @DESK_FON" +
                "T_NAME2, [DESK_FONT_SIZE2] = @DESK_FONT_SIZE2, [DESK_FONT_BOLD2] = @DESK_FONT_BO" +
                "LD2, [DESK_FONT_ITALIC2] = @DESK_FONT_ITALIC2, [DESK_FONT_UNDERLINE2] = @DESK_FO" +
                "NT_UNDERLINE2, [DESK_FONT_COLOR2] = @DESK_FONT_COLOR2, [DESK_WIDTH2] = @DESK_WID" +
                "TH2, [DESK_HEIGHT2] = @DESK_HEIGHT2, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DAT" +
                "E] = @MODIFIED_DATE WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_B" +
                "ILIARD_ITEM_PRICE = 1 AND [BILIARD_ITEM_PRICE] IS NULL) OR ([BILIARD_ITEM_PRICE]" +
                " = @Original_BILIARD_ITEM_PRICE)) AND ((@IsNull_BILIARD_ITEM_PRICE_VIP = 1 AND [" +
                "BILIARD_ITEM_PRICE_VIP] IS NULL) OR ([BILIARD_ITEM_PRICE_VIP] = @Original_BILIAR" +
                "D_ITEM_PRICE_VIP)) AND ((@IsNull_BILIARD_ITEM_PRICE_MINI = 1 AND [BILIARD_ITEM_P" +
                "RICE_MINI] IS NULL) OR ([BILIARD_ITEM_PRICE_MINI] = @Original_BILIARD_ITEM_PRICE" +
                "_MINI)) AND ((@IsNull_QUIT_TIMEOUT = 1 AND [QUIT_TIMEOUT] IS NULL) OR ([QUIT_TIM" +
                "EOUT] = @Original_QUIT_TIMEOUT)) AND ((@IsNull_MINIMUM_PLAY = 1 AND [MINIMUM_PLA" +
                "Y] IS NULL) OR ([MINIMUM_PLAY] = @Original_MINIMUM_PLAY)) AND ((@IsNull_FULLFILL" +
                "_PRICE = 1 AND [FULLFILL_PRICE] IS NULL) OR ([FULLFILL_PRICE] = @Original_FULLFI" +
                "LL_PRICE)) AND ((@IsNull_REFEREE_BONUS = 1 AND [REFEREE_BONUS] IS NULL) OR ([REF" +
                "EREE_BONUS] = @Original_REFEREE_BONUS)) AND ((@IsNull_BACK_COLOR = 1 AND [BACK_C" +
                "OLOR] IS NULL) OR ([BACK_COLOR] = @Original_BACK_COLOR)) AND ((@IsNull_DESK_BACK" +
                "_COLOR = 1 AND [DESK_BACK_COLOR] IS NULL) OR ([DESK_BACK_COLOR] = @Original_DESK" +
                "_BACK_COLOR)) AND ((@IsNull_DESK_FONT_NAME = 1 AND [DESK_FONT_NAME] IS NULL) OR " +
                "([DESK_FONT_NAME] = @Original_DESK_FONT_NAME)) AND ((@IsNull_DESK_FONT_SIZE = 1 " +
                "AND [DESK_FONT_SIZE] IS NULL) OR ([DESK_FONT_SIZE] = @Original_DESK_FONT_SIZE)) " +
                "AND ((@IsNull_DESK_FONT_BOLD = 1 AND [DESK_FONT_BOLD] IS NULL) OR ([DESK_FONT_BO" +
                "LD] = @Original_DESK_FONT_BOLD)) AND ((@IsNull_DESK_FONT_ITALIC = 1 AND [DESK_FO" +
                "NT_ITALIC] IS NULL) OR ([DESK_FONT_ITALIC] = @Original_DESK_FONT_ITALIC)) AND ((" +
                "@IsNull_DESK_FONT_UNDERLINE = 1 AND [DESK_FONT_UNDERLINE] IS NULL) OR ([DESK_FON" +
                "T_UNDERLINE] = @Original_DESK_FONT_UNDERLINE)) AND ((@IsNull_DESK_FONT_COLOR = 1" +
                " AND [DESK_FONT_COLOR] IS NULL) OR ([DESK_FONT_COLOR] = @Original_DESK_FONT_COLO" +
                "R)) AND ((@IsNull_DESK_WIDTH = 1 AND [DESK_WIDTH] IS NULL) OR ([DESK_WIDTH] = @O" +
                "riginal_DESK_WIDTH)) AND ((@IsNull_DESK_HEIGHT = 1 AND [DESK_HEIGHT] IS NULL) OR" +
                " ([DESK_HEIGHT] = @Original_DESK_HEIGHT)) AND ((@IsNull_DESK_BACK_COLOR1 = 1 AND" +
                " [DESK_BACK_COLOR1] IS NULL) OR ([DESK_BACK_COLOR1] = @Original_DESK_BACK_COLOR1" +
                ")) AND ((@IsNull_DESK_FONT_NAME1 = 1 AND [DESK_FONT_NAME1] IS NULL) OR ([DESK_FO" +
                "NT_NAME1] = @Original_DESK_FONT_NAME1)) AND ((@IsNull_DESK_FONT_SIZE1 = 1 AND [D" +
                "ESK_FONT_SIZE1] IS NULL) OR ([DESK_FONT_SIZE1] = @Original_DESK_FONT_SIZE1)) AND" +
                " ((@IsNull_DESK_FONT_BOLD1 = 1 AND [DESK_FONT_BOLD1] IS NULL) OR ([DESK_FONT_BOL" +
                "D1] = @Original_DESK_FONT_BOLD1)) AND ((@IsNull_DESK_FONT_ITALIC1 = 1 AND [DESK_" +
                "FONT_ITALIC1] IS NULL) OR ([DESK_FONT_ITALIC1] = @Original_DESK_FONT_ITALIC1)) A" +
                "ND ((@IsNull_DESK_FONT_UNDERLINE1 = 1 AND [DESK_FONT_UNDERLINE1] IS NULL) OR ([D" +
                "ESK_FONT_UNDERLINE1] = @Original_DESK_FONT_UNDERLINE1)) AND ((@IsNull_DESK_FONT_" +
                "COLOR1 = 1 AND [DESK_FONT_COLOR1] IS NULL) OR ([DESK_FONT_COLOR1] = @Original_DE" +
                "SK_FONT_COLOR1)) AND ((@IsNull_DESK_WIDTH1 = 1 AND [DESK_WIDTH1] IS NULL) OR ([D" +
                "ESK_WIDTH1] = @Original_DESK_WIDTH1)) AND ((@IsNull_DESK_HEIGHT1 = 1 AND [DESK_H" +
                "EIGHT1] IS NULL) OR ([DESK_HEIGHT1] = @Original_DESK_HEIGHT1)) AND ((@IsNull_DES" +
                "K_BACK_COLOR2 = 1 AND [DESK_BACK_COLOR2] IS NULL) OR ([DESK_BACK_COLOR2] = @Orig" +
                "inal_DESK_BACK_COLOR2)) AND ((@IsNull_DESK_FONT_NAME2 = 1 AND [DESK_FONT_NAME2] " +
                "IS NULL) OR ([DESK_FONT_NAME2] = @Original_DESK_FONT_NAME2)) AND ((@IsNull_DESK_" +
                "FONT_SIZE2 = 1 AND [DESK_FONT_SIZE2] IS NULL) OR ([DESK_FONT_SIZE2] = @Original_" +
                "DESK_FONT_SIZE2)) AND ((@IsNull_DESK_FONT_BOLD2 = 1 AND [DESK_FONT_BOLD2] IS NUL" +
                "L) OR ([DESK_FONT_BOLD2] = @Original_DESK_FONT_BOLD2)) AND ((@IsNull_DESK_FONT_I" +
                "TALIC2 = 1 AND [DESK_FONT_ITALIC2] IS NULL) OR ([DESK_FONT_ITALIC2] = @Original_" +
                "DESK_FONT_ITALIC2)) AND ((@IsNull_DESK_FONT_UNDERLINE2 = 1 AND [DESK_FONT_UNDERL" +
                "INE2] IS NULL) OR ([DESK_FONT_UNDERLINE2] = @Original_DESK_FONT_UNDERLINE2)) AND" +
                " ((@IsNull_DESK_FONT_COLOR2 = 1 AND [DESK_FONT_COLOR2] IS NULL) OR ([DESK_FONT_C" +
                "OLOR2] = @Original_DESK_FONT_COLOR2)) AND ((@IsNull_DESK_WIDTH2 = 1 AND [DESK_WI" +
                "DTH2] IS NULL) OR ([DESK_WIDTH2] = @Original_DESK_WIDTH2)) AND ((@IsNull_DESK_HE" +
                "IGHT2 = 1 AND [DESK_HEIGHT2] IS NULL) OR ([DESK_HEIGHT2] = @Original_DESK_HEIGHT" +
                "2)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] =" +
                " @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS " +
                "NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));\r\nSELECT SETTING_ID, BILI" +
                "ARD_ITEM_PRICE, BILIARD_ITEM_PRICE_VIP, BILIARD_ITEM_PRICE_MINI, QUIT_TIMEOUT, M" +
                "INIMUM_PLAY, FULLFILL_PRICE, REFEREE_BONUS, BACK_COLOR, DESK_BACK_COLOR, DESK_FO" +
                "NT_NAME, DESK_FONT_SIZE, DESK_FONT_BOLD, DESK_FONT_ITALIC, DESK_FONT_UNDERLINE, " +
                "DESK_FONT_COLOR, DESK_WIDTH, DESK_HEIGHT, DESK_BACK_COLOR1, DESK_FONT_NAME1, DES" +
                "K_FONT_SIZE1, DESK_FONT_BOLD1, DESK_FONT_ITALIC1, DESK_FONT_UNDERLINE1, DESK_FON" +
                "T_COLOR1, DESK_WIDTH1, DESK_HEIGHT1, DESK_BACK_COLOR2, DESK_FONT_NAME2, DESK_FON" +
                "T_SIZE2, DESK_FONT_BOLD2, DESK_FONT_ITALIC2, DESK_FONT_UNDERLINE2, DESK_FONT_COL" +
                "OR2, DESK_WIDTH2, DESK_HEIGHT2, MODIFIED_BY, MODIFIED_DATE FROM T_BILLIARD_SETTI" +
                "NG WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BILIARD_ITEM_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BILIARD_ITEM_PRICE_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BILIARD_ITEM_PRICE_MINI", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE_MINI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@QUIT_TIMEOUT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "QUIT_TIMEOUT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MINIMUM_PLAY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MINIMUM_PLAY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FULLFILL_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "FULLFILL_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFEREE_BONUS", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_BONUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BACK_COLOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_SIZE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_BOLD", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_ITALIC", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_UNDERLINE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_WIDTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_BACK_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_NAME1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_SIZE1", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_BOLD1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_ITALIC1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_UNDERLINE1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_WIDTH1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_HEIGHT1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_BACK_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_NAME2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_SIZE2", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_BOLD2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_ITALIC2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_UNDERLINE2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_FONT_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_WIDTH2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_HEIGHT2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BILIARD_ITEM_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BILIARD_ITEM_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BILIARD_ITEM_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BILIARD_ITEM_PRICE_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BILIARD_ITEM_PRICE_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BILIARD_ITEM_PRICE_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BILIARD_ITEM_PRICE_MINI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BILIARD_ITEM_PRICE_MINI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BILIARD_ITEM_PRICE_MINI", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "BILIARD_ITEM_PRICE_MINI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_QUIT_TIMEOUT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "QUIT_TIMEOUT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_QUIT_TIMEOUT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "QUIT_TIMEOUT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MINIMUM_PLAY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MINIMUM_PLAY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MINIMUM_PLAY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MINIMUM_PLAY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_FULLFILL_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "FULLFILL_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_FULLFILL_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "FULLFILL_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFEREE_BONUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFEREE_BONUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFEREE_BONUS", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_BONUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BACK_COLOR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BACK_COLOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_BACK_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_SIZE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_SIZE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_SIZE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_BOLD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_BOLD", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_ITALIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_ITALIC", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_UNDERLINE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_UNDERLINE", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_COLOR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_WIDTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_WIDTH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_BACK_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_BACK_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_NAME1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_NAME1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_SIZE1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_SIZE1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_SIZE1", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_BOLD1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_BOLD1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_ITALIC1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_ITALIC1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_UNDERLINE1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_UNDERLINE1", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_COLOR1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_WIDTH1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_WIDTH1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_HEIGHT1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_HEIGHT1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_BACK_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_BACK_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BACK_COLOR2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_NAME2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_NAME2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_NAME2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_SIZE2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_SIZE2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_SIZE2", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_FONT_SIZE2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_BOLD2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_BOLD2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_BOLD2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_ITALIC2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_ITALIC2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_ITALIC2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_UNDERLINE2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_UNDERLINE2", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_UNDERLINE2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_FONT_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_FONT_COLOR2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_FONT_COLOR2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_WIDTH2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_WIDTH2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_WIDTH2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_HEIGHT2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_HEIGHT2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_HEIGHT2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SETTING_ID, BILIARD_ITEM_PRICE, BILIARD_ITEM_PRICE_VIP, BILIARD_ITEM_PRICE_MINI, QUIT_TIMEOUT, MINIMUM_PLAY, FULLFILL_PRICE, REFEREE_BONUS, BACK_COLOR, DESK_BACK_COLOR, DESK_FONT_NAME, DESK_FONT_SIZE, DESK_FONT_BOLD, DESK_FONT_ITALIC, DESK_FONT_UNDERLINE, DESK_FONT_COLOR, DESK_WIDTH, DESK_HEIGHT, DESK_BACK_COLOR1, DESK_FONT_NAME1, DESK_FONT_SIZE1, DESK_FONT_BOLD1, DESK_FONT_ITALIC1, DESK_FONT_UNDERLINE1, DESK_FONT_COLOR1, DESK_WIDTH1, DESK_HEIGHT1, DESK_BACK_COLOR2, DESK_FONT_NAME2, DESK_FONT_SIZE2, DESK_FONT_BOLD2, DESK_FONT_ITALIC2, DESK_FONT_UNDERLINE2, DESK_FONT_COLOR2, DESK_WIDTH2, DESK_HEIGHT2, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_BILLIARD_SETTING";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_BILLIARD_SETTINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_BILLIARD_SETTINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_BILLIARD_SETTINGDataTable dataTable = new DataSet1.T_BILLIARD_SETTINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_BILLIARD_SETTINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_BILLIARD_SETTING");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_SETTING_ID, 
                    System.Nullable<decimal> Original_BILIARD_ITEM_PRICE, 
                    System.Nullable<decimal> Original_BILIARD_ITEM_PRICE_VIP, 
                    System.Nullable<decimal> Original_BILIARD_ITEM_PRICE_MINI, 
                    System.Nullable<decimal> Original_QUIT_TIMEOUT, 
                    System.Nullable<decimal> Original_MINIMUM_PLAY, 
                    System.Nullable<decimal> Original_FULLFILL_PRICE, 
                    System.Nullable<decimal> Original_REFEREE_BONUS, 
                    System.Nullable<int> Original_BACK_COLOR, 
                    System.Nullable<int> Original_DESK_BACK_COLOR, 
                    string Original_DESK_FONT_NAME, 
                    System.Nullable<decimal> Original_DESK_FONT_SIZE, 
                    System.Nullable<bool> Original_DESK_FONT_BOLD, 
                    System.Nullable<bool> Original_DESK_FONT_ITALIC, 
                    System.Nullable<bool> Original_DESK_FONT_UNDERLINE, 
                    System.Nullable<int> Original_DESK_FONT_COLOR, 
                    System.Nullable<int> Original_DESK_WIDTH, 
                    System.Nullable<int> Original_DESK_HEIGHT, 
                    System.Nullable<int> Original_DESK_BACK_COLOR1, 
                    string Original_DESK_FONT_NAME1, 
                    System.Nullable<decimal> Original_DESK_FONT_SIZE1, 
                    System.Nullable<bool> Original_DESK_FONT_BOLD1, 
                    System.Nullable<bool> Original_DESK_FONT_ITALIC1, 
                    System.Nullable<bool> Original_DESK_FONT_UNDERLINE1, 
                    System.Nullable<int> Original_DESK_FONT_COLOR1, 
                    System.Nullable<int> Original_DESK_WIDTH1, 
                    System.Nullable<int> Original_DESK_HEIGHT1, 
                    System.Nullable<int> Original_DESK_BACK_COLOR2, 
                    string Original_DESK_FONT_NAME2, 
                    System.Nullable<decimal> Original_DESK_FONT_SIZE2, 
                    System.Nullable<bool> Original_DESK_FONT_BOLD2, 
                    System.Nullable<bool> Original_DESK_FONT_ITALIC2, 
                    System.Nullable<bool> Original_DESK_FONT_UNDERLINE2, 
                    System.Nullable<int> Original_DESK_FONT_COLOR2, 
                    System.Nullable<int> Original_DESK_WIDTH2, 
                    System.Nullable<int> Original_DESK_HEIGHT2, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_BILIARD_ITEM_PRICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_BILIARD_ITEM_PRICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_BILIARD_ITEM_PRICE_VIP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_BILIARD_ITEM_PRICE_VIP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_BILIARD_ITEM_PRICE_MINI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_BILIARD_ITEM_PRICE_MINI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_QUIT_TIMEOUT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_QUIT_TIMEOUT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_MINIMUM_PLAY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_MINIMUM_PLAY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_FULLFILL_PRICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_FULLFILL_PRICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_REFEREE_BONUS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_REFEREE_BONUS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_BACK_COLOR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_BACK_COLOR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_DESK_BACK_COLOR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_DESK_BACK_COLOR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_DESK_FONT_NAME));
            }
            if ((Original_DESK_FONT_SIZE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_DESK_FONT_SIZE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_BOLD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_DESK_FONT_BOLD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_ITALIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_DESK_FONT_ITALIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_UNDERLINE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_DESK_FONT_UNDERLINE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_COLOR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_DESK_FONT_COLOR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_DESK_WIDTH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_DESK_WIDTH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_DESK_HEIGHT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_DESK_HEIGHT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_DESK_BACK_COLOR1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_DESK_BACK_COLOR1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_NAME1 == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_DESK_FONT_NAME1));
            }
            if ((Original_DESK_FONT_SIZE1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_DESK_FONT_SIZE1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_BOLD1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_DESK_FONT_BOLD1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_ITALIC1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_DESK_FONT_ITALIC1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_UNDERLINE1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_DESK_FONT_UNDERLINE1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_COLOR1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_DESK_FONT_COLOR1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((Original_DESK_WIDTH1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_DESK_WIDTH1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_DESK_HEIGHT1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((int)(Original_DESK_HEIGHT1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((Original_DESK_BACK_COLOR2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_DESK_BACK_COLOR2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_NAME2 == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_DESK_FONT_NAME2));
            }
            if ((Original_DESK_FONT_SIZE2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_DESK_FONT_SIZE2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_BOLD2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((bool)(Original_DESK_FONT_BOLD2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_ITALIC2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((bool)(Original_DESK_FONT_ITALIC2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_UNDERLINE2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((bool)(Original_DESK_FONT_UNDERLINE2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_COLOR2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_DESK_FONT_COLOR2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = System.DBNull.Value;
            }
            if ((Original_DESK_WIDTH2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_DESK_WIDTH2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = System.DBNull.Value;
            }
            if ((Original_DESK_HEIGHT2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_DESK_HEIGHT2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SETTING_ID, 
                    System.Nullable<decimal> BILIARD_ITEM_PRICE, 
                    System.Nullable<decimal> BILIARD_ITEM_PRICE_VIP, 
                    System.Nullable<decimal> BILIARD_ITEM_PRICE_MINI, 
                    System.Nullable<decimal> QUIT_TIMEOUT, 
                    System.Nullable<decimal> MINIMUM_PLAY, 
                    System.Nullable<decimal> FULLFILL_PRICE, 
                    System.Nullable<decimal> REFEREE_BONUS, 
                    System.Nullable<int> BACK_COLOR, 
                    System.Nullable<int> DESK_BACK_COLOR, 
                    string DESK_FONT_NAME, 
                    System.Nullable<decimal> DESK_FONT_SIZE, 
                    System.Nullable<bool> DESK_FONT_BOLD, 
                    System.Nullable<bool> DESK_FONT_ITALIC, 
                    System.Nullable<bool> DESK_FONT_UNDERLINE, 
                    System.Nullable<int> DESK_FONT_COLOR, 
                    System.Nullable<int> DESK_WIDTH, 
                    System.Nullable<int> DESK_HEIGHT, 
                    System.Nullable<int> DESK_BACK_COLOR1, 
                    string DESK_FONT_NAME1, 
                    System.Nullable<decimal> DESK_FONT_SIZE1, 
                    System.Nullable<bool> DESK_FONT_BOLD1, 
                    System.Nullable<bool> DESK_FONT_ITALIC1, 
                    System.Nullable<bool> DESK_FONT_UNDERLINE1, 
                    System.Nullable<int> DESK_FONT_COLOR1, 
                    System.Nullable<int> DESK_WIDTH1, 
                    System.Nullable<int> DESK_HEIGHT1, 
                    System.Nullable<int> DESK_BACK_COLOR2, 
                    string DESK_FONT_NAME2, 
                    System.Nullable<decimal> DESK_FONT_SIZE2, 
                    System.Nullable<bool> DESK_FONT_BOLD2, 
                    System.Nullable<bool> DESK_FONT_ITALIC2, 
                    System.Nullable<bool> DESK_FONT_UNDERLINE2, 
                    System.Nullable<int> DESK_FONT_COLOR2, 
                    System.Nullable<int> DESK_WIDTH2, 
                    System.Nullable<int> DESK_HEIGHT2, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((BILIARD_ITEM_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(BILIARD_ITEM_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((BILIARD_ITEM_PRICE_VIP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(BILIARD_ITEM_PRICE_VIP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((BILIARD_ITEM_PRICE_MINI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(BILIARD_ITEM_PRICE_MINI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((QUIT_TIMEOUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(QUIT_TIMEOUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((MINIMUM_PLAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(MINIMUM_PLAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((FULLFILL_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(FULLFILL_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((REFEREE_BONUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(REFEREE_BONUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((BACK_COLOR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(BACK_COLOR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((DESK_BACK_COLOR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(DESK_BACK_COLOR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DESK_FONT_NAME));
            }
            if ((DESK_FONT_SIZE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(DESK_FONT_SIZE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_BOLD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(DESK_FONT_BOLD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_ITALIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(DESK_FONT_ITALIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_UNDERLINE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(DESK_FONT_UNDERLINE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_COLOR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(DESK_FONT_COLOR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((DESK_WIDTH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(DESK_WIDTH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((DESK_HEIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(DESK_HEIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((DESK_BACK_COLOR1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(DESK_BACK_COLOR1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_NAME1 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(DESK_FONT_NAME1));
            }
            if ((DESK_FONT_SIZE1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(DESK_FONT_SIZE1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_BOLD1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(DESK_FONT_BOLD1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_ITALIC1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(DESK_FONT_ITALIC1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_UNDERLINE1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(DESK_FONT_UNDERLINE1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_COLOR1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(DESK_FONT_COLOR1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((DESK_WIDTH1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(DESK_WIDTH1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((DESK_HEIGHT1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(DESK_HEIGHT1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((DESK_BACK_COLOR2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(DESK_BACK_COLOR2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_NAME2 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(DESK_FONT_NAME2));
            }
            if ((DESK_FONT_SIZE2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(DESK_FONT_SIZE2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_BOLD2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(DESK_FONT_BOLD2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_ITALIC2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(DESK_FONT_ITALIC2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_UNDERLINE2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(DESK_FONT_UNDERLINE2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_COLOR2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(DESK_FONT_COLOR2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((DESK_WIDTH2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(DESK_WIDTH2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((DESK_HEIGHT2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(DESK_HEIGHT2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SETTING_ID, 
                    System.Nullable<decimal> BILIARD_ITEM_PRICE, 
                    System.Nullable<decimal> BILIARD_ITEM_PRICE_VIP, 
                    System.Nullable<decimal> BILIARD_ITEM_PRICE_MINI, 
                    System.Nullable<decimal> QUIT_TIMEOUT, 
                    System.Nullable<decimal> MINIMUM_PLAY, 
                    System.Nullable<decimal> FULLFILL_PRICE, 
                    System.Nullable<decimal> REFEREE_BONUS, 
                    System.Nullable<int> BACK_COLOR, 
                    System.Nullable<int> DESK_BACK_COLOR, 
                    string DESK_FONT_NAME, 
                    System.Nullable<decimal> DESK_FONT_SIZE, 
                    System.Nullable<bool> DESK_FONT_BOLD, 
                    System.Nullable<bool> DESK_FONT_ITALIC, 
                    System.Nullable<bool> DESK_FONT_UNDERLINE, 
                    System.Nullable<int> DESK_FONT_COLOR, 
                    System.Nullable<int> DESK_WIDTH, 
                    System.Nullable<int> DESK_HEIGHT, 
                    System.Nullable<int> DESK_BACK_COLOR1, 
                    string DESK_FONT_NAME1, 
                    System.Nullable<decimal> DESK_FONT_SIZE1, 
                    System.Nullable<bool> DESK_FONT_BOLD1, 
                    System.Nullable<bool> DESK_FONT_ITALIC1, 
                    System.Nullable<bool> DESK_FONT_UNDERLINE1, 
                    System.Nullable<int> DESK_FONT_COLOR1, 
                    System.Nullable<int> DESK_WIDTH1, 
                    System.Nullable<int> DESK_HEIGHT1, 
                    System.Nullable<int> DESK_BACK_COLOR2, 
                    string DESK_FONT_NAME2, 
                    System.Nullable<decimal> DESK_FONT_SIZE2, 
                    System.Nullable<bool> DESK_FONT_BOLD2, 
                    System.Nullable<bool> DESK_FONT_ITALIC2, 
                    System.Nullable<bool> DESK_FONT_UNDERLINE2, 
                    System.Nullable<int> DESK_FONT_COLOR2, 
                    System.Nullable<int> DESK_WIDTH2, 
                    System.Nullable<int> DESK_HEIGHT2, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    string Original_SETTING_ID, 
                    System.Nullable<decimal> Original_BILIARD_ITEM_PRICE, 
                    System.Nullable<decimal> Original_BILIARD_ITEM_PRICE_VIP, 
                    System.Nullable<decimal> Original_BILIARD_ITEM_PRICE_MINI, 
                    System.Nullable<decimal> Original_QUIT_TIMEOUT, 
                    System.Nullable<decimal> Original_MINIMUM_PLAY, 
                    System.Nullable<decimal> Original_FULLFILL_PRICE, 
                    System.Nullable<decimal> Original_REFEREE_BONUS, 
                    System.Nullable<int> Original_BACK_COLOR, 
                    System.Nullable<int> Original_DESK_BACK_COLOR, 
                    string Original_DESK_FONT_NAME, 
                    System.Nullable<decimal> Original_DESK_FONT_SIZE, 
                    System.Nullable<bool> Original_DESK_FONT_BOLD, 
                    System.Nullable<bool> Original_DESK_FONT_ITALIC, 
                    System.Nullable<bool> Original_DESK_FONT_UNDERLINE, 
                    System.Nullable<int> Original_DESK_FONT_COLOR, 
                    System.Nullable<int> Original_DESK_WIDTH, 
                    System.Nullable<int> Original_DESK_HEIGHT, 
                    System.Nullable<int> Original_DESK_BACK_COLOR1, 
                    string Original_DESK_FONT_NAME1, 
                    System.Nullable<decimal> Original_DESK_FONT_SIZE1, 
                    System.Nullable<bool> Original_DESK_FONT_BOLD1, 
                    System.Nullable<bool> Original_DESK_FONT_ITALIC1, 
                    System.Nullable<bool> Original_DESK_FONT_UNDERLINE1, 
                    System.Nullable<int> Original_DESK_FONT_COLOR1, 
                    System.Nullable<int> Original_DESK_WIDTH1, 
                    System.Nullable<int> Original_DESK_HEIGHT1, 
                    System.Nullable<int> Original_DESK_BACK_COLOR2, 
                    string Original_DESK_FONT_NAME2, 
                    System.Nullable<decimal> Original_DESK_FONT_SIZE2, 
                    System.Nullable<bool> Original_DESK_FONT_BOLD2, 
                    System.Nullable<bool> Original_DESK_FONT_ITALIC2, 
                    System.Nullable<bool> Original_DESK_FONT_UNDERLINE2, 
                    System.Nullable<int> Original_DESK_FONT_COLOR2, 
                    System.Nullable<int> Original_DESK_WIDTH2, 
                    System.Nullable<int> Original_DESK_HEIGHT2, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((BILIARD_ITEM_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(BILIARD_ITEM_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((BILIARD_ITEM_PRICE_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(BILIARD_ITEM_PRICE_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((BILIARD_ITEM_PRICE_MINI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(BILIARD_ITEM_PRICE_MINI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((QUIT_TIMEOUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(QUIT_TIMEOUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((MINIMUM_PLAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(MINIMUM_PLAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((FULLFILL_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(FULLFILL_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((REFEREE_BONUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(REFEREE_BONUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((BACK_COLOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(BACK_COLOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((DESK_BACK_COLOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(DESK_BACK_COLOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DESK_FONT_NAME));
            }
            if ((DESK_FONT_SIZE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(DESK_FONT_SIZE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_BOLD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(DESK_FONT_BOLD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_ITALIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(DESK_FONT_ITALIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_UNDERLINE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(DESK_FONT_UNDERLINE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_COLOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(DESK_FONT_COLOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((DESK_WIDTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(DESK_WIDTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((DESK_HEIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(DESK_HEIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((DESK_BACK_COLOR1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(DESK_BACK_COLOR1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(DESK_FONT_NAME1));
            }
            if ((DESK_FONT_SIZE1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(DESK_FONT_SIZE1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_BOLD1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(DESK_FONT_BOLD1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_ITALIC1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(DESK_FONT_ITALIC1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_UNDERLINE1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(DESK_FONT_UNDERLINE1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_COLOR1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(DESK_FONT_COLOR1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((DESK_WIDTH1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(DESK_WIDTH1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((DESK_HEIGHT1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(DESK_HEIGHT1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((DESK_BACK_COLOR2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(DESK_BACK_COLOR2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(DESK_FONT_NAME2));
            }
            if ((DESK_FONT_SIZE2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(DESK_FONT_SIZE2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_BOLD2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(DESK_FONT_BOLD2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_ITALIC2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(DESK_FONT_ITALIC2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_UNDERLINE2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(DESK_FONT_UNDERLINE2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((DESK_FONT_COLOR2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(DESK_FONT_COLOR2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((DESK_WIDTH2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(DESK_WIDTH2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((DESK_HEIGHT2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(DESK_HEIGHT2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_BILIARD_ITEM_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_BILIARD_ITEM_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            if ((Original_BILIARD_ITEM_PRICE_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_BILIARD_ITEM_PRICE_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            if ((Original_BILIARD_ITEM_PRICE_MINI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_BILIARD_ITEM_PRICE_MINI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            if ((Original_QUIT_TIMEOUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_QUIT_TIMEOUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_MINIMUM_PLAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_MINIMUM_PLAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((Original_FULLFILL_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(Original_FULLFILL_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_REFEREE_BONUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(Original_REFEREE_BONUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((Original_BACK_COLOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(Original_BACK_COLOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((Original_DESK_BACK_COLOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_DESK_BACK_COLOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_DESK_FONT_NAME));
            }
            if ((Original_DESK_FONT_SIZE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Original_DESK_FONT_SIZE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_BOLD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_DESK_FONT_BOLD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_ITALIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_DESK_FONT_ITALIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_UNDERLINE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Original_DESK_FONT_UNDERLINE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_COLOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_DESK_FONT_COLOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = System.DBNull.Value;
            }
            if ((Original_DESK_WIDTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_DESK_WIDTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = System.DBNull.Value;
            }
            if ((Original_DESK_HEIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_DESK_HEIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = System.DBNull.Value;
            }
            if ((Original_DESK_BACK_COLOR1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_DESK_BACK_COLOR1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_NAME1 == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_DESK_FONT_NAME1));
            }
            if ((Original_DESK_FONT_SIZE1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(Original_DESK_FONT_SIZE1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_BOLD1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((bool)(Original_DESK_FONT_BOLD1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_ITALIC1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(Original_DESK_FONT_ITALIC1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_UNDERLINE1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((bool)(Original_DESK_FONT_UNDERLINE1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_COLOR1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_DESK_FONT_COLOR1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = System.DBNull.Value;
            }
            if ((Original_DESK_WIDTH1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(Original_DESK_WIDTH1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = System.DBNull.Value;
            }
            if ((Original_DESK_HEIGHT1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Original_DESK_HEIGHT1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = System.DBNull.Value;
            }
            if ((Original_DESK_BACK_COLOR2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(Original_DESK_BACK_COLOR2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_NAME2 == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_DESK_FONT_NAME2));
            }
            if ((Original_DESK_FONT_SIZE2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(Original_DESK_FONT_SIZE2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_BOLD2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((bool)(Original_DESK_FONT_BOLD2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_ITALIC2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(Original_DESK_FONT_ITALIC2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_UNDERLINE2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((bool)(Original_DESK_FONT_UNDERLINE2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = System.DBNull.Value;
            }
            if ((Original_DESK_FONT_COLOR2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((int)(Original_DESK_FONT_COLOR2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = System.DBNull.Value;
            }
            if ((Original_DESK_WIDTH2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((int)(Original_DESK_WIDTH2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = System.DBNull.Value;
            }
            if ((Original_DESK_HEIGHT2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((int)(Original_DESK_HEIGHT2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_CAFE_SETTINGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_CAFE_SETTINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_CAFE_SETTING";
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("EXPORTED_DIR", "EXPORTED_DIR");
            tableMapping.ColumnMappings.Add("DISCOUNT_PASSWORD", "DISCOUNT_PASSWORD");
            tableMapping.ColumnMappings.Add("TELP_NO_SARAN_KRITIK", "TELP_NO_SARAN_KRITIK");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_CAFE_SETTING] WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_EXPORTED_DIR = 1 AND [EXPORTED_DIR] IS NULL) OR ([EXPORTED_DIR] = @Original_EXPORTED_DIR)) AND ((@IsNull_DISCOUNT_PASSWORD = 1 AND [DISCOUNT_PASSWORD] IS NULL) OR ([DISCOUNT_PASSWORD] = @Original_DISCOUNT_PASSWORD)) AND ((@IsNull_TELP_NO_SARAN_KRITIK = 1 AND [TELP_NO_SARAN_KRITIK] IS NULL) OR ([TELP_NO_SARAN_KRITIK] = @Original_TELP_NO_SARAN_KRITIK)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EXPORTED_DIR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPORTED_DIR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EXPORTED_DIR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPORTED_DIR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISCOUNT_PASSWORD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PASSWORD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISCOUNT_PASSWORD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PASSWORD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TELP_NO_SARAN_KRITIK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TELP_NO_SARAN_KRITIK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TELP_NO_SARAN_KRITIK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELP_NO_SARAN_KRITIK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_CAFE_SETTING] ([SETTING_ID], [EXPORTED_DIR], [DISCOUNT_PASSWORD], [TELP_NO_SARAN_KRITIK], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@SETTING_ID, @EXPORTED_DIR, @DISCOUNT_PASSWORD, @TELP_NO_SARAN_KRITIK, @MODIFIED_BY, @MODIFIED_DATE);
SELECT SETTING_ID, EXPORTED_DIR, DISCOUNT_PASSWORD, TELP_NO_SARAN_KRITIK, MODIFIED_BY, MODIFIED_DATE FROM T_CAFE_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EXPORTED_DIR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPORTED_DIR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISCOUNT_PASSWORD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PASSWORD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TELP_NO_SARAN_KRITIK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELP_NO_SARAN_KRITIK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_CAFE_SETTING] SET [SETTING_ID] = @SETTING_ID, [EXPORTED_DIR] = @EXPORTED_DIR, [DISCOUNT_PASSWORD] = @DISCOUNT_PASSWORD, [TELP_NO_SARAN_KRITIK] = @TELP_NO_SARAN_KRITIK, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_EXPORTED_DIR = 1 AND [EXPORTED_DIR] IS NULL) OR ([EXPORTED_DIR] = @Original_EXPORTED_DIR)) AND ((@IsNull_DISCOUNT_PASSWORD = 1 AND [DISCOUNT_PASSWORD] IS NULL) OR ([DISCOUNT_PASSWORD] = @Original_DISCOUNT_PASSWORD)) AND ((@IsNull_TELP_NO_SARAN_KRITIK = 1 AND [TELP_NO_SARAN_KRITIK] IS NULL) OR ([TELP_NO_SARAN_KRITIK] = @Original_TELP_NO_SARAN_KRITIK)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT SETTING_ID, EXPORTED_DIR, DISCOUNT_PASSWORD, TELP_NO_SARAN_KRITIK, MODIFIED_BY, MODIFIED_DATE FROM T_CAFE_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EXPORTED_DIR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPORTED_DIR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISCOUNT_PASSWORD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PASSWORD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TELP_NO_SARAN_KRITIK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELP_NO_SARAN_KRITIK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EXPORTED_DIR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPORTED_DIR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EXPORTED_DIR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPORTED_DIR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISCOUNT_PASSWORD", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PASSWORD", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISCOUNT_PASSWORD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PASSWORD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TELP_NO_SARAN_KRITIK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TELP_NO_SARAN_KRITIK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TELP_NO_SARAN_KRITIK", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TELP_NO_SARAN_KRITIK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SETTING_ID, EXPORTED_DIR, DISCOUNT_PASSWORD, TELP_NO_SARAN_KRITIK, MODIFIE" +
                "D_BY, MODIFIED_DATE FROM dbo.T_CAFE_SETTING";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_CAFE_SETTINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_CAFE_SETTINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_CAFE_SETTINGDataTable dataTable = new DataSet1.T_CAFE_SETTINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_CAFE_SETTINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_CAFE_SETTING");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SETTING_ID, string Original_EXPORTED_DIR, string Original_DISCOUNT_PASSWORD, string Original_TELP_NO_SARAN_KRITIK, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_EXPORTED_DIR == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_EXPORTED_DIR));
            }
            if ((Original_DISCOUNT_PASSWORD == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DISCOUNT_PASSWORD));
            }
            if ((Original_TELP_NO_SARAN_KRITIK == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TELP_NO_SARAN_KRITIK));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SETTING_ID, string EXPORTED_DIR, string DISCOUNT_PASSWORD, string TELP_NO_SARAN_KRITIK, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((EXPORTED_DIR == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EXPORTED_DIR));
            }
            if ((DISCOUNT_PASSWORD == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DISCOUNT_PASSWORD));
            }
            if ((TELP_NO_SARAN_KRITIK == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TELP_NO_SARAN_KRITIK));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SETTING_ID, string EXPORTED_DIR, string DISCOUNT_PASSWORD, string TELP_NO_SARAN_KRITIK, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_SETTING_ID, string Original_EXPORTED_DIR, string Original_DISCOUNT_PASSWORD, string Original_TELP_NO_SARAN_KRITIK, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((EXPORTED_DIR == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EXPORTED_DIR));
            }
            if ((DISCOUNT_PASSWORD == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DISCOUNT_PASSWORD));
            }
            if ((TELP_NO_SARAN_KRITIK == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TELP_NO_SARAN_KRITIK));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_EXPORTED_DIR == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_EXPORTED_DIR));
            }
            if ((Original_DISCOUNT_PASSWORD == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_DISCOUNT_PASSWORD));
            }
            if ((Original_TELP_NO_SARAN_KRITIK == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_TELP_NO_SARAN_KRITIK));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_COMMISSIONTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_COMMISSIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_COMMISSION";
            tableMapping.ColumnMappings.Add("COMMISSION_ID", "COMMISSION_ID");
            tableMapping.ColumnMappings.Add("TRANSACTION_ID", "TRANSACTION_ID");
            tableMapping.ColumnMappings.Add("TRANSACTION_FACTUR_NO", "TRANSACTION_FACTUR_NO");
            tableMapping.ColumnMappings.Add("SHARE_TO", "SHARE_TO");
            tableMapping.ColumnMappings.Add("COMMISSION_PIC", "COMMISSION_PIC");
            tableMapping.ColumnMappings.Add("COMMISSION_VALUE", "COMMISSION_VALUE");
            tableMapping.ColumnMappings.Add("COMMISSION_DATE", "COMMISSION_DATE");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_COMMISSION] WHERE (([COMMISSION_ID] = @Original_COMMISSION_ID) AND ((@IsNull_TRANSACTION_ID = 1 AND [TRANSACTION_ID] IS NULL) OR ([TRANSACTION_ID] = @Original_TRANSACTION_ID)) AND ((@IsNull_TRANSACTION_FACTUR_NO = 1 AND [TRANSACTION_FACTUR_NO] IS NULL) OR ([TRANSACTION_FACTUR_NO] = @Original_TRANSACTION_FACTUR_NO)) AND ((@IsNull_SHARE_TO = 1 AND [SHARE_TO] IS NULL) OR ([SHARE_TO] = @Original_SHARE_TO)) AND ((@IsNull_COMMISSION_PIC = 1 AND [COMMISSION_PIC] IS NULL) OR ([COMMISSION_PIC] = @Original_COMMISSION_PIC)) AND ((@IsNull_COMMISSION_VALUE = 1 AND [COMMISSION_VALUE] IS NULL) OR ([COMMISSION_VALUE] = @Original_COMMISSION_VALUE)) AND ((@IsNull_COMMISSION_DATE = 1 AND [COMMISSION_DATE] IS NULL) OR ([COMMISSION_DATE] = @Original_COMMISSION_DATE)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_FACTUR_NO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR_NO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_FACTUR_NO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR_NO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SHARE_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_TO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_VALUE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_VALUE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION_VALUE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_COMMISSION] ([TRANSACTION_ID], [TRANSACTION_FACTUR_NO], [SHARE_TO], [COMMISSION_PIC], [COMMISSION_VALUE], [COMMISSION_DATE], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@TRANSACTION_ID, @TRANSACTION_FACTUR_NO, @SHARE_TO, @COMMISSION_PIC, @COMMISSION_VALUE, @COMMISSION_DATE, @MODIFIED_BY, @MODIFIED_DATE);
SELECT COMMISSION_ID, TRANSACTION_ID, TRANSACTION_FACTUR_NO, SHARE_TO, COMMISSION_PIC, COMMISSION_VALUE, COMMISSION_DATE, MODIFIED_BY, MODIFIED_DATE FROM T_COMMISSION WHERE (COMMISSION_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_FACTUR_NO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR_NO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_TO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION_VALUE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_COMMISSION] SET [TRANSACTION_ID] = @TRANSACTION_ID, [TRANSACTION_FACTUR_NO] = @TRANSACTION_FACTUR_NO, [SHARE_TO] = @SHARE_TO, [COMMISSION_PIC] = @COMMISSION_PIC, [COMMISSION_VALUE] = @COMMISSION_VALUE, [COMMISSION_DATE] = @COMMISSION_DATE, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([COMMISSION_ID] = @Original_COMMISSION_ID) AND ((@IsNull_TRANSACTION_ID = 1 AND [TRANSACTION_ID] IS NULL) OR ([TRANSACTION_ID] = @Original_TRANSACTION_ID)) AND ((@IsNull_TRANSACTION_FACTUR_NO = 1 AND [TRANSACTION_FACTUR_NO] IS NULL) OR ([TRANSACTION_FACTUR_NO] = @Original_TRANSACTION_FACTUR_NO)) AND ((@IsNull_SHARE_TO = 1 AND [SHARE_TO] IS NULL) OR ([SHARE_TO] = @Original_SHARE_TO)) AND ((@IsNull_COMMISSION_PIC = 1 AND [COMMISSION_PIC] IS NULL) OR ([COMMISSION_PIC] = @Original_COMMISSION_PIC)) AND ((@IsNull_COMMISSION_VALUE = 1 AND [COMMISSION_VALUE] IS NULL) OR ([COMMISSION_VALUE] = @Original_COMMISSION_VALUE)) AND ((@IsNull_COMMISSION_DATE = 1 AND [COMMISSION_DATE] IS NULL) OR ([COMMISSION_DATE] = @Original_COMMISSION_DATE)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT COMMISSION_ID, TRANSACTION_ID, TRANSACTION_FACTUR_NO, SHARE_TO, COMMISSION_PIC, COMMISSION_VALUE, COMMISSION_DATE, MODIFIED_BY, MODIFIED_DATE FROM T_COMMISSION WHERE (COMMISSION_ID = @COMMISSION_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_FACTUR_NO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR_NO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SHARE_TO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION_VALUE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_FACTUR_NO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR_NO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_FACTUR_NO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR_NO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SHARE_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SHARE_TO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SHARE_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_VALUE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_VALUE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_VALUE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION_VALUE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "COMMISSION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT COMMISSION_ID, TRANSACTION_ID, TRANSACTION_FACTUR_NO, SHARE_TO, COMMISSION" +
                "_PIC, COMMISSION_VALUE, COMMISSION_DATE, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_C" +
                "OMMISSION";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_COMMISSIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_COMMISSIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_COMMISSIONDataTable dataTable = new DataSet1.T_COMMISSIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_COMMISSIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_COMMISSION");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_COMMISSION_ID, System.Nullable<decimal> Original_TRANSACTION_ID, string Original_TRANSACTION_FACTUR_NO, string Original_SHARE_TO, string Original_COMMISSION_PIC, System.Nullable<decimal> Original_COMMISSION_VALUE, System.Nullable<System.DateTime> Original_COMMISSION_DATE, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_COMMISSION_ID));
            if ((Original_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_FACTUR_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TRANSACTION_FACTUR_NO));
            }
            if ((Original_SHARE_TO == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SHARE_TO));
            }
            if ((Original_COMMISSION_PIC == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_COMMISSION_PIC));
            }
            if ((Original_COMMISSION_VALUE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_COMMISSION_VALUE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_COMMISSION_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_COMMISSION_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<decimal> TRANSACTION_ID, string TRANSACTION_FACTUR_NO, string SHARE_TO, string COMMISSION_PIC, System.Nullable<decimal> COMMISSION_VALUE, System.Nullable<System.DateTime> COMMISSION_DATE, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((TRANSACTION_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_FACTUR_NO == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TRANSACTION_FACTUR_NO));
            }
            if ((SHARE_TO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SHARE_TO));
            }
            if ((COMMISSION_PIC == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(COMMISSION_PIC));
            }
            if ((COMMISSION_VALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(COMMISSION_VALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((COMMISSION_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(COMMISSION_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<decimal> TRANSACTION_ID, 
                    string TRANSACTION_FACTUR_NO, 
                    string SHARE_TO, 
                    string COMMISSION_PIC, 
                    System.Nullable<decimal> COMMISSION_VALUE, 
                    System.Nullable<System.DateTime> COMMISSION_DATE, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_COMMISSION_ID, 
                    System.Nullable<decimal> Original_TRANSACTION_ID, 
                    string Original_TRANSACTION_FACTUR_NO, 
                    string Original_SHARE_TO, 
                    string Original_COMMISSION_PIC, 
                    System.Nullable<decimal> Original_COMMISSION_VALUE, 
                    System.Nullable<System.DateTime> Original_COMMISSION_DATE, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal COMMISSION_ID) {
            if ((TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_FACTUR_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TRANSACTION_FACTUR_NO));
            }
            if ((SHARE_TO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SHARE_TO));
            }
            if ((COMMISSION_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(COMMISSION_PIC));
            }
            if ((COMMISSION_VALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(COMMISSION_VALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((COMMISSION_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(COMMISSION_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_COMMISSION_ID));
            if ((Original_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_FACTUR_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_TRANSACTION_FACTUR_NO));
            }
            if ((Original_SHARE_TO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SHARE_TO));
            }
            if ((Original_COMMISSION_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_COMMISSION_PIC));
            }
            if ((Original_COMMISSION_VALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_COMMISSION_VALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_COMMISSION_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_COMMISSION_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(COMMISSION_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_CONTRACTOR_SETTINGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_CONTRACTOR_SETTINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_CONTRACTOR_SETTING";
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("GIRO_DELETE_PIN", "GIRO_DELETE_PIN");
            tableMapping.ColumnMappings.Add("PO_DELETE_PIN", "PO_DELETE_PIN");
            tableMapping.ColumnMappings.Add("LOGO_IMAGE", "LOGO_IMAGE");
            tableMapping.ColumnMappings.Add("COMPANY_NAME_FONT", "COMPANY_NAME_FONT");
            tableMapping.ColumnMappings.Add("COMPANY_NAME_COLOUR", "COMPANY_NAME_COLOUR");
            tableMapping.ColumnMappings.Add("COMPANY_NAME_FONT_HEIGHT", "COMPANY_NAME_FONT_HEIGHT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_CONTRACTOR_SETTING] WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_GIRO_DELETE_PIN = 1 AND [GIRO_DELETE_PIN] IS NULL) OR ([GIRO_DELETE_PIN] = @Original_GIRO_DELETE_PIN)) AND ((@IsNull_PO_DELETE_PIN = 1 AND [PO_DELETE_PIN] IS NULL) OR ([PO_DELETE_PIN] = @Original_PO_DELETE_PIN)) AND ((@IsNull_COMPANY_NAME_FONT = 1 AND [COMPANY_NAME_FONT] IS NULL) OR ([COMPANY_NAME_FONT] = @Original_COMPANY_NAME_FONT)) AND ((@IsNull_COMPANY_NAME_COLOUR = 1 AND [COMPANY_NAME_COLOUR] IS NULL) OR ([COMPANY_NAME_COLOUR] = @Original_COMPANY_NAME_COLOUR)) AND ((@IsNull_COMPANY_NAME_FONT_HEIGHT = 1 AND [COMPANY_NAME_FONT_HEIGHT] IS NULL) OR ([COMPANY_NAME_FONT_HEIGHT] = @Original_COMPANY_NAME_FONT_HEIGHT)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_DELETE_PIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_DELETE_PIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_DELETE_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_DELETE_PIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PO_DELETE_PIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_DELETE_PIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_DELETE_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_DELETE_PIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NAME_FONT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NAME_FONT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NAME_COLOUR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_COLOUR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NAME_COLOUR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_COLOUR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NAME_FONT_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT_HEIGHT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NAME_FONT_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT_HEIGHT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_CONTRACTOR_SETTING] ([SETTING_ID], [GIRO_DELETE_PIN], [PO_DELETE_PIN], [LOGO_IMAGE], [COMPANY_NAME_FONT], [COMPANY_NAME_COLOUR], [COMPANY_NAME_FONT_HEIGHT]) VALUES (@SETTING_ID, @GIRO_DELETE_PIN, @PO_DELETE_PIN, @LOGO_IMAGE, @COMPANY_NAME_FONT, @COMPANY_NAME_COLOUR, @COMPANY_NAME_FONT_HEIGHT);
SELECT SETTING_ID, GIRO_DELETE_PIN, PO_DELETE_PIN, LOGO_IMAGE, COMPANY_NAME_FONT, COMPANY_NAME_COLOUR, COMPANY_NAME_FONT_HEIGHT FROM T_CONTRACTOR_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_DELETE_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_DELETE_PIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_DELETE_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_DELETE_PIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOGO_IMAGE", System.Data.SqlDbType.Image, 0, System.Data.ParameterDirection.Input, 0, 0, "LOGO_IMAGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NAME_FONT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NAME_COLOUR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_COLOUR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NAME_FONT_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT_HEIGHT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_CONTRACTOR_SETTING] SET [SETTING_ID] = @SETTING_ID, [GIRO_DELETE_PIN] = @GIRO_DELETE_PIN, [PO_DELETE_PIN] = @PO_DELETE_PIN, [LOGO_IMAGE] = @LOGO_IMAGE, [COMPANY_NAME_FONT] = @COMPANY_NAME_FONT, [COMPANY_NAME_COLOUR] = @COMPANY_NAME_COLOUR, [COMPANY_NAME_FONT_HEIGHT] = @COMPANY_NAME_FONT_HEIGHT WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_GIRO_DELETE_PIN = 1 AND [GIRO_DELETE_PIN] IS NULL) OR ([GIRO_DELETE_PIN] = @Original_GIRO_DELETE_PIN)) AND ((@IsNull_PO_DELETE_PIN = 1 AND [PO_DELETE_PIN] IS NULL) OR ([PO_DELETE_PIN] = @Original_PO_DELETE_PIN)) AND ((@IsNull_COMPANY_NAME_FONT = 1 AND [COMPANY_NAME_FONT] IS NULL) OR ([COMPANY_NAME_FONT] = @Original_COMPANY_NAME_FONT)) AND ((@IsNull_COMPANY_NAME_COLOUR = 1 AND [COMPANY_NAME_COLOUR] IS NULL) OR ([COMPANY_NAME_COLOUR] = @Original_COMPANY_NAME_COLOUR)) AND ((@IsNull_COMPANY_NAME_FONT_HEIGHT = 1 AND [COMPANY_NAME_FONT_HEIGHT] IS NULL) OR ([COMPANY_NAME_FONT_HEIGHT] = @Original_COMPANY_NAME_FONT_HEIGHT)));
SELECT SETTING_ID, GIRO_DELETE_PIN, PO_DELETE_PIN, LOGO_IMAGE, COMPANY_NAME_FONT, COMPANY_NAME_COLOUR, COMPANY_NAME_FONT_HEIGHT FROM T_CONTRACTOR_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_DELETE_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_DELETE_PIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PO_DELETE_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_DELETE_PIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOGO_IMAGE", System.Data.SqlDbType.Image, 0, System.Data.ParameterDirection.Input, 0, 0, "LOGO_IMAGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NAME_FONT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NAME_COLOUR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_COLOUR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMPANY_NAME_FONT_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT_HEIGHT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_DELETE_PIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_DELETE_PIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_DELETE_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_DELETE_PIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PO_DELETE_PIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_DELETE_PIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PO_DELETE_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PO_DELETE_PIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NAME_FONT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NAME_FONT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NAME_COLOUR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_COLOUR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NAME_COLOUR", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_COLOUR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMPANY_NAME_FONT_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT_HEIGHT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMPANY_NAME_FONT_HEIGHT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMPANY_NAME_FONT_HEIGHT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SETTING_ID, GIRO_DELETE_PIN, PO_DELETE_PIN, LOGO_IMAGE, COMPANY_NAME_FONT," +
                " COMPANY_NAME_COLOUR, COMPANY_NAME_FONT_HEIGHT FROM dbo.T_CONTRACTOR_SETTING";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_CONTRACTOR_SETTINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_CONTRACTOR_SETTINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_CONTRACTOR_SETTINGDataTable dataTable = new DataSet1.T_CONTRACTOR_SETTINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_CONTRACTOR_SETTINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_CONTRACTOR_SETTING");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SETTING_ID, string Original_GIRO_DELETE_PIN, string Original_PO_DELETE_PIN, string Original_COMPANY_NAME_FONT, string Original_COMPANY_NAME_COLOUR, System.Nullable<int> Original_COMPANY_NAME_FONT_HEIGHT) {
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_GIRO_DELETE_PIN == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_GIRO_DELETE_PIN));
            }
            if ((Original_PO_DELETE_PIN == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PO_DELETE_PIN));
            }
            if ((Original_COMPANY_NAME_FONT == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_COMPANY_NAME_FONT));
            }
            if ((Original_COMPANY_NAME_COLOUR == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_COMPANY_NAME_COLOUR));
            }
            if ((Original_COMPANY_NAME_FONT_HEIGHT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_COMPANY_NAME_FONT_HEIGHT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SETTING_ID, string GIRO_DELETE_PIN, string PO_DELETE_PIN, byte[] LOGO_IMAGE, string COMPANY_NAME_FONT, string COMPANY_NAME_COLOUR, System.Nullable<int> COMPANY_NAME_FONT_HEIGHT) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((GIRO_DELETE_PIN == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(GIRO_DELETE_PIN));
            }
            if ((PO_DELETE_PIN == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PO_DELETE_PIN));
            }
            if ((LOGO_IMAGE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((byte[])(LOGO_IMAGE));
            }
            if ((COMPANY_NAME_FONT == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(COMPANY_NAME_FONT));
            }
            if ((COMPANY_NAME_COLOUR == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(COMPANY_NAME_COLOUR));
            }
            if ((COMPANY_NAME_FONT_HEIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(COMPANY_NAME_FONT_HEIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SETTING_ID, string GIRO_DELETE_PIN, string PO_DELETE_PIN, byte[] LOGO_IMAGE, string COMPANY_NAME_FONT, string COMPANY_NAME_COLOUR, System.Nullable<int> COMPANY_NAME_FONT_HEIGHT, string Original_SETTING_ID, string Original_GIRO_DELETE_PIN, string Original_PO_DELETE_PIN, string Original_COMPANY_NAME_FONT, string Original_COMPANY_NAME_COLOUR, System.Nullable<int> Original_COMPANY_NAME_FONT_HEIGHT) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((GIRO_DELETE_PIN == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(GIRO_DELETE_PIN));
            }
            if ((PO_DELETE_PIN == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PO_DELETE_PIN));
            }
            if ((LOGO_IMAGE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((byte[])(LOGO_IMAGE));
            }
            if ((COMPANY_NAME_FONT == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(COMPANY_NAME_FONT));
            }
            if ((COMPANY_NAME_COLOUR == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(COMPANY_NAME_COLOUR));
            }
            if ((COMPANY_NAME_FONT_HEIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(COMPANY_NAME_FONT_HEIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_GIRO_DELETE_PIN == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_GIRO_DELETE_PIN));
            }
            if ((Original_PO_DELETE_PIN == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PO_DELETE_PIN));
            }
            if ((Original_COMPANY_NAME_FONT == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_COMPANY_NAME_FONT));
            }
            if ((Original_COMPANY_NAME_COLOUR == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_COMPANY_NAME_COLOUR));
            }
            if ((Original_COMPANY_NAME_FONT_HEIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_COMPANY_NAME_FONT_HEIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_DEFAULT_ACCOUNTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_DEFAULT_ACCOUNTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_DEFAULT_ACCOUNT";
            tableMapping.ColumnMappings.Add("DEFAULT_ACCOUNT_ID", "DEFAULT_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("TRANSACTION_TYPE", "TRANSACTION_TYPE");
            tableMapping.ColumnMappings.Add("TRANSACTION_PAYMENT", "TRANSACTION_PAYMENT");
            tableMapping.ColumnMappings.Add("DEBET_SUB_ACCOUNT_ID", "DEBET_SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("KREDIT_SUB_ACCOUNT_ID", "KREDIT_SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_DEFAULT_ACCOUNT] WHERE (([DEFAULT_ACCOUNT_ID] = @Original_DEFAULT_ACCOUNT_ID) AND ((@IsNull_TRANSACTION_TYPE = 1 AND [TRANSACTION_TYPE] IS NULL) OR ([TRANSACTION_TYPE] = @Original_TRANSACTION_TYPE)) AND ((@IsNull_TRANSACTION_PAYMENT = 1 AND [TRANSACTION_PAYMENT] IS NULL) OR ([TRANSACTION_PAYMENT] = @Original_TRANSACTION_PAYMENT)) AND ((@IsNull_DEBET_SUB_ACCOUNT_ID = 1 AND [DEBET_SUB_ACCOUNT_ID] IS NULL) OR ([DEBET_SUB_ACCOUNT_ID] = @Original_DEBET_SUB_ACCOUNT_ID)) AND ((@IsNull_KREDIT_SUB_ACCOUNT_ID = 1 AND [KREDIT_SUB_ACCOUNT_ID] IS NULL) OR ([KREDIT_SUB_ACCOUNT_ID] = @Original_KREDIT_SUB_ACCOUNT_ID)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_TYPE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_TYPE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_TYPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_TYPE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_PAYMENT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_PAYMENT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEBET_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEBET_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEBET_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEBET_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_KREDIT_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KREDIT_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KREDIT_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KREDIT_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_DEFAULT_ACCOUNT] ([TRANSACTION_TYPE], [TRANSACTION_PAYMENT], [DEBET_SUB_ACCOUNT_ID], [KREDIT_SUB_ACCOUNT_ID], [DESCRIPTION], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@TRANSACTION_TYPE, @TRANSACTION_PAYMENT, @DEBET_SUB_ACCOUNT_ID, @KREDIT_SUB_ACCOUNT_ID, @DESCRIPTION, @MODIFIED_BY, @MODIFIED_DATE);
SELECT DEFAULT_ACCOUNT_ID, TRANSACTION_TYPE, TRANSACTION_PAYMENT, DEBET_SUB_ACCOUNT_ID, KREDIT_SUB_ACCOUNT_ID, DESCRIPTION, MODIFIED_BY, MODIFIED_DATE FROM T_DEFAULT_ACCOUNT WHERE (DEFAULT_ACCOUNT_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_TYPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_TYPE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_PAYMENT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEBET_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEBET_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KREDIT_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KREDIT_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESCRIPTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_DEFAULT_ACCOUNT] SET [TRANSACTION_TYPE] = @TRANSACTION_TYPE, [TRANSACTION_PAYMENT] = @TRANSACTION_PAYMENT, [DEBET_SUB_ACCOUNT_ID] = @DEBET_SUB_ACCOUNT_ID, [KREDIT_SUB_ACCOUNT_ID] = @KREDIT_SUB_ACCOUNT_ID, [DESCRIPTION] = @DESCRIPTION, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([DEFAULT_ACCOUNT_ID] = @Original_DEFAULT_ACCOUNT_ID) AND ((@IsNull_TRANSACTION_TYPE = 1 AND [TRANSACTION_TYPE] IS NULL) OR ([TRANSACTION_TYPE] = @Original_TRANSACTION_TYPE)) AND ((@IsNull_TRANSACTION_PAYMENT = 1 AND [TRANSACTION_PAYMENT] IS NULL) OR ([TRANSACTION_PAYMENT] = @Original_TRANSACTION_PAYMENT)) AND ((@IsNull_DEBET_SUB_ACCOUNT_ID = 1 AND [DEBET_SUB_ACCOUNT_ID] IS NULL) OR ([DEBET_SUB_ACCOUNT_ID] = @Original_DEBET_SUB_ACCOUNT_ID)) AND ((@IsNull_KREDIT_SUB_ACCOUNT_ID = 1 AND [KREDIT_SUB_ACCOUNT_ID] IS NULL) OR ([KREDIT_SUB_ACCOUNT_ID] = @Original_KREDIT_SUB_ACCOUNT_ID)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT DEFAULT_ACCOUNT_ID, TRANSACTION_TYPE, TRANSACTION_PAYMENT, DEBET_SUB_ACCOUNT_ID, KREDIT_SUB_ACCOUNT_ID, DESCRIPTION, MODIFIED_BY, MODIFIED_DATE FROM T_DEFAULT_ACCOUNT WHERE (DEFAULT_ACCOUNT_ID = @DEFAULT_ACCOUNT_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_TYPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_TYPE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_PAYMENT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEBET_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEBET_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KREDIT_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KREDIT_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESCRIPTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_TYPE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_TYPE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_TYPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_TYPE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_PAYMENT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_PAYMENT", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEBET_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEBET_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEBET_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DEBET_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_KREDIT_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KREDIT_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KREDIT_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "KREDIT_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_ACCOUNT_ID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DEFAULT_ACCOUNT_ID, TRANSACTION_TYPE, TRANSACTION_PAYMENT, DEBET_SUB_ACCOU" +
                "NT_ID, KREDIT_SUB_ACCOUNT_ID, DESCRIPTION, MODIFIED_BY, MODIFIED_DATE FROM dbo.T" +
                "_DEFAULT_ACCOUNT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_DEFAULT_ACCOUNTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_DEFAULT_ACCOUNTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_DEFAULT_ACCOUNTDataTable dataTable = new DataSet1.T_DEFAULT_ACCOUNTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_DEFAULT_ACCOUNTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_DEFAULT_ACCOUNT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_DEFAULT_ACCOUNT_ID, string Original_TRANSACTION_TYPE, string Original_TRANSACTION_PAYMENT, string Original_DEBET_SUB_ACCOUNT_ID, string Original_KREDIT_SUB_ACCOUNT_ID, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_DEFAULT_ACCOUNT_ID));
            if ((Original_TRANSACTION_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TRANSACTION_TYPE));
            }
            if ((Original_TRANSACTION_PAYMENT == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TRANSACTION_PAYMENT));
            }
            if ((Original_DEBET_SUB_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DEBET_SUB_ACCOUNT_ID));
            }
            if ((Original_KREDIT_SUB_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_KREDIT_SUB_ACCOUNT_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TRANSACTION_TYPE, string TRANSACTION_PAYMENT, string DEBET_SUB_ACCOUNT_ID, string KREDIT_SUB_ACCOUNT_ID, string DESCRIPTION, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((TRANSACTION_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TRANSACTION_TYPE));
            }
            if ((TRANSACTION_PAYMENT == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TRANSACTION_PAYMENT));
            }
            if ((DEBET_SUB_ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DEBET_SUB_ACCOUNT_ID));
            }
            if ((KREDIT_SUB_ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KREDIT_SUB_ACCOUNT_ID));
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DESCRIPTION));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TRANSACTION_TYPE, string TRANSACTION_PAYMENT, string DEBET_SUB_ACCOUNT_ID, string KREDIT_SUB_ACCOUNT_ID, string DESCRIPTION, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, int Original_DEFAULT_ACCOUNT_ID, string Original_TRANSACTION_TYPE, string Original_TRANSACTION_PAYMENT, string Original_DEBET_SUB_ACCOUNT_ID, string Original_KREDIT_SUB_ACCOUNT_ID, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE, int DEFAULT_ACCOUNT_ID) {
            if ((TRANSACTION_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TRANSACTION_TYPE));
            }
            if ((TRANSACTION_PAYMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TRANSACTION_PAYMENT));
            }
            if ((DEBET_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DEBET_SUB_ACCOUNT_ID));
            }
            if ((KREDIT_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KREDIT_SUB_ACCOUNT_ID));
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DESCRIPTION));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_DEFAULT_ACCOUNT_ID));
            if ((Original_TRANSACTION_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TRANSACTION_TYPE));
            }
            if ((Original_TRANSACTION_PAYMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_TRANSACTION_PAYMENT));
            }
            if ((Original_DEBET_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_DEBET_SUB_ACCOUNT_ID));
            }
            if ((Original_KREDIT_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_KREDIT_SUB_ACCOUNT_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(DEFAULT_ACCOUNT_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_DESKTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_DESKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_DESK";
            tableMapping.ColumnMappings.Add("T_DESK_ID", "T_DESK_ID");
            tableMapping.ColumnMappings.Add("DESK_ID", "DESK_ID");
            tableMapping.ColumnMappings.Add("DESK_BOOKING_DATE", "DESK_BOOKING_DATE");
            tableMapping.ColumnMappings.Add("DESK_IN_DATE", "DESK_IN_DATE");
            tableMapping.ColumnMappings.Add("DESK_OUT_DATE", "DESK_OUT_DATE");
            tableMapping.ColumnMappings.Add("DESK_CUST_ID", "DESK_CUST_ID");
            tableMapping.ColumnMappings.Add("DESK_LONG_PLAY_MINUTES", "DESK_LONG_PLAY_MINUTES");
            tableMapping.ColumnMappings.Add("DESK_STATUS", "DESK_STATUS");
            tableMapping.ColumnMappings.Add("DESK_TRANSACTION_ID", "DESK_TRANSACTION_ID");
            tableMapping.ColumnMappings.Add("DESK_GRAND_TOTAL", "DESK_GRAND_TOTAL");
            tableMapping.ColumnMappings.Add("EMPLOYEE_ID", "EMPLOYEE_ID");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_DESK] WHERE (([T_DESK_ID] = @Original_T_DESK_ID) AND ((@IsNull_DESK_ID = 1 AND [DESK_ID] IS NULL) OR ([DESK_ID] = @Original_DESK_ID)) AND ((@IsNull_DESK_BOOKING_DATE = 1 AND [DESK_BOOKING_DATE] IS NULL) OR ([DESK_BOOKING_DATE] = @Original_DESK_BOOKING_DATE)) AND ((@IsNull_DESK_IN_DATE = 1 AND [DESK_IN_DATE] IS NULL) OR ([DESK_IN_DATE] = @Original_DESK_IN_DATE)) AND ((@IsNull_DESK_OUT_DATE = 1 AND [DESK_OUT_DATE] IS NULL) OR ([DESK_OUT_DATE] = @Original_DESK_OUT_DATE)) AND ((@IsNull_DESK_CUST_ID = 1 AND [DESK_CUST_ID] IS NULL) OR ([DESK_CUST_ID] = @Original_DESK_CUST_ID)) AND ((@IsNull_DESK_LONG_PLAY_MINUTES = 1 AND [DESK_LONG_PLAY_MINUTES] IS NULL) OR ([DESK_LONG_PLAY_MINUTES] = @Original_DESK_LONG_PLAY_MINUTES)) AND ((@IsNull_DESK_STATUS = 1 AND [DESK_STATUS] IS NULL) OR ([DESK_STATUS] = @Original_DESK_STATUS)) AND ((@IsNull_DESK_TRANSACTION_ID = 1 AND [DESK_TRANSACTION_ID] IS NULL) OR ([DESK_TRANSACTION_ID] = @Original_DESK_TRANSACTION_ID)) AND ((@IsNull_DESK_GRAND_TOTAL = 1 AND [DESK_GRAND_TOTAL] IS NULL) OR ([DESK_GRAND_TOTAL] = @Original_DESK_GRAND_TOTAL)) AND ((@IsNull_EMPLOYEE_ID = 1 AND [EMPLOYEE_ID] IS NULL) OR ([EMPLOYEE_ID] = @Original_EMPLOYEE_ID)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_T_DESK_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "T_DESK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_BOOKING_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BOOKING_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_BOOKING_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BOOKING_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_IN_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_IN_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_IN_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_IN_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_OUT_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_OUT_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_OUT_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_OUT_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_CUST_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_CUST_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_CUST_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_CUST_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_LONG_PLAY_MINUTES", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_LONG_PLAY_MINUTES", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_LONG_PLAY_MINUTES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_LONG_PLAY_MINUTES", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_GRAND_TOTAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_GRAND_TOTAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_GRAND_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_GRAND_TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_DESK] ([DESK_ID], [DESK_BOOKING_DATE], [DESK_IN_DATE], [DESK_OUT_DATE], [DESK_CUST_ID], [DESK_LONG_PLAY_MINUTES], [DESK_STATUS], [DESK_TRANSACTION_ID], [DESK_GRAND_TOTAL], [EMPLOYEE_ID], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@DESK_ID, @DESK_BOOKING_DATE, @DESK_IN_DATE, @DESK_OUT_DATE, @DESK_CUST_ID, @DESK_LONG_PLAY_MINUTES, @DESK_STATUS, @DESK_TRANSACTION_ID, @DESK_GRAND_TOTAL, @EMPLOYEE_ID, @MODIFIED_BY, @MODIFIED_DATE);
SELECT T_DESK_ID, DESK_ID, DESK_BOOKING_DATE, DESK_IN_DATE, DESK_OUT_DATE, DESK_CUST_ID, DESK_LONG_PLAY_MINUTES, DESK_STATUS, DESK_TRANSACTION_ID, DESK_GRAND_TOTAL, EMPLOYEE_ID, MODIFIED_BY, MODIFIED_DATE FROM T_DESK WHERE (T_DESK_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_BOOKING_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BOOKING_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_IN_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_IN_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_OUT_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_OUT_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_CUST_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_CUST_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_LONG_PLAY_MINUTES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_LONG_PLAY_MINUTES", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_GRAND_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_GRAND_TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_DESK] SET [DESK_ID] = @DESK_ID, [DESK_BOOKING_DATE] = @DESK_BOOKI" +
                "NG_DATE, [DESK_IN_DATE] = @DESK_IN_DATE, [DESK_OUT_DATE] = @DESK_OUT_DATE, [DESK" +
                "_CUST_ID] = @DESK_CUST_ID, [DESK_LONG_PLAY_MINUTES] = @DESK_LONG_PLAY_MINUTES, [" +
                "DESK_STATUS] = @DESK_STATUS, [DESK_TRANSACTION_ID] = @DESK_TRANSACTION_ID, [DESK" +
                "_GRAND_TOTAL] = @DESK_GRAND_TOTAL, [EMPLOYEE_ID] = @EMPLOYEE_ID, [MODIFIED_BY] =" +
                " @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([T_DESK_ID] = @Original_" +
                "T_DESK_ID) AND ((@IsNull_DESK_ID = 1 AND [DESK_ID] IS NULL) OR ([DESK_ID] = @Ori" +
                "ginal_DESK_ID)) AND ((@IsNull_DESK_BOOKING_DATE = 1 AND [DESK_BOOKING_DATE] IS N" +
                "ULL) OR ([DESK_BOOKING_DATE] = @Original_DESK_BOOKING_DATE)) AND ((@IsNull_DESK_" +
                "IN_DATE = 1 AND [DESK_IN_DATE] IS NULL) OR ([DESK_IN_DATE] = @Original_DESK_IN_D" +
                "ATE)) AND ((@IsNull_DESK_OUT_DATE = 1 AND [DESK_OUT_DATE] IS NULL) OR ([DESK_OUT" +
                "_DATE] = @Original_DESK_OUT_DATE)) AND ((@IsNull_DESK_CUST_ID = 1 AND [DESK_CUST" +
                "_ID] IS NULL) OR ([DESK_CUST_ID] = @Original_DESK_CUST_ID)) AND ((@IsNull_DESK_L" +
                "ONG_PLAY_MINUTES = 1 AND [DESK_LONG_PLAY_MINUTES] IS NULL) OR ([DESK_LONG_PLAY_M" +
                "INUTES] = @Original_DESK_LONG_PLAY_MINUTES)) AND ((@IsNull_DESK_STATUS = 1 AND [" +
                "DESK_STATUS] IS NULL) OR ([DESK_STATUS] = @Original_DESK_STATUS)) AND ((@IsNull_" +
                "DESK_TRANSACTION_ID = 1 AND [DESK_TRANSACTION_ID] IS NULL) OR ([DESK_TRANSACTION" +
                "_ID] = @Original_DESK_TRANSACTION_ID)) AND ((@IsNull_DESK_GRAND_TOTAL = 1 AND [D" +
                "ESK_GRAND_TOTAL] IS NULL) OR ([DESK_GRAND_TOTAL] = @Original_DESK_GRAND_TOTAL)) " +
                "AND ((@IsNull_EMPLOYEE_ID = 1 AND [EMPLOYEE_ID] IS NULL) OR ([EMPLOYEE_ID] = @Or" +
                "iginal_EMPLOYEE_ID)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR" +
                " ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [M" +
                "ODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));\r\nSELECT" +
                " T_DESK_ID, DESK_ID, DESK_BOOKING_DATE, DESK_IN_DATE, DESK_OUT_DATE, DESK_CUST_I" +
                "D, DESK_LONG_PLAY_MINUTES, DESK_STATUS, DESK_TRANSACTION_ID, DESK_GRAND_TOTAL, E" +
                "MPLOYEE_ID, MODIFIED_BY, MODIFIED_DATE FROM T_DESK WHERE (T_DESK_ID = @T_DESK_ID" +
                ")";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_BOOKING_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BOOKING_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_IN_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_IN_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_OUT_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_OUT_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_CUST_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_CUST_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_LONG_PLAY_MINUTES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_LONG_PLAY_MINUTES", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_GRAND_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_GRAND_TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_T_DESK_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "T_DESK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_BOOKING_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BOOKING_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_BOOKING_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_BOOKING_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_IN_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_IN_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_IN_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_IN_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_OUT_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_OUT_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_OUT_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_OUT_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_CUST_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_CUST_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_CUST_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_CUST_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_LONG_PLAY_MINUTES", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_LONG_PLAY_MINUTES", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_LONG_PLAY_MINUTES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_LONG_PLAY_MINUTES", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_GRAND_TOTAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_GRAND_TOTAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_GRAND_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "DESK_GRAND_TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@T_DESK_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "T_DESK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT T_DESK_ID, DESK_ID, DESK_BOOKING_DATE, DESK_IN_DATE, DESK_OUT_DATE, DESK_C" +
                "UST_ID, DESK_LONG_PLAY_MINUTES, DESK_STATUS, DESK_TRANSACTION_ID, DESK_GRAND_TOT" +
                "AL, EMPLOYEE_ID, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_DESK";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_DESKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_DESKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_DESKDataTable dataTable = new DataSet1.T_DESKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_DESKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_DESK");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_T_DESK_ID, string Original_DESK_ID, System.Nullable<System.DateTime> Original_DESK_BOOKING_DATE, System.Nullable<System.DateTime> Original_DESK_IN_DATE, System.Nullable<System.DateTime> Original_DESK_OUT_DATE, string Original_DESK_CUST_ID, System.Nullable<decimal> Original_DESK_LONG_PLAY_MINUTES, string Original_DESK_STATUS, System.Nullable<decimal> Original_DESK_TRANSACTION_ID, System.Nullable<decimal> Original_DESK_GRAND_TOTAL, string Original_EMPLOYEE_ID, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_T_DESK_ID));
            if ((Original_DESK_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DESK_ID));
            }
            if ((Original_DESK_BOOKING_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DESK_BOOKING_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_DESK_IN_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DESK_IN_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_DESK_OUT_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_DESK_OUT_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_DESK_CUST_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DESK_CUST_ID));
            }
            if ((Original_DESK_LONG_PLAY_MINUTES.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_DESK_LONG_PLAY_MINUTES.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_DESK_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_DESK_STATUS));
            }
            if ((Original_DESK_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_DESK_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_DESK_GRAND_TOTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_DESK_GRAND_TOTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_EMPLOYEE_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string DESK_ID, System.Nullable<System.DateTime> DESK_BOOKING_DATE, System.Nullable<System.DateTime> DESK_IN_DATE, System.Nullable<System.DateTime> DESK_OUT_DATE, string DESK_CUST_ID, System.Nullable<decimal> DESK_LONG_PLAY_MINUTES, string DESK_STATUS, System.Nullable<decimal> DESK_TRANSACTION_ID, System.Nullable<decimal> DESK_GRAND_TOTAL, string EMPLOYEE_ID, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((DESK_ID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(DESK_ID));
            }
            if ((DESK_BOOKING_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DESK_BOOKING_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DESK_IN_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DESK_IN_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DESK_OUT_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DESK_OUT_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DESK_CUST_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DESK_CUST_ID));
            }
            if ((DESK_LONG_PLAY_MINUTES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(DESK_LONG_PLAY_MINUTES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((DESK_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DESK_STATUS));
            }
            if ((DESK_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(DESK_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((DESK_GRAND_TOTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(DESK_GRAND_TOTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((EMPLOYEE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(EMPLOYEE_ID));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DESK_ID, 
                    System.Nullable<System.DateTime> DESK_BOOKING_DATE, 
                    System.Nullable<System.DateTime> DESK_IN_DATE, 
                    System.Nullable<System.DateTime> DESK_OUT_DATE, 
                    string DESK_CUST_ID, 
                    System.Nullable<decimal> DESK_LONG_PLAY_MINUTES, 
                    string DESK_STATUS, 
                    System.Nullable<decimal> DESK_TRANSACTION_ID, 
                    System.Nullable<decimal> DESK_GRAND_TOTAL, 
                    string EMPLOYEE_ID, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_T_DESK_ID, 
                    string Original_DESK_ID, 
                    System.Nullable<System.DateTime> Original_DESK_BOOKING_DATE, 
                    System.Nullable<System.DateTime> Original_DESK_IN_DATE, 
                    System.Nullable<System.DateTime> Original_DESK_OUT_DATE, 
                    string Original_DESK_CUST_ID, 
                    System.Nullable<decimal> Original_DESK_LONG_PLAY_MINUTES, 
                    string Original_DESK_STATUS, 
                    System.Nullable<decimal> Original_DESK_TRANSACTION_ID, 
                    System.Nullable<decimal> Original_DESK_GRAND_TOTAL, 
                    string Original_EMPLOYEE_ID, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal T_DESK_ID) {
            if ((DESK_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(DESK_ID));
            }
            if ((DESK_BOOKING_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DESK_BOOKING_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DESK_IN_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DESK_IN_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DESK_OUT_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DESK_OUT_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DESK_CUST_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DESK_CUST_ID));
            }
            if ((DESK_LONG_PLAY_MINUTES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(DESK_LONG_PLAY_MINUTES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((DESK_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DESK_STATUS));
            }
            if ((DESK_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(DESK_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((DESK_GRAND_TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(DESK_GRAND_TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((EMPLOYEE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(EMPLOYEE_ID));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_T_DESK_ID));
            if ((Original_DESK_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DESK_ID));
            }
            if ((Original_DESK_BOOKING_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_DESK_BOOKING_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_DESK_IN_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_DESK_IN_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_DESK_OUT_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_DESK_OUT_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_DESK_CUST_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_DESK_CUST_ID));
            }
            if ((Original_DESK_LONG_PLAY_MINUTES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_DESK_LONG_PLAY_MINUTES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_DESK_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_DESK_STATUS));
            }
            if ((Original_DESK_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_DESK_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_DESK_GRAND_TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_DESK_GRAND_TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_EMPLOYEE_ID));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(T_DESK_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_GIROTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_GIROTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_GIRO";
            tableMapping.ColumnMappings.Add("GIRO_ID", "GIRO_ID");
            tableMapping.ColumnMappings.Add("CURRENCY_ID", "CURRENCY_ID");
            tableMapping.ColumnMappings.Add("BANK_ID", "BANK_ID");
            tableMapping.ColumnMappings.Add("GIRO_NO", "GIRO_NO");
            tableMapping.ColumnMappings.Add("PI_HUTANG_ID", "PI_HUTANG_ID");
            tableMapping.ColumnMappings.Add("GIRO_OUT_DATE", "GIRO_OUT_DATE");
            tableMapping.ColumnMappings.Add("GIRO_MATURITY_DATE", "GIRO_MATURITY_DATE");
            tableMapping.ColumnMappings.Add("GIRO_STATUS", "GIRO_STATUS");
            tableMapping.ColumnMappings.Add("GIRO_TO", "GIRO_TO");
            tableMapping.ColumnMappings.Add("GIRO_FROM", "GIRO_FROM");
            tableMapping.ColumnMappings.Add("GIRO_CAIR_DATE", "GIRO_CAIR_DATE");
            tableMapping.ColumnMappings.Add("GIRO_AMMOUNT", "GIRO_AMMOUNT");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_GIRO] WHERE (([GIRO_ID] = @Original_GIRO_ID) AND ((@IsNull_CURRENCY_ID = 1 AND [CURRENCY_ID] IS NULL) OR ([CURRENCY_ID] = @Original_CURRENCY_ID)) AND ((@IsNull_BANK_ID = 1 AND [BANK_ID] IS NULL) OR ([BANK_ID] = @Original_BANK_ID)) AND ((@IsNull_GIRO_NO = 1 AND [GIRO_NO] IS NULL) OR ([GIRO_NO] = @Original_GIRO_NO)) AND ((@IsNull_PI_HUTANG_ID = 1 AND [PI_HUTANG_ID] IS NULL) OR ([PI_HUTANG_ID] = @Original_PI_HUTANG_ID)) AND ((@IsNull_GIRO_OUT_DATE = 1 AND [GIRO_OUT_DATE] IS NULL) OR ([GIRO_OUT_DATE] = @Original_GIRO_OUT_DATE)) AND ((@IsNull_GIRO_MATURITY_DATE = 1 AND [GIRO_MATURITY_DATE] IS NULL) OR ([GIRO_MATURITY_DATE] = @Original_GIRO_MATURITY_DATE)) AND ((@IsNull_GIRO_STATUS = 1 AND [GIRO_STATUS] IS NULL) OR ([GIRO_STATUS] = @Original_GIRO_STATUS)) AND ((@IsNull_GIRO_TO = 1 AND [GIRO_TO] IS NULL) OR ([GIRO_TO] = @Original_GIRO_TO)) AND ((@IsNull_GIRO_FROM = 1 AND [GIRO_FROM] IS NULL) OR ([GIRO_FROM] = @Original_GIRO_FROM)) AND ((@IsNull_GIRO_CAIR_DATE = 1 AND [GIRO_CAIR_DATE] IS NULL) OR ([GIRO_CAIR_DATE] = @Original_GIRO_CAIR_DATE)) AND ((@IsNull_GIRO_AMMOUNT = 1 AND [GIRO_AMMOUNT] IS NULL) OR ([GIRO_AMMOUNT] = @Original_GIRO_AMMOUNT)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "GIRO_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CURRENCY_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CURRENCY_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_NO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_NO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_NO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_NO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_OUT_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_OUT_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_OUT_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_OUT_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_MATURITY_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_MATURITY_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_MATURITY_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_MATURITY_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_TO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_FROM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_FROM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_CAIR_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_CAIR_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_CAIR_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_CAIR_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_AMMOUNT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_AMMOUNT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_AMMOUNT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "GIRO_AMMOUNT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_GIRO] ([CURRENCY_ID], [BANK_ID], [GIRO_NO], [PI_HUTANG_ID], [GIRO_OUT_DATE], [GIRO_MATURITY_DATE], [GIRO_STATUS], [GIRO_TO], [GIRO_FROM], [GIRO_CAIR_DATE], [GIRO_AMMOUNT], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@CURRENCY_ID, @BANK_ID, @GIRO_NO, @PI_HUTANG_ID, @GIRO_OUT_DATE, @GIRO_MATURITY_DATE, @GIRO_STATUS, @GIRO_TO, @GIRO_FROM, @GIRO_CAIR_DATE, @GIRO_AMMOUNT, @MODIFIED_BY, @MODIFIED_DATE);
SELECT GIRO_ID, CURRENCY_ID, BANK_ID, GIRO_NO, PI_HUTANG_ID, GIRO_OUT_DATE, GIRO_MATURITY_DATE, GIRO_STATUS, GIRO_TO, GIRO_FROM, GIRO_CAIR_DATE, GIRO_AMMOUNT, MODIFIED_BY, MODIFIED_DATE FROM T_GIRO WHERE (GIRO_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CURRENCY_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_NO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_NO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_OUT_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_OUT_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_MATURITY_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_MATURITY_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_TO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_FROM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_CAIR_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_CAIR_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_AMMOUNT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "GIRO_AMMOUNT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_GIRO] SET [CURRENCY_ID] = @CURRENCY_ID, [BANK_ID] = @BANK_ID, [GI" +
                "RO_NO] = @GIRO_NO, [PI_HUTANG_ID] = @PI_HUTANG_ID, [GIRO_OUT_DATE] = @GIRO_OUT_D" +
                "ATE, [GIRO_MATURITY_DATE] = @GIRO_MATURITY_DATE, [GIRO_STATUS] = @GIRO_STATUS, [" +
                "GIRO_TO] = @GIRO_TO, [GIRO_FROM] = @GIRO_FROM, [GIRO_CAIR_DATE] = @GIRO_CAIR_DAT" +
                "E, [GIRO_AMMOUNT] = @GIRO_AMMOUNT, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE]" +
                " = @MODIFIED_DATE WHERE (([GIRO_ID] = @Original_GIRO_ID) AND ((@IsNull_CURRENCY_" +
                "ID = 1 AND [CURRENCY_ID] IS NULL) OR ([CURRENCY_ID] = @Original_CURRENCY_ID)) AN" +
                "D ((@IsNull_BANK_ID = 1 AND [BANK_ID] IS NULL) OR ([BANK_ID] = @Original_BANK_ID" +
                ")) AND ((@IsNull_GIRO_NO = 1 AND [GIRO_NO] IS NULL) OR ([GIRO_NO] = @Original_GI" +
                "RO_NO)) AND ((@IsNull_PI_HUTANG_ID = 1 AND [PI_HUTANG_ID] IS NULL) OR ([PI_HUTAN" +
                "G_ID] = @Original_PI_HUTANG_ID)) AND ((@IsNull_GIRO_OUT_DATE = 1 AND [GIRO_OUT_D" +
                "ATE] IS NULL) OR ([GIRO_OUT_DATE] = @Original_GIRO_OUT_DATE)) AND ((@IsNull_GIRO" +
                "_MATURITY_DATE = 1 AND [GIRO_MATURITY_DATE] IS NULL) OR ([GIRO_MATURITY_DATE] = " +
                "@Original_GIRO_MATURITY_DATE)) AND ((@IsNull_GIRO_STATUS = 1 AND [GIRO_STATUS] I" +
                "S NULL) OR ([GIRO_STATUS] = @Original_GIRO_STATUS)) AND ((@IsNull_GIRO_TO = 1 AN" +
                "D [GIRO_TO] IS NULL) OR ([GIRO_TO] = @Original_GIRO_TO)) AND ((@IsNull_GIRO_FROM" +
                " = 1 AND [GIRO_FROM] IS NULL) OR ([GIRO_FROM] = @Original_GIRO_FROM)) AND ((@IsN" +
                "ull_GIRO_CAIR_DATE = 1 AND [GIRO_CAIR_DATE] IS NULL) OR ([GIRO_CAIR_DATE] = @Ori" +
                "ginal_GIRO_CAIR_DATE)) AND ((@IsNull_GIRO_AMMOUNT = 1 AND [GIRO_AMMOUNT] IS NULL" +
                ") OR ([GIRO_AMMOUNT] = @Original_GIRO_AMMOUNT)) AND ((@IsNull_MODIFIED_BY = 1 AN" +
                "D [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNu" +
                "ll_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Origina" +
                "l_MODIFIED_DATE)));\r\nSELECT GIRO_ID, CURRENCY_ID, BANK_ID, GIRO_NO, PI_HUTANG_ID" +
                ", GIRO_OUT_DATE, GIRO_MATURITY_DATE, GIRO_STATUS, GIRO_TO, GIRO_FROM, GIRO_CAIR_" +
                "DATE, GIRO_AMMOUNT, MODIFIED_BY, MODIFIED_DATE FROM T_GIRO WHERE (GIRO_ID = @GIR" +
                "O_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CURRENCY_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_NO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_NO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_OUT_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_OUT_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_MATURITY_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_MATURITY_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_TO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_FROM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_CAIR_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_CAIR_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_AMMOUNT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "GIRO_AMMOUNT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "GIRO_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CURRENCY_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CURRENCY_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_BANK_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_BANK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "BANK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_NO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_NO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_NO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_NO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_OUT_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_OUT_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_OUT_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_OUT_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_MATURITY_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_MATURITY_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_MATURITY_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_MATURITY_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_TO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_FROM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_FROM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_FROM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_CAIR_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_CAIR_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_CAIR_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_CAIR_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GIRO_AMMOUNT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GIRO_AMMOUNT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GIRO_AMMOUNT", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "GIRO_AMMOUNT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GIRO_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "GIRO_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GIRO_ID, CURRENCY_ID, BANK_ID, GIRO_NO, PI_HUTANG_ID, GIRO_OUT_DATE, GIRO_" +
                "MATURITY_DATE, GIRO_STATUS, GIRO_TO, GIRO_FROM, GIRO_CAIR_DATE, GIRO_AMMOUNT, MO" +
                "DIFIED_BY, MODIFIED_DATE FROM dbo.T_GIRO";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_GIRODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_GIRODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_GIRODataTable dataTable = new DataSet1.T_GIRODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_GIRODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_GIRO");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_GIRO_ID, string Original_CURRENCY_ID, string Original_BANK_ID, string Original_GIRO_NO, System.Nullable<decimal> Original_PI_HUTANG_ID, System.Nullable<System.DateTime> Original_GIRO_OUT_DATE, System.Nullable<System.DateTime> Original_GIRO_MATURITY_DATE, string Original_GIRO_STATUS, string Original_GIRO_TO, string Original_GIRO_FROM, System.Nullable<System.DateTime> Original_GIRO_CAIR_DATE, System.Nullable<decimal> Original_GIRO_AMMOUNT, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_GIRO_ID));
            if ((Original_CURRENCY_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CURRENCY_ID));
            }
            if ((Original_BANK_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BANK_ID));
            }
            if ((Original_GIRO_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_GIRO_NO));
            }
            if ((Original_PI_HUTANG_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_PI_HUTANG_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_GIRO_OUT_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_GIRO_OUT_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_GIRO_MATURITY_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_GIRO_MATURITY_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_GIRO_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_GIRO_STATUS));
            }
            if ((Original_GIRO_TO == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_GIRO_TO));
            }
            if ((Original_GIRO_FROM == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_GIRO_FROM));
            }
            if ((Original_GIRO_CAIR_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_GIRO_CAIR_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_GIRO_AMMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_GIRO_AMMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CURRENCY_ID, string BANK_ID, string GIRO_NO, System.Nullable<decimal> PI_HUTANG_ID, System.Nullable<System.DateTime> GIRO_OUT_DATE, System.Nullable<System.DateTime> GIRO_MATURITY_DATE, string GIRO_STATUS, string GIRO_TO, string GIRO_FROM, System.Nullable<System.DateTime> GIRO_CAIR_DATE, System.Nullable<decimal> GIRO_AMMOUNT, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((CURRENCY_ID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CURRENCY_ID));
            }
            if ((BANK_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BANK_ID));
            }
            if ((GIRO_NO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GIRO_NO));
            }
            if ((PI_HUTANG_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PI_HUTANG_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((GIRO_OUT_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(GIRO_OUT_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((GIRO_MATURITY_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(GIRO_MATURITY_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((GIRO_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(GIRO_STATUS));
            }
            if ((GIRO_TO == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(GIRO_TO));
            }
            if ((GIRO_FROM == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(GIRO_FROM));
            }
            if ((GIRO_CAIR_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(GIRO_CAIR_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((GIRO_AMMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(GIRO_AMMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CURRENCY_ID, 
                    string BANK_ID, 
                    string GIRO_NO, 
                    System.Nullable<decimal> PI_HUTANG_ID, 
                    System.Nullable<System.DateTime> GIRO_OUT_DATE, 
                    System.Nullable<System.DateTime> GIRO_MATURITY_DATE, 
                    string GIRO_STATUS, 
                    string GIRO_TO, 
                    string GIRO_FROM, 
                    System.Nullable<System.DateTime> GIRO_CAIR_DATE, 
                    System.Nullable<decimal> GIRO_AMMOUNT, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_GIRO_ID, 
                    string Original_CURRENCY_ID, 
                    string Original_BANK_ID, 
                    string Original_GIRO_NO, 
                    System.Nullable<decimal> Original_PI_HUTANG_ID, 
                    System.Nullable<System.DateTime> Original_GIRO_OUT_DATE, 
                    System.Nullable<System.DateTime> Original_GIRO_MATURITY_DATE, 
                    string Original_GIRO_STATUS, 
                    string Original_GIRO_TO, 
                    string Original_GIRO_FROM, 
                    System.Nullable<System.DateTime> Original_GIRO_CAIR_DATE, 
                    System.Nullable<decimal> Original_GIRO_AMMOUNT, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal GIRO_ID) {
            if ((CURRENCY_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CURRENCY_ID));
            }
            if ((BANK_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BANK_ID));
            }
            if ((GIRO_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(GIRO_NO));
            }
            if ((PI_HUTANG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PI_HUTANG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((GIRO_OUT_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(GIRO_OUT_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((GIRO_MATURITY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(GIRO_MATURITY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((GIRO_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(GIRO_STATUS));
            }
            if ((GIRO_TO == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(GIRO_TO));
            }
            if ((GIRO_FROM == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(GIRO_FROM));
            }
            if ((GIRO_CAIR_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(GIRO_CAIR_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((GIRO_AMMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(GIRO_AMMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_GIRO_ID));
            if ((Original_CURRENCY_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CURRENCY_ID));
            }
            if ((Original_BANK_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_BANK_ID));
            }
            if ((Original_GIRO_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_GIRO_NO));
            }
            if ((Original_PI_HUTANG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_PI_HUTANG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((Original_GIRO_OUT_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_GIRO_OUT_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((Original_GIRO_MATURITY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_GIRO_MATURITY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((Original_GIRO_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_GIRO_STATUS));
            }
            if ((Original_GIRO_TO == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_GIRO_TO));
            }
            if ((Original_GIRO_FROM == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_GIRO_FROM));
            }
            if ((Original_GIRO_CAIR_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_GIRO_CAIR_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((Original_GIRO_AMMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_GIRO_AMMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(GIRO_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_GROSIR_SETTINGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_GROSIR_SETTINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_GROSIR_SETTING";
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("DEFAULT_PIUTANG_CREDIT_LONG", "DEFAULT_PIUTANG_CREDIT_LONG");
            tableMapping.ColumnMappings.Add("DISCOUNT_PIN", "DISCOUNT_PIN");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_GROSIR_SETTING] WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_DEFAULT_PIUTANG_CREDIT_LONG = 1 AND [DEFAULT_PIUTANG_CREDIT_LONG] IS NULL) OR ([DEFAULT_PIUTANG_CREDIT_LONG] = @Original_DEFAULT_PIUTANG_CREDIT_LONG)) AND ((@IsNull_DISCOUNT_PIN = 1 AND [DISCOUNT_PIN] IS NULL) OR ([DISCOUNT_PIN] = @Original_DISCOUNT_PIN)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISCOUNT_PIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISCOUNT_PIN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_GROSIR_SETTING] ([SETTING_ID], [DEFAULT_PIUTANG_CREDIT_LONG], [DISCOUNT_PIN], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@SETTING_ID, @DEFAULT_PIUTANG_CREDIT_LONG, @DISCOUNT_PIN, @MODIFIED_BY, @MODIFIED_DATE);
SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, DISCOUNT_PIN, MODIFIED_BY, MODIFIED_DATE FROM T_GROSIR_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISCOUNT_PIN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_GROSIR_SETTING] SET [SETTING_ID] = @SETTING_ID, [DEFAULT_PIUTANG_CREDIT_LONG] = @DEFAULT_PIUTANG_CREDIT_LONG, [DISCOUNT_PIN] = @DISCOUNT_PIN, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_DEFAULT_PIUTANG_CREDIT_LONG = 1 AND [DEFAULT_PIUTANG_CREDIT_LONG] IS NULL) OR ([DEFAULT_PIUTANG_CREDIT_LONG] = @Original_DEFAULT_PIUTANG_CREDIT_LONG)) AND ((@IsNull_DISCOUNT_PIN = 1 AND [DISCOUNT_PIN] IS NULL) OR ([DISCOUNT_PIN] = @Original_DISCOUNT_PIN)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, DISCOUNT_PIN, MODIFIED_BY, MODIFIED_DATE FROM T_GROSIR_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISCOUNT_PIN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISCOUNT_PIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISCOUNT_PIN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, DISCOUNT_PIN, MODIFIED_BY, MODIFI" +
                "ED_DATE FROM dbo.T_GROSIR_SETTING";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_GROSIR_SETTINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_GROSIR_SETTINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_GROSIR_SETTINGDataTable dataTable = new DataSet1.T_GROSIR_SETTINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_GROSIR_SETTINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_GROSIR_SETTING");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SETTING_ID, System.Nullable<int> Original_DEFAULT_PIUTANG_CREDIT_LONG, string Original_DISCOUNT_PIN, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_DISCOUNT_PIN == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DISCOUNT_PIN));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SETTING_ID, System.Nullable<int> DEFAULT_PIUTANG_CREDIT_LONG, string DISCOUNT_PIN, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DISCOUNT_PIN == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DISCOUNT_PIN));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SETTING_ID, System.Nullable<int> DEFAULT_PIUTANG_CREDIT_LONG, string DISCOUNT_PIN, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_SETTING_ID, System.Nullable<int> Original_DEFAULT_PIUTANG_CREDIT_LONG, string Original_DISCOUNT_PIN, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DISCOUNT_PIN == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DISCOUNT_PIN));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_DISCOUNT_PIN == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DISCOUNT_PIN));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_JOURNALTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_JOURNALTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_JOURNAL";
            tableMapping.ColumnMappings.Add("JOURNAL_ID", "JOURNAL_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_ID", "ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_ID", "SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("VOUCHER_NO", "VOUCHER_NO");
            tableMapping.ColumnMappings.Add("JOURNAL_PIC", "JOURNAL_PIC");
            tableMapping.ColumnMappings.Add("JOURNAL_DATE", "JOURNAL_DATE");
            tableMapping.ColumnMappings.Add("JOURNAL_JUMLAH", "JOURNAL_JUMLAH");
            tableMapping.ColumnMappings.Add("JOURNAL_STATUS", "JOURNAL_STATUS");
            tableMapping.ColumnMappings.Add("JOURNAL_DESC", "JOURNAL_DESC");
            tableMapping.ColumnMappings.Add("ACCOUNT_SALDO", "ACCOUNT_SALDO");
            tableMapping.ColumnMappings.Add("SUB_ACCONT_SALDO", "SUB_ACCONT_SALDO");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_JOURNAL] WHERE (([JOURNAL_ID] = @Original_JOURNAL_ID) AND ((@IsNull_ACCOUNT_ID = 1 AND [ACCOUNT_ID] IS NULL) OR ([ACCOUNT_ID] = @Original_ACCOUNT_ID)) AND ((@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACCOUNT_ID] = @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_VOUCHER_NO = 1 AND [VOUCHER_NO] IS NULL) OR ([VOUCHER_NO] = @Original_VOUCHER_NO)) AND ((@IsNull_JOURNAL_PIC = 1 AND [JOURNAL_PIC] IS NULL) OR ([JOURNAL_PIC] = @Original_JOURNAL_PIC)) AND ((@IsNull_JOURNAL_DATE = 1 AND [JOURNAL_DATE] IS NULL) OR ([JOURNAL_DATE] = @Original_JOURNAL_DATE)) AND ((@IsNull_JOURNAL_JUMLAH = 1 AND [JOURNAL_JUMLAH] IS NULL) OR ([JOURNAL_JUMLAH] = @Original_JOURNAL_JUMLAH)) AND ((@IsNull_JOURNAL_STATUS = 1 AND [JOURNAL_STATUS] IS NULL) OR ([JOURNAL_STATUS] = @Original_JOURNAL_STATUS)) AND ((@IsNull_JOURNAL_DESC = 1 AND [JOURNAL_DESC] IS NULL) OR ([JOURNAL_DESC] = @Original_JOURNAL_DESC)) AND ((@IsNull_ACCOUNT_SALDO = 1 AND [ACCOUNT_SALDO] IS NULL) OR ([ACCOUNT_SALDO] = @Original_ACCOUNT_SALDO)) AND ((@IsNull_SUB_ACCONT_SALDO = 1 AND [SUB_ACCONT_SALDO] IS NULL) OR ([SUB_ACCONT_SALDO] = @Original_SUB_ACCONT_SALDO)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "JOURNAL_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_VOUCHER_NO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "VOUCHER_NO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VOUCHER_NO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VOUCHER_NO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_JUMLAH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_JUMLAH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "JOURNAL_JUMLAH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ACCOUNT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCONT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCONT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCONT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SUB_ACCONT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_JOURNAL] ([ACCOUNT_ID], [SUB_ACCOUNT_ID], [VOUCHER_NO], [JOURNAL_PIC], [JOURNAL_DATE], [JOURNAL_JUMLAH], [JOURNAL_STATUS], [JOURNAL_DESC], [ACCOUNT_SALDO], [SUB_ACCONT_SALDO], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@ACCOUNT_ID, @SUB_ACCOUNT_ID, @VOUCHER_NO, @JOURNAL_PIC, @JOURNAL_DATE, @JOURNAL_JUMLAH, @JOURNAL_STATUS, @JOURNAL_DESC, @ACCOUNT_SALDO, @SUB_ACCONT_SALDO, @MODIFIED_BY, @MODIFIED_DATE);
SELECT JOURNAL_ID, ACCOUNT_ID, SUB_ACCOUNT_ID, VOUCHER_NO, JOURNAL_PIC, JOURNAL_DATE, JOURNAL_JUMLAH, JOURNAL_STATUS, JOURNAL_DESC, ACCOUNT_SALDO, SUB_ACCONT_SALDO, MODIFIED_BY, MODIFIED_DATE FROM T_JOURNAL WHERE (JOURNAL_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VOUCHER_NO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VOUCHER_NO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "JOURNAL_JUMLAH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ACCOUNT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCONT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SUB_ACCONT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_JOURNAL] SET [ACCOUNT_ID] = @ACCOUNT_ID, [SUB_ACCOUNT_ID] = @SUB_" +
                "ACCOUNT_ID, [VOUCHER_NO] = @VOUCHER_NO, [JOURNAL_PIC] = @JOURNAL_PIC, [JOURNAL_D" +
                "ATE] = @JOURNAL_DATE, [JOURNAL_JUMLAH] = @JOURNAL_JUMLAH, [JOURNAL_STATUS] = @JO" +
                "URNAL_STATUS, [JOURNAL_DESC] = @JOURNAL_DESC, [ACCOUNT_SALDO] = @ACCOUNT_SALDO, " +
                "[SUB_ACCONT_SALDO] = @SUB_ACCONT_SALDO, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_" +
                "DATE] = @MODIFIED_DATE WHERE (([JOURNAL_ID] = @Original_JOURNAL_ID) AND ((@IsNul" +
                "l_ACCOUNT_ID = 1 AND [ACCOUNT_ID] IS NULL) OR ([ACCOUNT_ID] = @Original_ACCOUNT_" +
                "ID)) AND ((@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACC" +
                "OUNT_ID] = @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_VOUCHER_NO = 1 AND [VOUCHER_" +
                "NO] IS NULL) OR ([VOUCHER_NO] = @Original_VOUCHER_NO)) AND ((@IsNull_JOURNAL_PIC" +
                " = 1 AND [JOURNAL_PIC] IS NULL) OR ([JOURNAL_PIC] = @Original_JOURNAL_PIC)) AND " +
                "((@IsNull_JOURNAL_DATE = 1 AND [JOURNAL_DATE] IS NULL) OR ([JOURNAL_DATE] = @Ori" +
                "ginal_JOURNAL_DATE)) AND ((@IsNull_JOURNAL_JUMLAH = 1 AND [JOURNAL_JUMLAH] IS NU" +
                "LL) OR ([JOURNAL_JUMLAH] = @Original_JOURNAL_JUMLAH)) AND ((@IsNull_JOURNAL_STAT" +
                "US = 1 AND [JOURNAL_STATUS] IS NULL) OR ([JOURNAL_STATUS] = @Original_JOURNAL_ST" +
                "ATUS)) AND ((@IsNull_JOURNAL_DESC = 1 AND [JOURNAL_DESC] IS NULL) OR ([JOURNAL_D" +
                "ESC] = @Original_JOURNAL_DESC)) AND ((@IsNull_ACCOUNT_SALDO = 1 AND [ACCOUNT_SAL" +
                "DO] IS NULL) OR ([ACCOUNT_SALDO] = @Original_ACCOUNT_SALDO)) AND ((@IsNull_SUB_A" +
                "CCONT_SALDO = 1 AND [SUB_ACCONT_SALDO] IS NULL) OR ([SUB_ACCONT_SALDO] = @Origin" +
                "al_SUB_ACCONT_SALDO)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) O" +
                "R ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [" +
                "MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));\r\nSELEC" +
                "T JOURNAL_ID, ACCOUNT_ID, SUB_ACCOUNT_ID, VOUCHER_NO, JOURNAL_PIC, JOURNAL_DATE," +
                " JOURNAL_JUMLAH, JOURNAL_STATUS, JOURNAL_DESC, ACCOUNT_SALDO, SUB_ACCONT_SALDO, " +
                "MODIFIED_BY, MODIFIED_DATE FROM T_JOURNAL WHERE (JOURNAL_ID = @JOURNAL_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@VOUCHER_NO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VOUCHER_NO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "JOURNAL_JUMLAH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ACCOUNT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCONT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SUB_ACCONT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "JOURNAL_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_VOUCHER_NO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "VOUCHER_NO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_VOUCHER_NO", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "VOUCHER_NO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_JUMLAH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_JUMLAH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "JOURNAL_JUMLAH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JOURNAL_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JOURNAL_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "JOURNAL_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "ACCOUNT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCONT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCONT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCONT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SUB_ACCONT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JOURNAL_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "JOURNAL_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT JOURNAL_ID, ACCOUNT_ID, SUB_ACCOUNT_ID, VOUCHER_NO, JOURNAL_PIC, JOURNAL_D" +
                "ATE, JOURNAL_JUMLAH, JOURNAL_STATUS, JOURNAL_DESC, ACCOUNT_SALDO, SUB_ACCONT_SAL" +
                "DO, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_JOURNAL";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_JOURNALDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_JOURNALDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_JOURNALDataTable dataTable = new DataSet1.T_JOURNALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_JOURNALDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_JOURNAL");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_JOURNAL_ID, string Original_ACCOUNT_ID, string Original_SUB_ACCOUNT_ID, string Original_VOUCHER_NO, string Original_JOURNAL_PIC, System.Nullable<System.DateTime> Original_JOURNAL_DATE, System.Nullable<decimal> Original_JOURNAL_JUMLAH, string Original_JOURNAL_STATUS, string Original_JOURNAL_DESC, System.Nullable<decimal> Original_ACCOUNT_SALDO, System.Nullable<decimal> Original_SUB_ACCONT_SALDO, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_JOURNAL_ID));
            if ((Original_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ACCOUNT_ID));
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_VOUCHER_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_VOUCHER_NO));
            }
            if ((Original_JOURNAL_PIC == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_JOURNAL_PIC));
            }
            if ((Original_JOURNAL_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_JOURNAL_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_JOURNAL_JUMLAH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_JOURNAL_JUMLAH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_JOURNAL_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_JOURNAL_STATUS));
            }
            if ((Original_JOURNAL_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_JOURNAL_DESC));
            }
            if ((Original_ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_SUB_ACCONT_SALDO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_SUB_ACCONT_SALDO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ACCOUNT_ID, string SUB_ACCOUNT_ID, string VOUCHER_NO, string JOURNAL_PIC, System.Nullable<System.DateTime> JOURNAL_DATE, System.Nullable<decimal> JOURNAL_JUMLAH, string JOURNAL_STATUS, string JOURNAL_DESC, System.Nullable<decimal> ACCOUNT_SALDO, System.Nullable<decimal> SUB_ACCONT_SALDO, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ACCOUNT_ID));
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((VOUCHER_NO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(VOUCHER_NO));
            }
            if ((JOURNAL_PIC == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(JOURNAL_PIC));
            }
            if ((JOURNAL_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(JOURNAL_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((JOURNAL_JUMLAH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(JOURNAL_JUMLAH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((JOURNAL_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(JOURNAL_STATUS));
            }
            if ((JOURNAL_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(JOURNAL_DESC));
            }
            if ((ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((SUB_ACCONT_SALDO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(SUB_ACCONT_SALDO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ACCOUNT_ID, 
                    string SUB_ACCOUNT_ID, 
                    string VOUCHER_NO, 
                    string JOURNAL_PIC, 
                    System.Nullable<System.DateTime> JOURNAL_DATE, 
                    System.Nullable<decimal> JOURNAL_JUMLAH, 
                    string JOURNAL_STATUS, 
                    string JOURNAL_DESC, 
                    System.Nullable<decimal> ACCOUNT_SALDO, 
                    System.Nullable<decimal> SUB_ACCONT_SALDO, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_JOURNAL_ID, 
                    string Original_ACCOUNT_ID, 
                    string Original_SUB_ACCOUNT_ID, 
                    string Original_VOUCHER_NO, 
                    string Original_JOURNAL_PIC, 
                    System.Nullable<System.DateTime> Original_JOURNAL_DATE, 
                    System.Nullable<decimal> Original_JOURNAL_JUMLAH, 
                    string Original_JOURNAL_STATUS, 
                    string Original_JOURNAL_DESC, 
                    System.Nullable<decimal> Original_ACCOUNT_SALDO, 
                    System.Nullable<decimal> Original_SUB_ACCONT_SALDO, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal JOURNAL_ID) {
            if ((ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ACCOUNT_ID));
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((VOUCHER_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(VOUCHER_NO));
            }
            if ((JOURNAL_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(JOURNAL_PIC));
            }
            if ((JOURNAL_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(JOURNAL_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((JOURNAL_JUMLAH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(JOURNAL_JUMLAH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((JOURNAL_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(JOURNAL_STATUS));
            }
            if ((JOURNAL_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(JOURNAL_DESC));
            }
            if ((ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((SUB_ACCONT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(SUB_ACCONT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_JOURNAL_ID));
            if ((Original_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ACCOUNT_ID));
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_VOUCHER_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_VOUCHER_NO));
            }
            if ((Original_JOURNAL_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_JOURNAL_PIC));
            }
            if ((Original_JOURNAL_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_JOURNAL_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_JOURNAL_JUMLAH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_JOURNAL_JUMLAH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_JOURNAL_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_JOURNAL_STATUS));
            }
            if ((Original_JOURNAL_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_JOURNAL_DESC));
            }
            if ((Original_ACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_ACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_SUB_ACCONT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_SUB_ACCONT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(JOURNAL_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_LOGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_LOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_LOG";
            tableMapping.ColumnMappings.Add("LOG_ID", "LOG_ID");
            tableMapping.ColumnMappings.Add("LOG_DATE", "LOG_DATE");
            tableMapping.ColumnMappings.Add("LOG_USER", "LOG_USER");
            tableMapping.ColumnMappings.Add("LOG_COMP_NAME", "LOG_COMP_NAME");
            tableMapping.ColumnMappings.Add("LOG_IP", "LOG_IP");
            tableMapping.ColumnMappings.Add("LOG_ACTION", "LOG_ACTION");
            tableMapping.ColumnMappings.Add("LOG_TABLE", "LOG_TABLE");
            tableMapping.ColumnMappings.Add("LOG_DESC", "LOG_DESC");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_LOG] WHERE (([LOG_ID] = @Original_LOG_ID) AND ((@IsNull_LOG_DATE = 1 AND [LOG_DATE] IS NULL) OR ([LOG_DATE] = @Original_LOG_DATE)) AND ((@IsNull_LOG_USER = 1 AND [LOG_USER] IS NULL) OR ([LOG_USER] = @Original_LOG_USER)) AND ((@IsNull_LOG_COMP_NAME = 1 AND [LOG_COMP_NAME] IS NULL) OR ([LOG_COMP_NAME] = @Original_LOG_COMP_NAME)) AND ((@IsNull_LOG_IP = 1 AND [LOG_IP] IS NULL) OR ([LOG_IP] = @Original_LOG_IP)) AND ((@IsNull_LOG_ACTION = 1 AND [LOG_ACTION] IS NULL) OR ([LOG_ACTION] = @Original_LOG_ACTION)) AND ((@IsNull_LOG_TABLE = 1 AND [LOG_TABLE] IS NULL) OR ([LOG_TABLE] = @Original_LOG_TABLE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "LOG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_USER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_USER", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_USER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_USER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_COMP_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_COMP_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_COMP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_COMP_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_IP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_IP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_IP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_IP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_ACTION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_ACTION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_ACTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_ACTION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_TABLE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_TABLE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_TABLE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_TABLE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_LOG] ([LOG_DATE], [LOG_USER], [LOG_COMP_NAME], [LOG_IP], [LOG_ACTION], [LOG_TABLE], [LOG_DESC]) VALUES (@LOG_DATE, @LOG_USER, @LOG_COMP_NAME, @LOG_IP, @LOG_ACTION, @LOG_TABLE, @LOG_DESC);
SELECT LOG_ID, LOG_DATE, LOG_USER, LOG_COMP_NAME, LOG_IP, LOG_ACTION, LOG_TABLE, LOG_DESC FROM T_LOG WHERE (LOG_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_USER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_USER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_COMP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_COMP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_IP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_IP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_ACTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_ACTION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_TABLE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_TABLE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_LOG] SET [LOG_DATE] = @LOG_DATE, [LOG_USER] = @LOG_USER, [LOG_COMP_NAME] = @LOG_COMP_NAME, [LOG_IP] = @LOG_IP, [LOG_ACTION] = @LOG_ACTION, [LOG_TABLE] = @LOG_TABLE, [LOG_DESC] = @LOG_DESC WHERE (([LOG_ID] = @Original_LOG_ID) AND ((@IsNull_LOG_DATE = 1 AND [LOG_DATE] IS NULL) OR ([LOG_DATE] = @Original_LOG_DATE)) AND ((@IsNull_LOG_USER = 1 AND [LOG_USER] IS NULL) OR ([LOG_USER] = @Original_LOG_USER)) AND ((@IsNull_LOG_COMP_NAME = 1 AND [LOG_COMP_NAME] IS NULL) OR ([LOG_COMP_NAME] = @Original_LOG_COMP_NAME)) AND ((@IsNull_LOG_IP = 1 AND [LOG_IP] IS NULL) OR ([LOG_IP] = @Original_LOG_IP)) AND ((@IsNull_LOG_ACTION = 1 AND [LOG_ACTION] IS NULL) OR ([LOG_ACTION] = @Original_LOG_ACTION)) AND ((@IsNull_LOG_TABLE = 1 AND [LOG_TABLE] IS NULL) OR ([LOG_TABLE] = @Original_LOG_TABLE)));
SELECT LOG_ID, LOG_DATE, LOG_USER, LOG_COMP_NAME, LOG_IP, LOG_ACTION, LOG_TABLE, LOG_DESC FROM T_LOG WHERE (LOG_ID = @LOG_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_USER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_USER", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_COMP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_COMP_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_IP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_IP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_ACTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_ACTION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_TABLE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_TABLE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "LOG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_USER", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_USER", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_USER", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_USER", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_COMP_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_COMP_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_COMP_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_COMP_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_IP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_IP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_IP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_IP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_ACTION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_ACTION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_ACTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_ACTION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOG_TABLE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_TABLE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOG_TABLE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOG_TABLE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOG_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "LOG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LOG_ID, LOG_DATE, LOG_USER, LOG_COMP_NAME, LOG_IP, LOG_ACTION, LOG_TABLE, " +
                "LOG_DESC FROM dbo.T_LOG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_LOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_LOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_LOGDataTable dataTable = new DataSet1.T_LOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_LOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_LOG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_LOG_ID, System.Nullable<System.DateTime> Original_LOG_DATE, string Original_LOG_USER, string Original_LOG_COMP_NAME, string Original_LOG_IP, string Original_LOG_ACTION, string Original_LOG_TABLE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_LOG_ID));
            if ((Original_LOG_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_LOG_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_LOG_USER == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LOG_USER));
            }
            if ((Original_LOG_COMP_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LOG_COMP_NAME));
            }
            if ((Original_LOG_IP == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_LOG_IP));
            }
            if ((Original_LOG_ACTION == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_LOG_ACTION));
            }
            if ((Original_LOG_TABLE == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_LOG_TABLE));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<System.DateTime> LOG_DATE, string LOG_USER, string LOG_COMP_NAME, string LOG_IP, string LOG_ACTION, string LOG_TABLE, string LOG_DESC) {
            if ((LOG_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(LOG_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((LOG_USER == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LOG_USER));
            }
            if ((LOG_COMP_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LOG_COMP_NAME));
            }
            if ((LOG_IP == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LOG_IP));
            }
            if ((LOG_ACTION == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LOG_ACTION));
            }
            if ((LOG_TABLE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LOG_TABLE));
            }
            if ((LOG_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(LOG_DESC));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<System.DateTime> LOG_DATE, string LOG_USER, string LOG_COMP_NAME, string LOG_IP, string LOG_ACTION, string LOG_TABLE, string LOG_DESC, decimal Original_LOG_ID, System.Nullable<System.DateTime> Original_LOG_DATE, string Original_LOG_USER, string Original_LOG_COMP_NAME, string Original_LOG_IP, string Original_LOG_ACTION, string Original_LOG_TABLE, decimal LOG_ID) {
            if ((LOG_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(LOG_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((LOG_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LOG_USER));
            }
            if ((LOG_COMP_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LOG_COMP_NAME));
            }
            if ((LOG_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LOG_IP));
            }
            if ((LOG_ACTION == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LOG_ACTION));
            }
            if ((LOG_TABLE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LOG_TABLE));
            }
            if ((LOG_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(LOG_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_LOG_ID));
            if ((Original_LOG_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_LOG_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_LOG_USER == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_LOG_USER));
            }
            if ((Original_LOG_COMP_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_LOG_COMP_NAME));
            }
            if ((Original_LOG_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_LOG_IP));
            }
            if ((Original_LOG_ACTION == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_LOG_ACTION));
            }
            if ((Original_LOG_TABLE == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_LOG_TABLE));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(LOG_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_MENU_USERTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_MENU_USERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_MENU_USER";
            tableMapping.ColumnMappings.Add("MENU_ID", "MENU_ID");
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("HAS_ACCESS", "HAS_ACCESS");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_MENU_USER] WHERE (([MENU_ID] = @Original_MENU_ID) AND ([USER_NAME] = @Original_USER_NAME) AND ([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_HAS_ACCESS = 1 AND [HAS_ACCESS] IS NULL) OR ([HAS_ACCESS] = @Original_HAS_ACCESS)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MENU_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MENU_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HAS_ACCESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HAS_ACCESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HAS_ACCESS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "HAS_ACCESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_MENU_USER] ([MENU_ID], [USER_NAME], [SETTING_ID], [HAS_ACCESS], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@MENU_ID, @USER_NAME, @SETTING_ID, @HAS_ACCESS, @MODIFIED_BY, @MODIFIED_DATE);
SELECT MENU_ID, USER_NAME, SETTING_ID, HAS_ACCESS, MODIFIED_BY, MODIFIED_DATE FROM T_MENU_USER WHERE (MENU_ID = @MENU_ID) AND (SETTING_ID = @SETTING_ID) AND (USER_NAME = @USER_NAME)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MENU_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MENU_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HAS_ACCESS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "HAS_ACCESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_MENU_USER] SET [MENU_ID] = @MENU_ID, [USER_NAME] = @USER_NAME, [SETTING_ID] = @SETTING_ID, [HAS_ACCESS] = @HAS_ACCESS, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([MENU_ID] = @Original_MENU_ID) AND ([USER_NAME] = @Original_USER_NAME) AND ([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_HAS_ACCESS = 1 AND [HAS_ACCESS] IS NULL) OR ([HAS_ACCESS] = @Original_HAS_ACCESS)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT MENU_ID, USER_NAME, SETTING_ID, HAS_ACCESS, MODIFIED_BY, MODIFIED_DATE FROM T_MENU_USER WHERE (MENU_ID = @MENU_ID) AND (SETTING_ID = @SETTING_ID) AND (USER_NAME = @USER_NAME)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MENU_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MENU_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@USER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HAS_ACCESS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "HAS_ACCESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MENU_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "MENU_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_USER_NAME", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "USER_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HAS_ACCESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HAS_ACCESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HAS_ACCESS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "HAS_ACCESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MENU_ID, USER_NAME, SETTING_ID, HAS_ACCESS, MODIFIED_BY, MODIFIED_DATE FRO" +
                "M dbo.T_MENU_USER";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_MENU_USERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_MENU_USERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_MENU_USERDataTable dataTable = new DataSet1.T_MENU_USERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_MENU_USERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_MENU_USER");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_MENU_ID, string Original_USER_NAME, string Original_SETTING_ID, System.Nullable<bool> Original_HAS_ACCESS, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_MENU_ID));
            if ((Original_USER_NAME == null)) {
                throw new System.ArgumentNullException("Original_USER_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_USER_NAME));
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_HAS_ACCESS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_HAS_ACCESS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal MENU_ID, string USER_NAME, string SETTING_ID, System.Nullable<bool> HAS_ACCESS, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(MENU_ID));
            if ((USER_NAME == null)) {
                throw new System.ArgumentNullException("USER_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USER_NAME));
            }
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SETTING_ID));
            }
            if ((HAS_ACCESS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(HAS_ACCESS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal MENU_ID, string USER_NAME, string SETTING_ID, System.Nullable<bool> HAS_ACCESS, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, decimal Original_MENU_ID, string Original_USER_NAME, string Original_SETTING_ID, System.Nullable<bool> Original_HAS_ACCESS, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(MENU_ID));
            if ((USER_NAME == null)) {
                throw new System.ArgumentNullException("USER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USER_NAME));
            }
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SETTING_ID));
            }
            if ((HAS_ACCESS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(HAS_ACCESS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_MENU_ID));
            if ((Original_USER_NAME == null)) {
                throw new System.ArgumentNullException("Original_USER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_USER_NAME));
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_HAS_ACCESS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_HAS_ACCESS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_MOTOR_SETTINGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_MOTOR_SETTINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_MOTOR_SETTING";
            tableMapping.ColumnMappings.Add("SETTING_ID", "SETTING_ID");
            tableMapping.ColumnMappings.Add("DEFAULT_PIUTANG_CREDIT_LONG", "DEFAULT_PIUTANG_CREDIT_LONG");
            tableMapping.ColumnMappings.Add("DISCOUNT_PIN", "DISCOUNT_PIN");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_MOTOR_SETTING] WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_DEFAULT_PIUTANG_CREDIT_LONG = 1 AND [DEFAULT_PIUTANG_CREDIT_LONG] IS NULL) OR ([DEFAULT_PIUTANG_CREDIT_LONG] = @Original_DEFAULT_PIUTANG_CREDIT_LONG)) AND ((@IsNull_DISCOUNT_PIN = 1 AND [DISCOUNT_PIN] IS NULL) OR ([DISCOUNT_PIN] = @Original_DISCOUNT_PIN)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISCOUNT_PIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISCOUNT_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_MOTOR_SETTING] ([SETTING_ID], [DEFAULT_PIUTANG_CREDIT_LONG], [DISCOUNT_PIN], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@SETTING_ID, @DEFAULT_PIUTANG_CREDIT_LONG, @DISCOUNT_PIN, @MODIFIED_BY, @MODIFIED_DATE);
SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, DISCOUNT_PIN, MODIFIED_BY, MODIFIED_DATE FROM T_MOTOR_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISCOUNT_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_MOTOR_SETTING] SET [SETTING_ID] = @SETTING_ID, [DEFAULT_PIUTANG_CREDIT_LONG] = @DEFAULT_PIUTANG_CREDIT_LONG, [DISCOUNT_PIN] = @DISCOUNT_PIN, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([SETTING_ID] = @Original_SETTING_ID) AND ((@IsNull_DEFAULT_PIUTANG_CREDIT_LONG = 1 AND [DEFAULT_PIUTANG_CREDIT_LONG] IS NULL) OR ([DEFAULT_PIUTANG_CREDIT_LONG] = @Original_DEFAULT_PIUTANG_CREDIT_LONG)) AND ((@IsNull_DISCOUNT_PIN = 1 AND [DISCOUNT_PIN] IS NULL) OR ([DISCOUNT_PIN] = @Original_DISCOUNT_PIN)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, DISCOUNT_PIN, MODIFIED_BY, MODIFIED_DATE FROM T_MOTOR_SETTING WHERE (SETTING_ID = @SETTING_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISCOUNT_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SETTING_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SETTING_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DEFAULT_PIUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DEFAULT_PIUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISCOUNT_PIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISCOUNT_PIN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DISCOUNT_PIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SETTING_ID, DEFAULT_PIUTANG_CREDIT_LONG, DISCOUNT_PIN, MODIFIED_BY, MODIFI" +
                "ED_DATE FROM dbo.T_MOTOR_SETTING";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_MOTOR_SETTINGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_MOTOR_SETTINGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_MOTOR_SETTINGDataTable dataTable = new DataSet1.T_MOTOR_SETTINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_MOTOR_SETTINGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_MOTOR_SETTING");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SETTING_ID, System.Nullable<int> Original_DEFAULT_PIUTANG_CREDIT_LONG, string Original_DISCOUNT_PIN, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_DISCOUNT_PIN == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DISCOUNT_PIN));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SETTING_ID, System.Nullable<int> DEFAULT_PIUTANG_CREDIT_LONG, string DISCOUNT_PIN, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DISCOUNT_PIN == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DISCOUNT_PIN));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SETTING_ID, System.Nullable<int> DEFAULT_PIUTANG_CREDIT_LONG, string DISCOUNT_PIN, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE, string Original_SETTING_ID, System.Nullable<int> Original_DEFAULT_PIUTANG_CREDIT_LONG, string Original_DISCOUNT_PIN, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            if ((SETTING_ID == null)) {
                throw new System.ArgumentNullException("SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SETTING_ID));
            }
            if ((DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DISCOUNT_PIN == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DISCOUNT_PIN));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_SETTING_ID == null)) {
                throw new System.ArgumentNullException("Original_SETTING_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SETTING_ID));
            }
            if ((Original_DEFAULT_PIUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_DEFAULT_PIUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_DISCOUNT_PIN == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DISCOUNT_PIN));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_PI_HUTANGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_PI_HUTANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_PI_HUTANG";
            tableMapping.ColumnMappings.Add("PI_HUTANG_ID", "PI_HUTANG_ID");
            tableMapping.ColumnMappings.Add("PI_HUTANG_STATUS", "PI_HUTANG_STATUS");
            tableMapping.ColumnMappings.Add("TRANSACTION_ID", "TRANSACTION_ID");
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_ID", "SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("PI_HUTANG_PIC", "PI_HUTANG_PIC");
            tableMapping.ColumnMappings.Add("PI_HUTANG_DATE", "PI_HUTANG_DATE");
            tableMapping.ColumnMappings.Add("PI_HUTANG_JATUH_TEMPO", "PI_HUTANG_JATUH_TEMPO");
            tableMapping.ColumnMappings.Add("PI_HUTANG_JUMLAH", "PI_HUTANG_JUMLAH");
            tableMapping.ColumnMappings.Add("PI_HUTANG_DIBAYAR", "PI_HUTANG_DIBAYAR");
            tableMapping.ColumnMappings.Add("PI_HUTANG_RETUR", "PI_HUTANG_RETUR");
            tableMapping.ColumnMappings.Add("PI_HUTANG_SISA", "PI_HUTANG_SISA");
            tableMapping.ColumnMappings.Add("PI_HUTANG_LUNAS_DATE", "PI_HUTANG_LUNAS_DATE");
            tableMapping.ColumnMappings.Add("PI_HUTANG_CREDIT_LONG", "PI_HUTANG_CREDIT_LONG");
            tableMapping.ColumnMappings.Add("PI_HUTANG_DESC", "PI_HUTANG_DESC");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T_PI_HUTANG] WHERE (([PI_HUTANG_ID] = @Original_PI_HUTANG_ID) " +
                "AND ((@IsNull_PI_HUTANG_STATUS = 1 AND [PI_HUTANG_STATUS] IS NULL) OR ([PI_HUTAN" +
                "G_STATUS] = @Original_PI_HUTANG_STATUS)) AND ((@IsNull_TRANSACTION_ID = 1 AND [T" +
                "RANSACTION_ID] IS NULL) OR ([TRANSACTION_ID] = @Original_TRANSACTION_ID)) AND ((" +
                "@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACCOUNT_ID] = " +
                "@Original_SUB_ACCOUNT_ID)) AND ((@IsNull_PI_HUTANG_PIC = 1 AND [PI_HUTANG_PIC] I" +
                "S NULL) OR ([PI_HUTANG_PIC] = @Original_PI_HUTANG_PIC)) AND ((@IsNull_PI_HUTANG_" +
                "DATE = 1 AND [PI_HUTANG_DATE] IS NULL) OR ([PI_HUTANG_DATE] = @Original_PI_HUTAN" +
                "G_DATE)) AND ((@IsNull_PI_HUTANG_JATUH_TEMPO = 1 AND [PI_HUTANG_JATUH_TEMPO] IS " +
                "NULL) OR ([PI_HUTANG_JATUH_TEMPO] = @Original_PI_HUTANG_JATUH_TEMPO)) AND ((@IsN" +
                "ull_PI_HUTANG_JUMLAH = 1 AND [PI_HUTANG_JUMLAH] IS NULL) OR ([PI_HUTANG_JUMLAH] " +
                "= @Original_PI_HUTANG_JUMLAH)) AND ((@IsNull_PI_HUTANG_DIBAYAR = 1 AND [PI_HUTAN" +
                "G_DIBAYAR] IS NULL) OR ([PI_HUTANG_DIBAYAR] = @Original_PI_HUTANG_DIBAYAR)) AND " +
                "((@IsNull_PI_HUTANG_RETUR = 1 AND [PI_HUTANG_RETUR] IS NULL) OR ([PI_HUTANG_RETU" +
                "R] = @Original_PI_HUTANG_RETUR)) AND ((@IsNull_PI_HUTANG_SISA = 1 AND [PI_HUTANG" +
                "_SISA] IS NULL) OR ([PI_HUTANG_SISA] = @Original_PI_HUTANG_SISA)) AND ((@IsNull_" +
                "PI_HUTANG_LUNAS_DATE = 1 AND [PI_HUTANG_LUNAS_DATE] IS NULL) OR ([PI_HUTANG_LUNA" +
                "S_DATE] = @Original_PI_HUTANG_LUNAS_DATE)) AND ((@IsNull_PI_HUTANG_CREDIT_LONG =" +
                " 1 AND [PI_HUTANG_CREDIT_LONG] IS NULL) OR ([PI_HUTANG_CREDIT_LONG] = @Original_" +
                "PI_HUTANG_CREDIT_LONG)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL)" +
                " OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND" +
                " [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_PIC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_JATUH_TEMPO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_JATUH_TEMPO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_JATUH_TEMPO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_JATUH_TEMPO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_JUMLAH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_JUMLAH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_JUMLAH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_DIBAYAR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DIBAYAR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_DIBAYAR", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_DIBAYAR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_RETUR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_RETUR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_RETUR", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_RETUR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_SISA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_SISA", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_SISA", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_SISA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_LUNAS_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_LUNAS_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_LUNAS_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_LUNAS_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_CREDIT_LONG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_PI_HUTANG] ([PI_HUTANG_STATUS], [TRANSACTION_ID], [SUB_ACCOUNT_ID], [PI_HUTANG_PIC], [PI_HUTANG_DATE], [PI_HUTANG_JATUH_TEMPO], [PI_HUTANG_JUMLAH], [PI_HUTANG_DIBAYAR], [PI_HUTANG_RETUR], [PI_HUTANG_SISA], [PI_HUTANG_LUNAS_DATE], [PI_HUTANG_CREDIT_LONG], [PI_HUTANG_DESC], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@PI_HUTANG_STATUS, @TRANSACTION_ID, @SUB_ACCOUNT_ID, @PI_HUTANG_PIC, @PI_HUTANG_DATE, @PI_HUTANG_JATUH_TEMPO, @PI_HUTANG_JUMLAH, @PI_HUTANG_DIBAYAR, @PI_HUTANG_RETUR, @PI_HUTANG_SISA, @PI_HUTANG_LUNAS_DATE, @PI_HUTANG_CREDIT_LONG, @PI_HUTANG_DESC, @MODIFIED_BY, @MODIFIED_DATE);
SELECT PI_HUTANG_ID, PI_HUTANG_STATUS, TRANSACTION_ID, SUB_ACCOUNT_ID, PI_HUTANG_PIC, PI_HUTANG_DATE, PI_HUTANG_JATUH_TEMPO, PI_HUTANG_JUMLAH, PI_HUTANG_DIBAYAR, PI_HUTANG_RETUR, PI_HUTANG_SISA, PI_HUTANG_LUNAS_DATE, PI_HUTANG_CREDIT_LONG, PI_HUTANG_DESC, MODIFIED_BY, MODIFIED_DATE FROM T_PI_HUTANG WHERE (PI_HUTANG_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_PIC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_JATUH_TEMPO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_JATUH_TEMPO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_JUMLAH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_DIBAYAR", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_DIBAYAR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_RETUR", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_RETUR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_SISA", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_SISA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_LUNAS_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_LUNAS_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_CREDIT_LONG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_CREDIT_LONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_PI_HUTANG] SET [PI_HUTANG_STATUS] = @PI_HUTANG_STATUS, [TRANSACTI" +
                "ON_ID] = @TRANSACTION_ID, [SUB_ACCOUNT_ID] = @SUB_ACCOUNT_ID, [PI_HUTANG_PIC] = " +
                "@PI_HUTANG_PIC, [PI_HUTANG_DATE] = @PI_HUTANG_DATE, [PI_HUTANG_JATUH_TEMPO] = @P" +
                "I_HUTANG_JATUH_TEMPO, [PI_HUTANG_JUMLAH] = @PI_HUTANG_JUMLAH, [PI_HUTANG_DIBAYAR" +
                "] = @PI_HUTANG_DIBAYAR, [PI_HUTANG_RETUR] = @PI_HUTANG_RETUR, [PI_HUTANG_SISA] =" +
                " @PI_HUTANG_SISA, [PI_HUTANG_LUNAS_DATE] = @PI_HUTANG_LUNAS_DATE, [PI_HUTANG_CRE" +
                "DIT_LONG] = @PI_HUTANG_CREDIT_LONG, [PI_HUTANG_DESC] = @PI_HUTANG_DESC, [MODIFIE" +
                "D_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([PI_HUTANG_ID] = " +
                "@Original_PI_HUTANG_ID) AND ((@IsNull_PI_HUTANG_STATUS = 1 AND [PI_HUTANG_STATUS" +
                "] IS NULL) OR ([PI_HUTANG_STATUS] = @Original_PI_HUTANG_STATUS)) AND ((@IsNull_T" +
                "RANSACTION_ID = 1 AND [TRANSACTION_ID] IS NULL) OR ([TRANSACTION_ID] = @Original" +
                "_TRANSACTION_ID)) AND ((@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL)" +
                " OR ([SUB_ACCOUNT_ID] = @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_PI_HUTANG_PIC =" +
                " 1 AND [PI_HUTANG_PIC] IS NULL) OR ([PI_HUTANG_PIC] = @Original_PI_HUTANG_PIC)) " +
                "AND ((@IsNull_PI_HUTANG_DATE = 1 AND [PI_HUTANG_DATE] IS NULL) OR ([PI_HUTANG_DA" +
                "TE] = @Original_PI_HUTANG_DATE)) AND ((@IsNull_PI_HUTANG_JATUH_TEMPO = 1 AND [PI" +
                "_HUTANG_JATUH_TEMPO] IS NULL) OR ([PI_HUTANG_JATUH_TEMPO] = @Original_PI_HUTANG_" +
                "JATUH_TEMPO)) AND ((@IsNull_PI_HUTANG_JUMLAH = 1 AND [PI_HUTANG_JUMLAH] IS NULL)" +
                " OR ([PI_HUTANG_JUMLAH] = @Original_PI_HUTANG_JUMLAH)) AND ((@IsNull_PI_HUTANG_D" +
                "IBAYAR = 1 AND [PI_HUTANG_DIBAYAR] IS NULL) OR ([PI_HUTANG_DIBAYAR] = @Original_" +
                "PI_HUTANG_DIBAYAR)) AND ((@IsNull_PI_HUTANG_RETUR = 1 AND [PI_HUTANG_RETUR] IS N" +
                "ULL) OR ([PI_HUTANG_RETUR] = @Original_PI_HUTANG_RETUR)) AND ((@IsNull_PI_HUTANG" +
                "_SISA = 1 AND [PI_HUTANG_SISA] IS NULL) OR ([PI_HUTANG_SISA] = @Original_PI_HUTA" +
                "NG_SISA)) AND ((@IsNull_PI_HUTANG_LUNAS_DATE = 1 AND [PI_HUTANG_LUNAS_DATE] IS N" +
                "ULL) OR ([PI_HUTANG_LUNAS_DATE] = @Original_PI_HUTANG_LUNAS_DATE)) AND ((@IsNull" +
                "_PI_HUTANG_CREDIT_LONG = 1 AND [PI_HUTANG_CREDIT_LONG] IS NULL) OR ([PI_HUTANG_C" +
                "REDIT_LONG] = @Original_PI_HUTANG_CREDIT_LONG)) AND ((@IsNull_MODIFIED_BY = 1 AN" +
                "D [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNu" +
                "ll_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Origina" +
                "l_MODIFIED_DATE)));\r\nSELECT PI_HUTANG_ID, PI_HUTANG_STATUS, TRANSACTION_ID, SUB_" +
                "ACCOUNT_ID, PI_HUTANG_PIC, PI_HUTANG_DATE, PI_HUTANG_JATUH_TEMPO, PI_HUTANG_JUML" +
                "AH, PI_HUTANG_DIBAYAR, PI_HUTANG_RETUR, PI_HUTANG_SISA, PI_HUTANG_LUNAS_DATE, PI" +
                "_HUTANG_CREDIT_LONG, PI_HUTANG_DESC, MODIFIED_BY, MODIFIED_DATE FROM T_PI_HUTANG" +
                " WHERE (PI_HUTANG_ID = @PI_HUTANG_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_PIC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_JATUH_TEMPO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_JATUH_TEMPO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_JUMLAH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_DIBAYAR", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_DIBAYAR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_RETUR", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_RETUR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_SISA", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_SISA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_LUNAS_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_LUNAS_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_CREDIT_LONG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_CREDIT_LONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_STATUS", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_PIC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_JATUH_TEMPO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_JATUH_TEMPO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_JATUH_TEMPO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_JATUH_TEMPO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_JUMLAH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_JUMLAH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_JUMLAH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_DIBAYAR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_DIBAYAR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_DIBAYAR", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_DIBAYAR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_RETUR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_RETUR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_RETUR", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_RETUR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_SISA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_SISA", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_SISA", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PI_HUTANG_SISA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_LUNAS_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_LUNAS_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_LUNAS_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_LUNAS_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PI_HUTANG_CREDIT_LONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PI_HUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PI_HUTANG_CREDIT_LONG", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_CREDIT_LONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PI_HUTANG_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "PI_HUTANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT PI_HUTANG_ID, PI_HUTANG_STATUS, TRANSACTION_ID, SUB_ACCOUNT_ID, PI_HUTANG_PIC, PI_HUTANG_DATE, PI_HUTANG_JATUH_TEMPO, PI_HUTANG_JUMLAH, PI_HUTANG_DIBAYAR, PI_HUTANG_RETUR, PI_HUTANG_SISA, PI_HUTANG_LUNAS_DATE, PI_HUTANG_CREDIT_LONG, PI_HUTANG_DESC, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_PI_HUTANG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_PI_HUTANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_PI_HUTANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_PI_HUTANGDataTable dataTable = new DataSet1.T_PI_HUTANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_PI_HUTANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_PI_HUTANG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PI_HUTANG_ID, string Original_PI_HUTANG_STATUS, System.Nullable<decimal> Original_TRANSACTION_ID, string Original_SUB_ACCOUNT_ID, string Original_PI_HUTANG_PIC, System.Nullable<System.DateTime> Original_PI_HUTANG_DATE, System.Nullable<System.DateTime> Original_PI_HUTANG_JATUH_TEMPO, System.Nullable<decimal> Original_PI_HUTANG_JUMLAH, System.Nullable<decimal> Original_PI_HUTANG_DIBAYAR, System.Nullable<decimal> Original_PI_HUTANG_RETUR, System.Nullable<decimal> Original_PI_HUTANG_SISA, System.Nullable<System.DateTime> Original_PI_HUTANG_LUNAS_DATE, System.Nullable<decimal> Original_PI_HUTANG_CREDIT_LONG, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PI_HUTANG_ID));
            if ((Original_PI_HUTANG_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PI_HUTANG_STATUS));
            }
            if ((Original_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_PI_HUTANG_PIC == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PI_HUTANG_PIC));
            }
            if ((Original_PI_HUTANG_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_PI_HUTANG_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_JATUH_TEMPO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_PI_HUTANG_JATUH_TEMPO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_JUMLAH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_PI_HUTANG_JUMLAH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_DIBAYAR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_PI_HUTANG_DIBAYAR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_RETUR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_PI_HUTANG_RETUR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_SISA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_PI_HUTANG_SISA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_LUNAS_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_PI_HUTANG_LUNAS_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_PI_HUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PI_HUTANG_STATUS, System.Nullable<decimal> TRANSACTION_ID, string SUB_ACCOUNT_ID, string PI_HUTANG_PIC, System.Nullable<System.DateTime> PI_HUTANG_DATE, System.Nullable<System.DateTime> PI_HUTANG_JATUH_TEMPO, System.Nullable<decimal> PI_HUTANG_JUMLAH, System.Nullable<decimal> PI_HUTANG_DIBAYAR, System.Nullable<decimal> PI_HUTANG_RETUR, System.Nullable<decimal> PI_HUTANG_SISA, System.Nullable<System.DateTime> PI_HUTANG_LUNAS_DATE, System.Nullable<decimal> PI_HUTANG_CREDIT_LONG, string PI_HUTANG_DESC, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((PI_HUTANG_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PI_HUTANG_STATUS));
            }
            if ((TRANSACTION_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((PI_HUTANG_PIC == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PI_HUTANG_PIC));
            }
            if ((PI_HUTANG_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(PI_HUTANG_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_JATUH_TEMPO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(PI_HUTANG_JATUH_TEMPO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_JUMLAH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(PI_HUTANG_JUMLAH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_DIBAYAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(PI_HUTANG_DIBAYAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_RETUR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(PI_HUTANG_RETUR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_SISA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(PI_HUTANG_SISA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_LUNAS_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(PI_HUTANG_LUNAS_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(PI_HUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PI_HUTANG_DESC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PI_HUTANG_STATUS, 
                    System.Nullable<decimal> TRANSACTION_ID, 
                    string SUB_ACCOUNT_ID, 
                    string PI_HUTANG_PIC, 
                    System.Nullable<System.DateTime> PI_HUTANG_DATE, 
                    System.Nullable<System.DateTime> PI_HUTANG_JATUH_TEMPO, 
                    System.Nullable<decimal> PI_HUTANG_JUMLAH, 
                    System.Nullable<decimal> PI_HUTANG_DIBAYAR, 
                    System.Nullable<decimal> PI_HUTANG_RETUR, 
                    System.Nullable<decimal> PI_HUTANG_SISA, 
                    System.Nullable<System.DateTime> PI_HUTANG_LUNAS_DATE, 
                    System.Nullable<decimal> PI_HUTANG_CREDIT_LONG, 
                    string PI_HUTANG_DESC, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_PI_HUTANG_ID, 
                    string Original_PI_HUTANG_STATUS, 
                    System.Nullable<decimal> Original_TRANSACTION_ID, 
                    string Original_SUB_ACCOUNT_ID, 
                    string Original_PI_HUTANG_PIC, 
                    System.Nullable<System.DateTime> Original_PI_HUTANG_DATE, 
                    System.Nullable<System.DateTime> Original_PI_HUTANG_JATUH_TEMPO, 
                    System.Nullable<decimal> Original_PI_HUTANG_JUMLAH, 
                    System.Nullable<decimal> Original_PI_HUTANG_DIBAYAR, 
                    System.Nullable<decimal> Original_PI_HUTANG_RETUR, 
                    System.Nullable<decimal> Original_PI_HUTANG_SISA, 
                    System.Nullable<System.DateTime> Original_PI_HUTANG_LUNAS_DATE, 
                    System.Nullable<decimal> Original_PI_HUTANG_CREDIT_LONG, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal PI_HUTANG_ID) {
            if ((PI_HUTANG_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PI_HUTANG_STATUS));
            }
            if ((TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((PI_HUTANG_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PI_HUTANG_PIC));
            }
            if ((PI_HUTANG_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(PI_HUTANG_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_JATUH_TEMPO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(PI_HUTANG_JATUH_TEMPO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_JUMLAH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(PI_HUTANG_JUMLAH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_DIBAYAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PI_HUTANG_DIBAYAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_RETUR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(PI_HUTANG_RETUR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_SISA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(PI_HUTANG_SISA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_LUNAS_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(PI_HUTANG_LUNAS_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(PI_HUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((PI_HUTANG_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PI_HUTANG_DESC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_PI_HUTANG_ID));
            if ((Original_PI_HUTANG_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_PI_HUTANG_STATUS));
            }
            if ((Original_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_PI_HUTANG_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_PI_HUTANG_PIC));
            }
            if ((Original_PI_HUTANG_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_PI_HUTANG_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_JATUH_TEMPO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_PI_HUTANG_JATUH_TEMPO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_JUMLAH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_PI_HUTANG_JUMLAH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_DIBAYAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_PI_HUTANG_DIBAYAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_RETUR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_PI_HUTANG_RETUR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_SISA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_PI_HUTANG_SISA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_LUNAS_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_PI_HUTANG_LUNAS_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_PI_HUTANG_CREDIT_LONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_PI_HUTANG_CREDIT_LONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(PI_HUTANG_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_REFERENCETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_REFERENCETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_REFERENCE";
            tableMapping.ColumnMappings.Add("REFERENCE_ID", "REFERENCE_ID");
            tableMapping.ColumnMappings.Add("REFERENCE_TYPE", "REFERENCE_TYPE");
            tableMapping.ColumnMappings.Add("NEXT_ID", "NEXT_ID");
            tableMapping.ColumnMappings.Add("REFERENCE_DESC", "REFERENCE_DESC");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_REFERENCE] WHERE (([REFERENCE_ID] = @Original_REFERENCE_ID) AND ((@IsNull_REFERENCE_TYPE = 1 AND [REFERENCE_TYPE] IS NULL) OR ([REFERENCE_TYPE] = @Original_REFERENCE_TYPE)) AND ((@IsNull_NEXT_ID = 1 AND [NEXT_ID] IS NULL) OR ([NEXT_ID] = @Original_NEXT_ID)) AND ((@IsNull_REFERENCE_DESC = 1 AND [REFERENCE_DESC] IS NULL) OR ([REFERENCE_DESC] = @Original_REFERENCE_DESC)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFERENCE_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFERENCE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFERENCE_TYPE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_TYPE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFERENCE_TYPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_TYPE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NEXT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NEXT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NEXT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NEXT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFERENCE_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFERENCE_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_REFERENCE] ([REFERENCE_TYPE], [NEXT_ID], [REFERENCE_DESC]) V" +
                "ALUES (@REFERENCE_TYPE, @NEXT_ID, @REFERENCE_DESC);\r\nSELECT REFERENCE_ID, REFERE" +
                "NCE_TYPE, NEXT_ID, REFERENCE_DESC FROM T_REFERENCE WHERE (REFERENCE_ID = SCOPE_I" +
                "DENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFERENCE_TYPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_TYPE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NEXT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NEXT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFERENCE_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_REFERENCE] SET [REFERENCE_TYPE] = @REFERENCE_TYPE, [NEXT_ID] = @NEXT_ID, [REFERENCE_DESC] = @REFERENCE_DESC WHERE (([REFERENCE_ID] = @Original_REFERENCE_ID) AND ((@IsNull_REFERENCE_TYPE = 1 AND [REFERENCE_TYPE] IS NULL) OR ([REFERENCE_TYPE] = @Original_REFERENCE_TYPE)) AND ((@IsNull_NEXT_ID = 1 AND [NEXT_ID] IS NULL) OR ([NEXT_ID] = @Original_NEXT_ID)) AND ((@IsNull_REFERENCE_DESC = 1 AND [REFERENCE_DESC] IS NULL) OR ([REFERENCE_DESC] = @Original_REFERENCE_DESC)));
SELECT REFERENCE_ID, REFERENCE_TYPE, NEXT_ID, REFERENCE_DESC FROM T_REFERENCE WHERE (REFERENCE_ID = @REFERENCE_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFERENCE_TYPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_TYPE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NEXT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NEXT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFERENCE_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFERENCE_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFERENCE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFERENCE_TYPE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_TYPE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFERENCE_TYPE", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_TYPE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NEXT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NEXT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NEXT_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NEXT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFERENCE_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFERENCE_DESC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REFERENCE_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFERENCE_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "REFERENCE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REFERENCE_ID, REFERENCE_TYPE, NEXT_ID, REFERENCE_DESC FROM dbo.T_REFERENCE" +
                "";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_REFERENCEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_REFERENCEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_REFERENCEDataTable dataTable = new DataSet1.T_REFERENCEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_REFERENCEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_REFERENCE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_REFERENCE_ID, string Original_REFERENCE_TYPE, string Original_NEXT_ID, string Original_REFERENCE_DESC) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_REFERENCE_ID));
            if ((Original_REFERENCE_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_REFERENCE_TYPE));
            }
            if ((Original_NEXT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NEXT_ID));
            }
            if ((Original_REFERENCE_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_REFERENCE_DESC));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string REFERENCE_TYPE, string NEXT_ID, string REFERENCE_DESC) {
            if ((REFERENCE_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(REFERENCE_TYPE));
            }
            if ((NEXT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NEXT_ID));
            }
            if ((REFERENCE_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(REFERENCE_DESC));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string REFERENCE_TYPE, string NEXT_ID, string REFERENCE_DESC, decimal Original_REFERENCE_ID, string Original_REFERENCE_TYPE, string Original_NEXT_ID, string Original_REFERENCE_DESC, decimal REFERENCE_ID) {
            if ((REFERENCE_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(REFERENCE_TYPE));
            }
            if ((NEXT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NEXT_ID));
            }
            if ((REFERENCE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(REFERENCE_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_REFERENCE_ID));
            if ((Original_REFERENCE_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_REFERENCE_TYPE));
            }
            if ((Original_NEXT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_NEXT_ID));
            }
            if ((Original_REFERENCE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_REFERENCE_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(REFERENCE_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_REKAP_COMMISSIONTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_REKAP_COMMISSIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_REKAP_COMMISSION";
            tableMapping.ColumnMappings.Add("REKAP_DATE_FROM", "REKAP_DATE_FROM");
            tableMapping.ColumnMappings.Add("REKAP_DATE_TO", "REKAP_DATE_TO");
            tableMapping.ColumnMappings.Add("EMPLOYEE_ID", "EMPLOYEE_ID");
            tableMapping.ColumnMappings.Add("REKAP_TOTAL_DURATION", "REKAP_TOTAL_DURATION");
            tableMapping.ColumnMappings.Add("REFEREE_PRICE", "REFEREE_PRICE");
            tableMapping.ColumnMappings.Add("REFEREE_PRICE_VIP", "REFEREE_PRICE_VIP");
            tableMapping.ColumnMappings.Add("REKAP_BONUS", "REKAP_BONUS");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_REKAP_COMMISSION] WHERE (([REKAP_DATE_FROM] = @Original_REKAP_DATE_FROM) AND ((@IsNull_REKAP_DATE_TO = 1 AND [REKAP_DATE_TO] IS NULL) OR ([REKAP_DATE_TO] = @Original_REKAP_DATE_TO)) AND ([EMPLOYEE_ID] = @Original_EMPLOYEE_ID) AND ((@IsNull_REKAP_TOTAL_DURATION = 1 AND [REKAP_TOTAL_DURATION] IS NULL) OR ([REKAP_TOTAL_DURATION] = @Original_REKAP_TOTAL_DURATION)) AND ((@IsNull_REFEREE_PRICE = 1 AND [REFEREE_PRICE] IS NULL) OR ([REFEREE_PRICE] = @Original_REFEREE_PRICE)) AND ((@IsNull_REFEREE_PRICE_VIP = 1 AND [REFEREE_PRICE_VIP] IS NULL) OR ([REFEREE_PRICE_VIP] = @Original_REFEREE_PRICE_VIP)) AND ((@IsNull_REKAP_BONUS = 1 AND [REKAP_BONUS] IS NULL) OR ([REKAP_BONUS] = @Original_REKAP_BONUS)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_DATE_FROM", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_DATE_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_DATE_TO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_TOTAL_DURATION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_TOTAL_DURATION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_TOTAL_DURATION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "REKAP_TOTAL_DURATION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFEREE_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFEREE_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFEREE_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFEREE_PRICE_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFEREE_PRICE_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFEREE_PRICE_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_PRICE_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_BONUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_BONUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_BONUS", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REKAP_BONUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_REKAP_COMMISSION] ([REKAP_DATE_FROM], [REKAP_DATE_TO], [EMPLOYEE_ID], [REKAP_TOTAL_DURATION], [REFEREE_PRICE], [REFEREE_PRICE_VIP], [REKAP_BONUS], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@REKAP_DATE_FROM, @REKAP_DATE_TO, @EMPLOYEE_ID, @REKAP_TOTAL_DURATION, @REFEREE_PRICE, @REFEREE_PRICE_VIP, @REKAP_BONUS, @MODIFIED_BY, @MODIFIED_DATE);
SELECT REKAP_DATE_FROM, REKAP_DATE_TO, EMPLOYEE_ID, REKAP_TOTAL_DURATION, REFEREE_PRICE, REFEREE_PRICE_VIP, REKAP_BONUS, MODIFIED_BY, MODIFIED_DATE FROM T_REKAP_COMMISSION WHERE (EMPLOYEE_ID = @EMPLOYEE_ID) AND (REKAP_DATE_FROM = @REKAP_DATE_FROM)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_DATE_FROM", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_DATE_TO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_TOTAL_DURATION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "REKAP_TOTAL_DURATION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFEREE_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFEREE_PRICE_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_PRICE_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_BONUS", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REKAP_BONUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_REKAP_COMMISSION] SET [REKAP_DATE_FROM] = @REKAP_DATE_FROM, [REKAP_DATE_TO] = @REKAP_DATE_TO, [EMPLOYEE_ID] = @EMPLOYEE_ID, [REKAP_TOTAL_DURATION] = @REKAP_TOTAL_DURATION, [REFEREE_PRICE] = @REFEREE_PRICE, [REFEREE_PRICE_VIP] = @REFEREE_PRICE_VIP, [REKAP_BONUS] = @REKAP_BONUS, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([REKAP_DATE_FROM] = @Original_REKAP_DATE_FROM) AND ((@IsNull_REKAP_DATE_TO = 1 AND [REKAP_DATE_TO] IS NULL) OR ([REKAP_DATE_TO] = @Original_REKAP_DATE_TO)) AND ([EMPLOYEE_ID] = @Original_EMPLOYEE_ID) AND ((@IsNull_REKAP_TOTAL_DURATION = 1 AND [REKAP_TOTAL_DURATION] IS NULL) OR ([REKAP_TOTAL_DURATION] = @Original_REKAP_TOTAL_DURATION)) AND ((@IsNull_REFEREE_PRICE = 1 AND [REFEREE_PRICE] IS NULL) OR ([REFEREE_PRICE] = @Original_REFEREE_PRICE)) AND ((@IsNull_REFEREE_PRICE_VIP = 1 AND [REFEREE_PRICE_VIP] IS NULL) OR ([REFEREE_PRICE_VIP] = @Original_REFEREE_PRICE_VIP)) AND ((@IsNull_REKAP_BONUS = 1 AND [REKAP_BONUS] IS NULL) OR ([REKAP_BONUS] = @Original_REKAP_BONUS)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT REKAP_DATE_FROM, REKAP_DATE_TO, EMPLOYEE_ID, REKAP_TOTAL_DURATION, REFEREE_PRICE, REFEREE_PRICE_VIP, REKAP_BONUS, MODIFIED_BY, MODIFIED_DATE FROM T_REKAP_COMMISSION WHERE (EMPLOYEE_ID = @EMPLOYEE_ID) AND (REKAP_DATE_FROM = @REKAP_DATE_FROM)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_DATE_FROM", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_DATE_TO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_TOTAL_DURATION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "REKAP_TOTAL_DURATION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFEREE_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REFEREE_PRICE_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_PRICE_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_BONUS", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REKAP_BONUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_DATE_FROM", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_DATE_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_DATE_TO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_TOTAL_DURATION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_TOTAL_DURATION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_TOTAL_DURATION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "REKAP_TOTAL_DURATION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFEREE_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFEREE_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFEREE_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REFEREE_PRICE_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REFEREE_PRICE_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REFEREE_PRICE_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REFEREE_PRICE_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_BONUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_BONUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_BONUS", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REKAP_BONUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REKAP_DATE_FROM, REKAP_DATE_TO, EMPLOYEE_ID, REKAP_TOTAL_DURATION, REFEREE" +
                "_PRICE, REFEREE_PRICE_VIP, REKAP_BONUS, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_RE" +
                "KAP_COMMISSION";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_REKAP_COMMISSIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_REKAP_COMMISSIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_REKAP_COMMISSIONDataTable dataTable = new DataSet1.T_REKAP_COMMISSIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_REKAP_COMMISSIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_REKAP_COMMISSION");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_REKAP_DATE_FROM, System.Nullable<System.DateTime> Original_REKAP_DATE_TO, string Original_EMPLOYEE_ID, System.Nullable<decimal> Original_REKAP_TOTAL_DURATION, System.Nullable<decimal> Original_REFEREE_PRICE, System.Nullable<decimal> Original_REFEREE_PRICE_VIP, System.Nullable<decimal> Original_REKAP_BONUS, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_REKAP_DATE_FROM));
            if ((Original_REKAP_DATE_TO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_REKAP_DATE_TO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_ID == null)) {
                throw new System.ArgumentNullException("Original_EMPLOYEE_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_EMPLOYEE_ID));
            }
            if ((Original_REKAP_TOTAL_DURATION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_REKAP_TOTAL_DURATION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_REFEREE_PRICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_REFEREE_PRICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_REFEREE_PRICE_VIP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_REFEREE_PRICE_VIP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_REKAP_BONUS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_REKAP_BONUS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime REKAP_DATE_FROM, System.Nullable<System.DateTime> REKAP_DATE_TO, string EMPLOYEE_ID, System.Nullable<decimal> REKAP_TOTAL_DURATION, System.Nullable<decimal> REFEREE_PRICE, System.Nullable<decimal> REFEREE_PRICE_VIP, System.Nullable<decimal> REKAP_BONUS, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(REKAP_DATE_FROM));
            if ((REKAP_DATE_TO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(REKAP_DATE_TO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((EMPLOYEE_ID == null)) {
                throw new System.ArgumentNullException("EMPLOYEE_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EMPLOYEE_ID));
            }
            if ((REKAP_TOTAL_DURATION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(REKAP_TOTAL_DURATION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((REFEREE_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(REFEREE_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((REFEREE_PRICE_VIP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(REFEREE_PRICE_VIP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((REKAP_BONUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(REKAP_BONUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime REKAP_DATE_FROM, 
                    System.Nullable<System.DateTime> REKAP_DATE_TO, 
                    string EMPLOYEE_ID, 
                    System.Nullable<decimal> REKAP_TOTAL_DURATION, 
                    System.Nullable<decimal> REFEREE_PRICE, 
                    System.Nullable<decimal> REFEREE_PRICE_VIP, 
                    System.Nullable<decimal> REKAP_BONUS, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    System.DateTime Original_REKAP_DATE_FROM, 
                    System.Nullable<System.DateTime> Original_REKAP_DATE_TO, 
                    string Original_EMPLOYEE_ID, 
                    System.Nullable<decimal> Original_REKAP_TOTAL_DURATION, 
                    System.Nullable<decimal> Original_REFEREE_PRICE, 
                    System.Nullable<decimal> Original_REFEREE_PRICE_VIP, 
                    System.Nullable<decimal> Original_REKAP_BONUS, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(REKAP_DATE_FROM));
            if ((REKAP_DATE_TO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(REKAP_DATE_TO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((EMPLOYEE_ID == null)) {
                throw new System.ArgumentNullException("EMPLOYEE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(EMPLOYEE_ID));
            }
            if ((REKAP_TOTAL_DURATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(REKAP_TOTAL_DURATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((REFEREE_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(REFEREE_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((REFEREE_PRICE_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(REFEREE_PRICE_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((REKAP_BONUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(REKAP_BONUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_REKAP_DATE_FROM));
            if ((Original_REKAP_DATE_TO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_REKAP_DATE_TO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_EMPLOYEE_ID == null)) {
                throw new System.ArgumentNullException("Original_EMPLOYEE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_EMPLOYEE_ID));
            }
            if ((Original_REKAP_TOTAL_DURATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_REKAP_TOTAL_DURATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_REFEREE_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_REFEREE_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_REFEREE_PRICE_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_REFEREE_PRICE_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_REKAP_BONUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_REKAP_BONUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_REKAP_SUB_ACCOUNTTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_REKAP_SUB_ACCOUNTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_REKAP_SUB_ACCOUNT";
            tableMapping.ColumnMappings.Add("REKAP_SUB_ACCOUNT_ID", "REKAP_SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("REKAP_SUB_ACCOUNT_PERIODE", "REKAP_SUB_ACCOUNT_PERIODE");
            tableMapping.ColumnMappings.Add("ACCOUNT_ID", "ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("SUB_ACCOUNT_ID", "SUB_ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("REKAP_SUBACCOUNT_SALDO", "REKAP_SUBACCOUNT_SALDO");
            tableMapping.ColumnMappings.Add("REKAP_SUBACCOUNT_DESC", "REKAP_SUBACCOUNT_DESC");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_REKAP_SUB_ACCOUNT] WHERE (([REKAP_SUB_ACCOUNT_ID] = @Original_REKAP_SUB_ACCOUNT_ID) AND ((@IsNull_REKAP_SUB_ACCOUNT_PERIODE = 1 AND [REKAP_SUB_ACCOUNT_PERIODE] IS NULL) OR ([REKAP_SUB_ACCOUNT_PERIODE] = @Original_REKAP_SUB_ACCOUNT_PERIODE)) AND ((@IsNull_ACCOUNT_ID = 1 AND [ACCOUNT_ID] IS NULL) OR ([ACCOUNT_ID] = @Original_ACCOUNT_ID)) AND ((@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACCOUNT_ID] = @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_REKAP_SUBACCOUNT_SALDO = 1 AND [REKAP_SUBACCOUNT_SALDO] IS NULL) OR ([REKAP_SUBACCOUNT_SALDO] = @Original_REKAP_SUBACCOUNT_SALDO)) AND ((@IsNull_REKAP_SUBACCOUNT_DESC = 1 AND [REKAP_SUBACCOUNT_DESC] IS NULL) OR ([REKAP_SUBACCOUNT_DESC] = @Original_REKAP_SUBACCOUNT_DESC)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_SUB_ACCOUNT_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REKAP_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_SUB_ACCOUNT_PERIODE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUB_ACCOUNT_PERIODE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_SUB_ACCOUNT_PERIODE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUB_ACCOUNT_PERIODE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_SUBACCOUNT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUBACCOUNT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_SUBACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "REKAP_SUBACCOUNT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_SUBACCOUNT_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUBACCOUNT_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_SUBACCOUNT_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUBACCOUNT_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_REKAP_SUB_ACCOUNT] ([REKAP_SUB_ACCOUNT_PERIODE], [ACCOUNT_ID], [SUB_ACCOUNT_ID], [REKAP_SUBACCOUNT_SALDO], [REKAP_SUBACCOUNT_DESC], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@REKAP_SUB_ACCOUNT_PERIODE, @ACCOUNT_ID, @SUB_ACCOUNT_ID, @REKAP_SUBACCOUNT_SALDO, @REKAP_SUBACCOUNT_DESC, @MODIFIED_BY, @MODIFIED_DATE);
SELECT REKAP_SUB_ACCOUNT_ID, REKAP_SUB_ACCOUNT_PERIODE, ACCOUNT_ID, SUB_ACCOUNT_ID, REKAP_SUBACCOUNT_SALDO, REKAP_SUBACCOUNT_DESC, MODIFIED_BY, MODIFIED_DATE FROM T_REKAP_SUB_ACCOUNT WHERE (REKAP_SUB_ACCOUNT_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_SUB_ACCOUNT_PERIODE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUB_ACCOUNT_PERIODE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_SUBACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "REKAP_SUBACCOUNT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_SUBACCOUNT_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUBACCOUNT_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T_REKAP_SUB_ACCOUNT] SET [REKAP_SUB_ACCOUNT_PERIODE] = @REKAP_SUB_ACCOUNT_PERIODE, [ACCOUNT_ID] = @ACCOUNT_ID, [SUB_ACCOUNT_ID] = @SUB_ACCOUNT_ID, [REKAP_SUBACCOUNT_SALDO] = @REKAP_SUBACCOUNT_SALDO, [REKAP_SUBACCOUNT_DESC] = @REKAP_SUBACCOUNT_DESC, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([REKAP_SUB_ACCOUNT_ID] = @Original_REKAP_SUB_ACCOUNT_ID) AND ((@IsNull_REKAP_SUB_ACCOUNT_PERIODE = 1 AND [REKAP_SUB_ACCOUNT_PERIODE] IS NULL) OR ([REKAP_SUB_ACCOUNT_PERIODE] = @Original_REKAP_SUB_ACCOUNT_PERIODE)) AND ((@IsNull_ACCOUNT_ID = 1 AND [ACCOUNT_ID] IS NULL) OR ([ACCOUNT_ID] = @Original_ACCOUNT_ID)) AND ((@IsNull_SUB_ACCOUNT_ID = 1 AND [SUB_ACCOUNT_ID] IS NULL) OR ([SUB_ACCOUNT_ID] = @Original_SUB_ACCOUNT_ID)) AND ((@IsNull_REKAP_SUBACCOUNT_SALDO = 1 AND [REKAP_SUBACCOUNT_SALDO] IS NULL) OR ([REKAP_SUBACCOUNT_SALDO] = @Original_REKAP_SUBACCOUNT_SALDO)) AND ((@IsNull_REKAP_SUBACCOUNT_DESC = 1 AND [REKAP_SUBACCOUNT_DESC] IS NULL) OR ([REKAP_SUBACCOUNT_DESC] = @Original_REKAP_SUBACCOUNT_DESC)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));
SELECT REKAP_SUB_ACCOUNT_ID, REKAP_SUB_ACCOUNT_PERIODE, ACCOUNT_ID, SUB_ACCOUNT_ID, REKAP_SUBACCOUNT_SALDO, REKAP_SUBACCOUNT_DESC, MODIFIED_BY, MODIFIED_DATE FROM T_REKAP_SUB_ACCOUNT WHERE (REKAP_SUB_ACCOUNT_ID = @REKAP_SUB_ACCOUNT_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_SUB_ACCOUNT_PERIODE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUB_ACCOUNT_PERIODE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SUB_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_SUBACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "REKAP_SUBACCOUNT_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_SUBACCOUNT_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUBACCOUNT_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_SUB_ACCOUNT_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "REKAP_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_SUB_ACCOUNT_PERIODE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUB_ACCOUNT_PERIODE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_SUB_ACCOUNT_PERIODE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUB_ACCOUNT_PERIODE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SUB_ACCOUNT_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SUB_ACCOUNT_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SUB_ACCOUNT_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_SUBACCOUNT_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUBACCOUNT_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_SUBACCOUNT_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "REKAP_SUBACCOUNT_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_SUBACCOUNT_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUBACCOUNT_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_SUBACCOUNT_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_SUBACCOUNT_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_SUB_ACCOUNT_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "REKAP_SUB_ACCOUNT_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REKAP_SUB_ACCOUNT_ID, REKAP_SUB_ACCOUNT_PERIODE, ACCOUNT_ID, SUB_ACCOUNT_I" +
                "D, REKAP_SUBACCOUNT_SALDO, REKAP_SUBACCOUNT_DESC, MODIFIED_BY, MODIFIED_DATE FRO" +
                "M dbo.T_REKAP_SUB_ACCOUNT";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_REKAP_SUB_ACCOUNTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_REKAP_SUB_ACCOUNTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_REKAP_SUB_ACCOUNTDataTable dataTable = new DataSet1.T_REKAP_SUB_ACCOUNTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_REKAP_SUB_ACCOUNTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_REKAP_SUB_ACCOUNT");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_REKAP_SUB_ACCOUNT_ID, string Original_REKAP_SUB_ACCOUNT_PERIODE, string Original_ACCOUNT_ID, string Original_SUB_ACCOUNT_ID, System.Nullable<decimal> Original_REKAP_SUBACCOUNT_SALDO, string Original_REKAP_SUBACCOUNT_DESC, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_REKAP_SUB_ACCOUNT_ID));
            if ((Original_REKAP_SUB_ACCOUNT_PERIODE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_REKAP_SUB_ACCOUNT_PERIODE));
            }
            if ((Original_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ACCOUNT_ID));
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_REKAP_SUBACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_REKAP_SUBACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_REKAP_SUBACCOUNT_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_REKAP_SUBACCOUNT_DESC));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string REKAP_SUB_ACCOUNT_PERIODE, string ACCOUNT_ID, string SUB_ACCOUNT_ID, System.Nullable<decimal> REKAP_SUBACCOUNT_SALDO, string REKAP_SUBACCOUNT_DESC, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((REKAP_SUB_ACCOUNT_PERIODE == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(REKAP_SUB_ACCOUNT_PERIODE));
            }
            if ((ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ACCOUNT_ID));
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((REKAP_SUBACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(REKAP_SUBACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((REKAP_SUBACCOUNT_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(REKAP_SUBACCOUNT_DESC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string REKAP_SUB_ACCOUNT_PERIODE, 
                    string ACCOUNT_ID, 
                    string SUB_ACCOUNT_ID, 
                    System.Nullable<decimal> REKAP_SUBACCOUNT_SALDO, 
                    string REKAP_SUBACCOUNT_DESC, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_REKAP_SUB_ACCOUNT_ID, 
                    string Original_REKAP_SUB_ACCOUNT_PERIODE, 
                    string Original_ACCOUNT_ID, 
                    string Original_SUB_ACCOUNT_ID, 
                    System.Nullable<decimal> Original_REKAP_SUBACCOUNT_SALDO, 
                    string Original_REKAP_SUBACCOUNT_DESC, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal REKAP_SUB_ACCOUNT_ID) {
            if ((REKAP_SUB_ACCOUNT_PERIODE == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(REKAP_SUB_ACCOUNT_PERIODE));
            }
            if ((ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ACCOUNT_ID));
            }
            if ((SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SUB_ACCOUNT_ID));
            }
            if ((REKAP_SUBACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(REKAP_SUBACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((REKAP_SUBACCOUNT_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(REKAP_SUBACCOUNT_DESC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_REKAP_SUB_ACCOUNT_ID));
            if ((Original_REKAP_SUB_ACCOUNT_PERIODE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_REKAP_SUB_ACCOUNT_PERIODE));
            }
            if ((Original_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ACCOUNT_ID));
            }
            if ((Original_SUB_ACCOUNT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_SUB_ACCOUNT_ID));
            }
            if ((Original_REKAP_SUBACCOUNT_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_REKAP_SUBACCOUNT_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_REKAP_SUBACCOUNT_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_REKAP_SUBACCOUNT_DESC));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(REKAP_SUB_ACCOUNT_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_REKAP_TRANSACTIONTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_REKAP_TRANSACTIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_REKAP_TRANSACTION";
            tableMapping.ColumnMappings.Add("REKAP_DATE_FROM", "REKAP_DATE_FROM");
            tableMapping.ColumnMappings.Add("REKAP_DATE_TO", "REKAP_DATE_TO");
            tableMapping.ColumnMappings.Add("DESK_ID", "DESK_ID");
            tableMapping.ColumnMappings.Add("TOTAL_SALES", "TOTAL_SALES");
            tableMapping.ColumnMappings.Add("TOTAL_SALES_VIP", "TOTAL_SALES_VIP");
            tableMapping.ColumnMappings.Add("TOTAL_PURCHASE", "TOTAL_PURCHASE");
            tableMapping.ColumnMappings.Add("TOTAL_RETUR_SALES", "TOTAL_RETUR_SALES");
            tableMapping.ColumnMappings.Add("TOTAL_RETUR_SALES_VIP", "TOTAL_RETUR_SALES_VIP");
            tableMapping.ColumnMappings.Add("TOTAL_RETUR_PURCHASE", "TOTAL_RETUR_PURCHASE");
            tableMapping.ColumnMappings.Add("TOTAL_CORRECTION", "TOTAL_CORRECTION");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_REKAP_TRANSACTION] WHERE (([REKAP_DATE_FROM] = @Original_REKAP_DATE_FROM) AND ((@IsNull_REKAP_DATE_TO = 1 AND [REKAP_DATE_TO] IS NULL) OR ([REKAP_DATE_TO] = @Original_REKAP_DATE_TO)) AND ((@IsNull_DESK_ID = 1 AND [DESK_ID] IS NULL) OR ([DESK_ID] = @Original_DESK_ID)) AND ((@IsNull_TOTAL_SALES = 1 AND [TOTAL_SALES] IS NULL) OR ([TOTAL_SALES] = @Original_TOTAL_SALES)) AND ((@IsNull_TOTAL_SALES_VIP = 1 AND [TOTAL_SALES_VIP] IS NULL) OR ([TOTAL_SALES_VIP] = @Original_TOTAL_SALES_VIP)) AND ((@IsNull_TOTAL_PURCHASE = 1 AND [TOTAL_PURCHASE] IS NULL) OR ([TOTAL_PURCHASE] = @Original_TOTAL_PURCHASE)) AND ((@IsNull_TOTAL_RETUR_SALES = 1 AND [TOTAL_RETUR_SALES] IS NULL) OR ([TOTAL_RETUR_SALES] = @Original_TOTAL_RETUR_SALES)) AND ((@IsNull_TOTAL_RETUR_SALES_VIP = 1 AND [TOTAL_RETUR_SALES_VIP] IS NULL) OR ([TOTAL_RETUR_SALES_VIP] = @Original_TOTAL_RETUR_SALES_VIP)) AND ((@IsNull_TOTAL_RETUR_PURCHASE = 1 AND [TOTAL_RETUR_PURCHASE] IS NULL) OR ([TOTAL_RETUR_PURCHASE] = @Original_TOTAL_RETUR_PURCHASE)) AND ((@IsNull_TOTAL_CORRECTION = 1 AND [TOTAL_CORRECTION] IS NULL) OR ([TOTAL_CORRECTION] = @Original_TOTAL_CORRECTION)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_DATE_FROM", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_DATE_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_DATE_TO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_SALES", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_SALES", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_SALES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_SALES", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_SALES_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_SALES_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_SALES_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_SALES_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_PURCHASE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_PURCHASE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_PURCHASE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_RETUR_SALES", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RETUR_SALES", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_RETUR_SALES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_SALES", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_RETUR_SALES_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RETUR_SALES_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_RETUR_SALES_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_SALES_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_RETUR_PURCHASE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RETUR_PURCHASE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_RETUR_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_PURCHASE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_CORRECTION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_CORRECTION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_CORRECTION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_CORRECTION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_REKAP_TRANSACTION] ([REKAP_DATE_FROM], [REKAP_DATE_TO], [DESK_ID], [TOTAL_SALES], [TOTAL_SALES_VIP], [TOTAL_PURCHASE], [TOTAL_RETUR_SALES], [TOTAL_RETUR_SALES_VIP], [TOTAL_RETUR_PURCHASE], [TOTAL_CORRECTION], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@REKAP_DATE_FROM, @REKAP_DATE_TO, @DESK_ID, @TOTAL_SALES, @TOTAL_SALES_VIP, @TOTAL_PURCHASE, @TOTAL_RETUR_SALES, @TOTAL_RETUR_SALES_VIP, @TOTAL_RETUR_PURCHASE, @TOTAL_CORRECTION, @MODIFIED_BY, @MODIFIED_DATE);
SELECT REKAP_DATE_FROM, REKAP_DATE_TO, DESK_ID, TOTAL_SALES, TOTAL_SALES_VIP, TOTAL_PURCHASE, TOTAL_RETUR_SALES, TOTAL_RETUR_SALES_VIP, TOTAL_RETUR_PURCHASE, TOTAL_CORRECTION, MODIFIED_BY, MODIFIED_DATE FROM T_REKAP_TRANSACTION WHERE (REKAP_DATE_FROM = @REKAP_DATE_FROM)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_DATE_FROM", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_DATE_TO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_SALES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_SALES", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_SALES_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_SALES_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_PURCHASE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_RETUR_SALES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_SALES", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_RETUR_SALES_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_SALES_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_RETUR_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_PURCHASE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_CORRECTION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_CORRECTION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_REKAP_TRANSACTION] SET [REKAP_DATE_FROM] = @REKAP_DATE_FROM, [REK" +
                "AP_DATE_TO] = @REKAP_DATE_TO, [DESK_ID] = @DESK_ID, [TOTAL_SALES] = @TOTAL_SALES" +
                ", [TOTAL_SALES_VIP] = @TOTAL_SALES_VIP, [TOTAL_PURCHASE] = @TOTAL_PURCHASE, [TOT" +
                "AL_RETUR_SALES] = @TOTAL_RETUR_SALES, [TOTAL_RETUR_SALES_VIP] = @TOTAL_RETUR_SAL" +
                "ES_VIP, [TOTAL_RETUR_PURCHASE] = @TOTAL_RETUR_PURCHASE, [TOTAL_CORRECTION] = @TO" +
                "TAL_CORRECTION, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE W" +
                "HERE (([REKAP_DATE_FROM] = @Original_REKAP_DATE_FROM) AND ((@IsNull_REKAP_DATE_T" +
                "O = 1 AND [REKAP_DATE_TO] IS NULL) OR ([REKAP_DATE_TO] = @Original_REKAP_DATE_TO" +
                ")) AND ((@IsNull_DESK_ID = 1 AND [DESK_ID] IS NULL) OR ([DESK_ID] = @Original_DE" +
                "SK_ID)) AND ((@IsNull_TOTAL_SALES = 1 AND [TOTAL_SALES] IS NULL) OR ([TOTAL_SALE" +
                "S] = @Original_TOTAL_SALES)) AND ((@IsNull_TOTAL_SALES_VIP = 1 AND [TOTAL_SALES_" +
                "VIP] IS NULL) OR ([TOTAL_SALES_VIP] = @Original_TOTAL_SALES_VIP)) AND ((@IsNull_" +
                "TOTAL_PURCHASE = 1 AND [TOTAL_PURCHASE] IS NULL) OR ([TOTAL_PURCHASE] = @Origina" +
                "l_TOTAL_PURCHASE)) AND ((@IsNull_TOTAL_RETUR_SALES = 1 AND [TOTAL_RETUR_SALES] I" +
                "S NULL) OR ([TOTAL_RETUR_SALES] = @Original_TOTAL_RETUR_SALES)) AND ((@IsNull_TO" +
                "TAL_RETUR_SALES_VIP = 1 AND [TOTAL_RETUR_SALES_VIP] IS NULL) OR ([TOTAL_RETUR_SA" +
                "LES_VIP] = @Original_TOTAL_RETUR_SALES_VIP)) AND ((@IsNull_TOTAL_RETUR_PURCHASE " +
                "= 1 AND [TOTAL_RETUR_PURCHASE] IS NULL) OR ([TOTAL_RETUR_PURCHASE] = @Original_T" +
                "OTAL_RETUR_PURCHASE)) AND ((@IsNull_TOTAL_CORRECTION = 1 AND [TOTAL_CORRECTION] " +
                "IS NULL) OR ([TOTAL_CORRECTION] = @Original_TOTAL_CORRECTION)) AND ((@IsNull_MOD" +
                "IFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_B" +
                "Y)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_D" +
                "ATE] = @Original_MODIFIED_DATE)));\r\nSELECT REKAP_DATE_FROM, REKAP_DATE_TO, DESK_" +
                "ID, TOTAL_SALES, TOTAL_SALES_VIP, TOTAL_PURCHASE, TOTAL_RETUR_SALES, TOTAL_RETUR" +
                "_SALES_VIP, TOTAL_RETUR_PURCHASE, TOTAL_CORRECTION, MODIFIED_BY, MODIFIED_DATE F" +
                "ROM T_REKAP_TRANSACTION WHERE (REKAP_DATE_FROM = @REKAP_DATE_FROM)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_DATE_FROM", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_FROM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@REKAP_DATE_TO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_SALES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_SALES", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_SALES_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_SALES_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_PURCHASE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_RETUR_SALES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_SALES", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_RETUR_SALES_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_SALES_VIP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_RETUR_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_PURCHASE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL_CORRECTION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_CORRECTION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_DATE_FROM", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_FROM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_REKAP_DATE_TO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_REKAP_DATE_TO", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "REKAP_DATE_TO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESK_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESK_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESK_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_SALES", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_SALES", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_SALES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_SALES", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_SALES_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_SALES_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_SALES_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_SALES_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_PURCHASE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_PURCHASE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_PURCHASE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_RETUR_SALES", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RETUR_SALES", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_RETUR_SALES", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_SALES", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_RETUR_SALES_VIP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RETUR_SALES_VIP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_RETUR_SALES_VIP", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_SALES_VIP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_RETUR_PURCHASE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_RETUR_PURCHASE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_RETUR_PURCHASE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_RETUR_PURCHASE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL_CORRECTION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL_CORRECTION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL_CORRECTION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TOTAL_CORRECTION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REKAP_DATE_FROM, REKAP_DATE_TO, DESK_ID, TOTAL_SALES, TOTAL_SALES_VIP, TOT" +
                "AL_PURCHASE, TOTAL_RETUR_SALES, TOTAL_RETUR_SALES_VIP, TOTAL_RETUR_PURCHASE, TOT" +
                "AL_CORRECTION, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_REKAP_TRANSACTION";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_REKAP_TRANSACTIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_REKAP_TRANSACTIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_REKAP_TRANSACTIONDataTable dataTable = new DataSet1.T_REKAP_TRANSACTIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_REKAP_TRANSACTIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_REKAP_TRANSACTION");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_REKAP_DATE_FROM, System.Nullable<System.DateTime> Original_REKAP_DATE_TO, string Original_DESK_ID, System.Nullable<decimal> Original_TOTAL_SALES, System.Nullable<decimal> Original_TOTAL_SALES_VIP, System.Nullable<decimal> Original_TOTAL_PURCHASE, System.Nullable<decimal> Original_TOTAL_RETUR_SALES, System.Nullable<decimal> Original_TOTAL_RETUR_SALES_VIP, System.Nullable<decimal> Original_TOTAL_RETUR_PURCHASE, System.Nullable<decimal> Original_TOTAL_CORRECTION, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_REKAP_DATE_FROM));
            if ((Original_REKAP_DATE_TO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_REKAP_DATE_TO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_DESK_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DESK_ID));
            }
            if ((Original_TOTAL_SALES.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_TOTAL_SALES.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_SALES_VIP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_TOTAL_SALES_VIP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_PURCHASE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_TOTAL_PURCHASE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_RETUR_SALES.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_TOTAL_RETUR_SALES.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_RETUR_SALES_VIP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_TOTAL_RETUR_SALES_VIP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_RETUR_PURCHASE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_TOTAL_RETUR_PURCHASE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_CORRECTION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_TOTAL_CORRECTION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime REKAP_DATE_FROM, System.Nullable<System.DateTime> REKAP_DATE_TO, string DESK_ID, System.Nullable<decimal> TOTAL_SALES, System.Nullable<decimal> TOTAL_SALES_VIP, System.Nullable<decimal> TOTAL_PURCHASE, System.Nullable<decimal> TOTAL_RETUR_SALES, System.Nullable<decimal> TOTAL_RETUR_SALES_VIP, System.Nullable<decimal> TOTAL_RETUR_PURCHASE, System.Nullable<decimal> TOTAL_CORRECTION, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(REKAP_DATE_FROM));
            if ((REKAP_DATE_TO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(REKAP_DATE_TO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DESK_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DESK_ID));
            }
            if ((TOTAL_SALES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TOTAL_SALES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TOTAL_SALES_VIP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(TOTAL_SALES_VIP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((TOTAL_PURCHASE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(TOTAL_PURCHASE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((TOTAL_RETUR_SALES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(TOTAL_RETUR_SALES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((TOTAL_RETUR_SALES_VIP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(TOTAL_RETUR_SALES_VIP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((TOTAL_RETUR_PURCHASE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(TOTAL_RETUR_PURCHASE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((TOTAL_CORRECTION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(TOTAL_CORRECTION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime REKAP_DATE_FROM, 
                    System.Nullable<System.DateTime> REKAP_DATE_TO, 
                    string DESK_ID, 
                    System.Nullable<decimal> TOTAL_SALES, 
                    System.Nullable<decimal> TOTAL_SALES_VIP, 
                    System.Nullable<decimal> TOTAL_PURCHASE, 
                    System.Nullable<decimal> TOTAL_RETUR_SALES, 
                    System.Nullable<decimal> TOTAL_RETUR_SALES_VIP, 
                    System.Nullable<decimal> TOTAL_RETUR_PURCHASE, 
                    System.Nullable<decimal> TOTAL_CORRECTION, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    System.DateTime Original_REKAP_DATE_FROM, 
                    System.Nullable<System.DateTime> Original_REKAP_DATE_TO, 
                    string Original_DESK_ID, 
                    System.Nullable<decimal> Original_TOTAL_SALES, 
                    System.Nullable<decimal> Original_TOTAL_SALES_VIP, 
                    System.Nullable<decimal> Original_TOTAL_PURCHASE, 
                    System.Nullable<decimal> Original_TOTAL_RETUR_SALES, 
                    System.Nullable<decimal> Original_TOTAL_RETUR_SALES_VIP, 
                    System.Nullable<decimal> Original_TOTAL_RETUR_PURCHASE, 
                    System.Nullable<decimal> Original_TOTAL_CORRECTION, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(REKAP_DATE_FROM));
            if ((REKAP_DATE_TO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(REKAP_DATE_TO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DESK_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DESK_ID));
            }
            if ((TOTAL_SALES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TOTAL_SALES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TOTAL_SALES_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(TOTAL_SALES_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((TOTAL_PURCHASE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(TOTAL_PURCHASE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((TOTAL_RETUR_SALES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(TOTAL_RETUR_SALES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((TOTAL_RETUR_SALES_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TOTAL_RETUR_SALES_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((TOTAL_RETUR_PURCHASE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(TOTAL_RETUR_PURCHASE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((TOTAL_CORRECTION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(TOTAL_CORRECTION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_REKAP_DATE_FROM));
            if ((Original_REKAP_DATE_TO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_REKAP_DATE_TO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_DESK_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_DESK_ID));
            }
            if ((Original_TOTAL_SALES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_TOTAL_SALES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_SALES_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_TOTAL_SALES_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_PURCHASE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_TOTAL_PURCHASE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_RETUR_SALES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_TOTAL_RETUR_SALES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_RETUR_SALES_VIP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_TOTAL_RETUR_SALES_VIP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_RETUR_PURCHASE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_TOTAL_RETUR_PURCHASE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL_CORRECTION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_TOTAL_CORRECTION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_STOK_CARDTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_STOK_CARDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_STOK_CARD";
            tableMapping.ColumnMappings.Add("STOK_CARD_ID", "STOK_CARD_ID");
            tableMapping.ColumnMappings.Add("ITEM_ID", "ITEM_ID");
            tableMapping.ColumnMappings.Add("GUDANG_ID", "GUDANG_ID");
            tableMapping.ColumnMappings.Add("STOK_CARD_DATE", "STOK_CARD_DATE");
            tableMapping.ColumnMappings.Add("TRANSACTION_ID", "TRANSACTION_ID");
            tableMapping.ColumnMappings.Add("STOK_CARD_STATUS", "STOK_CARD_STATUS");
            tableMapping.ColumnMappings.Add("STOK_CARD_QUANTITY", "STOK_CARD_QUANTITY");
            tableMapping.ColumnMappings.Add("STOK_CARD_SALDO", "STOK_CARD_SALDO");
            tableMapping.ColumnMappings.Add("STOK_CARD_PIC", "STOK_CARD_PIC");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_STOK_CARD] WHERE (([STOK_CARD_ID] = @Original_STOK_CARD_ID) AND ((@IsNull_ITEM_ID = 1 AND [ITEM_ID] IS NULL) OR ([ITEM_ID] = @Original_ITEM_ID)) AND ((@IsNull_GUDANG_ID = 1 AND [GUDANG_ID] IS NULL) OR ([GUDANG_ID] = @Original_GUDANG_ID)) AND ((@IsNull_STOK_CARD_DATE = 1 AND [STOK_CARD_DATE] IS NULL) OR ([STOK_CARD_DATE] = @Original_STOK_CARD_DATE)) AND ((@IsNull_TRANSACTION_ID = 1 AND [TRANSACTION_ID] IS NULL) OR ([TRANSACTION_ID] = @Original_TRANSACTION_ID)) AND ((@IsNull_STOK_CARD_STATUS = 1 AND [STOK_CARD_STATUS] IS NULL) OR ([STOK_CARD_STATUS] = @Original_STOK_CARD_STATUS)) AND ((@IsNull_STOK_CARD_QUANTITY = 1 AND [STOK_CARD_QUANTITY] IS NULL) OR ([STOK_CARD_QUANTITY] = @Original_STOK_CARD_QUANTITY)) AND ((@IsNull_STOK_CARD_SALDO = 1 AND [STOK_CARD_SALDO] IS NULL) OR ([STOK_CARD_SALDO] = @Original_STOK_CARD_SALDO)) AND ((@IsNull_STOK_CARD_PIC = 1 AND [STOK_CARD_PIC] IS NULL) OR ([STOK_CARD_PIC] = @Original_STOK_CARD_PIC)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_STATUS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_QUANTITY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_QUANTITY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_QUANTITY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_PIC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_STOK_CARD] ([ITEM_ID], [GUDANG_ID], [STOK_CARD_DATE], [TRANSACTION_ID], [STOK_CARD_STATUS], [STOK_CARD_QUANTITY], [STOK_CARD_SALDO], [STOK_CARD_PIC], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@ITEM_ID, @GUDANG_ID, @STOK_CARD_DATE, @TRANSACTION_ID, @STOK_CARD_STATUS, @STOK_CARD_QUANTITY, @STOK_CARD_SALDO, @STOK_CARD_PIC, @MODIFIED_BY, @MODIFIED_DATE);
SELECT STOK_CARD_ID, ITEM_ID, GUDANG_ID, STOK_CARD_DATE, TRANSACTION_ID, STOK_CARD_STATUS, STOK_CARD_QUANTITY, STOK_CARD_SALDO, STOK_CARD_PIC, MODIFIED_BY, MODIFIED_DATE FROM T_STOK_CARD WHERE (STOK_CARD_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_STATUS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_QUANTITY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_PIC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_STOK_CARD] SET [ITEM_ID] = @ITEM_ID, [GUDANG_ID] = @GUDANG_ID, [S" +
                "TOK_CARD_DATE] = @STOK_CARD_DATE, [TRANSACTION_ID] = @TRANSACTION_ID, [STOK_CARD" +
                "_STATUS] = @STOK_CARD_STATUS, [STOK_CARD_QUANTITY] = @STOK_CARD_QUANTITY, [STOK_" +
                "CARD_SALDO] = @STOK_CARD_SALDO, [STOK_CARD_PIC] = @STOK_CARD_PIC, [MODIFIED_BY] " +
                "= @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([STOK_CARD_ID] = @Origi" +
                "nal_STOK_CARD_ID) AND ((@IsNull_ITEM_ID = 1 AND [ITEM_ID] IS NULL) OR ([ITEM_ID]" +
                " = @Original_ITEM_ID)) AND ((@IsNull_GUDANG_ID = 1 AND [GUDANG_ID] IS NULL) OR (" +
                "[GUDANG_ID] = @Original_GUDANG_ID)) AND ((@IsNull_STOK_CARD_DATE = 1 AND [STOK_C" +
                "ARD_DATE] IS NULL) OR ([STOK_CARD_DATE] = @Original_STOK_CARD_DATE)) AND ((@IsNu" +
                "ll_TRANSACTION_ID = 1 AND [TRANSACTION_ID] IS NULL) OR ([TRANSACTION_ID] = @Orig" +
                "inal_TRANSACTION_ID)) AND ((@IsNull_STOK_CARD_STATUS = 1 AND [STOK_CARD_STATUS] " +
                "IS NULL) OR ([STOK_CARD_STATUS] = @Original_STOK_CARD_STATUS)) AND ((@IsNull_STO" +
                "K_CARD_QUANTITY = 1 AND [STOK_CARD_QUANTITY] IS NULL) OR ([STOK_CARD_QUANTITY] =" +
                " @Original_STOK_CARD_QUANTITY)) AND ((@IsNull_STOK_CARD_SALDO = 1 AND [STOK_CARD" +
                "_SALDO] IS NULL) OR ([STOK_CARD_SALDO] = @Original_STOK_CARD_SALDO)) AND ((@IsNu" +
                "ll_STOK_CARD_PIC = 1 AND [STOK_CARD_PIC] IS NULL) OR ([STOK_CARD_PIC] = @Origina" +
                "l_STOK_CARD_PIC)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([" +
                "MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODI" +
                "FIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));\r\nSELECT ST" +
                "OK_CARD_ID, ITEM_ID, GUDANG_ID, STOK_CARD_DATE, TRANSACTION_ID, STOK_CARD_STATUS" +
                ", STOK_CARD_QUANTITY, STOK_CARD_SALDO, STOK_CARD_PIC, MODIFIED_BY, MODIFIED_DATE" +
                " FROM T_STOK_CARD WHERE (STOK_CARD_ID = @STOK_CARD_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_STATUS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_QUANTITY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_SALDO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_PIC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_STATUS", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_QUANTITY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_QUANTITY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_QUANTITY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_SALDO", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_SALDO", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_SALDO", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_SALDO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_STOK_CARD_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_STOK_CARD_PIC", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "STOK_CARD_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@STOK_CARD_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "STOK_CARD_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT STOK_CARD_ID, ITEM_ID, GUDANG_ID, STOK_CARD_DATE, TRANSACTION_ID, STOK_CAR" +
                "D_STATUS, STOK_CARD_QUANTITY, STOK_CARD_SALDO, STOK_CARD_PIC, MODIFIED_BY, MODIF" +
                "IED_DATE FROM dbo.T_STOK_CARD";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_STOK_CARDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_STOK_CARDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_STOK_CARDDataTable dataTable = new DataSet1.T_STOK_CARDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_STOK_CARDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_STOK_CARD");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_STOK_CARD_ID, string Original_ITEM_ID, System.Nullable<int> Original_GUDANG_ID, System.Nullable<System.DateTime> Original_STOK_CARD_DATE, System.Nullable<decimal> Original_TRANSACTION_ID, System.Nullable<bool> Original_STOK_CARD_STATUS, System.Nullable<decimal> Original_STOK_CARD_QUANTITY, System.Nullable<decimal> Original_STOK_CARD_SALDO, string Original_STOK_CARD_PIC, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_STOK_CARD_ID));
            if ((Original_ITEM_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ITEM_ID));
            }
            if ((Original_GUDANG_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_GUDANG_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_STOK_CARD_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_STATUS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_STOK_CARD_STATUS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_QUANTITY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_STOK_CARD_QUANTITY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_SALDO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_STOK_CARD_SALDO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_PIC == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_STOK_CARD_PIC));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ITEM_ID, System.Nullable<int> GUDANG_ID, System.Nullable<System.DateTime> STOK_CARD_DATE, System.Nullable<decimal> TRANSACTION_ID, System.Nullable<bool> STOK_CARD_STATUS, System.Nullable<decimal> STOK_CARD_QUANTITY, System.Nullable<decimal> STOK_CARD_SALDO, string STOK_CARD_PIC, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((ITEM_ID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ITEM_ID));
            }
            if ((GUDANG_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(GUDANG_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(STOK_CARD_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(STOK_CARD_STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(STOK_CARD_QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_SALDO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(STOK_CARD_SALDO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_PIC == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(STOK_CARD_PIC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ITEM_ID, 
                    System.Nullable<int> GUDANG_ID, 
                    System.Nullable<System.DateTime> STOK_CARD_DATE, 
                    System.Nullable<decimal> TRANSACTION_ID, 
                    System.Nullable<bool> STOK_CARD_STATUS, 
                    System.Nullable<decimal> STOK_CARD_QUANTITY, 
                    System.Nullable<decimal> STOK_CARD_SALDO, 
                    string STOK_CARD_PIC, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_STOK_CARD_ID, 
                    string Original_ITEM_ID, 
                    System.Nullable<int> Original_GUDANG_ID, 
                    System.Nullable<System.DateTime> Original_STOK_CARD_DATE, 
                    System.Nullable<decimal> Original_TRANSACTION_ID, 
                    System.Nullable<bool> Original_STOK_CARD_STATUS, 
                    System.Nullable<decimal> Original_STOK_CARD_QUANTITY, 
                    System.Nullable<decimal> Original_STOK_CARD_SALDO, 
                    string Original_STOK_CARD_PIC, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal STOK_CARD_ID) {
            if ((ITEM_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ITEM_ID));
            }
            if ((GUDANG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(GUDANG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(STOK_CARD_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(STOK_CARD_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_QUANTITY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(STOK_CARD_QUANTITY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(STOK_CARD_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((STOK_CARD_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(STOK_CARD_PIC));
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_STOK_CARD_ID));
            if ((Original_ITEM_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_ITEM_ID));
            }
            if ((Original_GUDANG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_GUDANG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_STOK_CARD_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_STOK_CARD_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_QUANTITY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_STOK_CARD_QUANTITY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_SALDO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_STOK_CARD_SALDO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_STOK_CARD_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_STOK_CARD_PIC));
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(STOK_CARD_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_TRANSACTIONTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_TRANSACTIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_TRANSACTION";
            tableMapping.ColumnMappings.Add("TRANSACTION_ID", "TRANSACTION_ID");
            tableMapping.ColumnMappings.Add("CURRENCY_ID", "CURRENCY_ID");
            tableMapping.ColumnMappings.Add("GUDANG_ID", "GUDANG_ID");
            tableMapping.ColumnMappings.Add("TRANSACTION_REFERENCE_ID", "TRANSACTION_REFERENCE_ID");
            tableMapping.ColumnMappings.Add("TRANSACTION_FACTUR", "TRANSACTION_FACTUR");
            tableMapping.ColumnMappings.Add("TRANSACTION_BY", "TRANSACTION_BY");
            tableMapping.ColumnMappings.Add("TRANSACTION_BY_ADDRESS", "TRANSACTION_BY_ADDRESS");
            tableMapping.ColumnMappings.Add("TRANSACTION_BY_PHONE", "TRANSACTION_BY_PHONE");
            tableMapping.ColumnMappings.Add("TRANSACTION_BY_NAME", "TRANSACTION_BY_NAME");
            tableMapping.ColumnMappings.Add("TRANSACTION_DATE", "TRANSACTION_DATE");
            tableMapping.ColumnMappings.Add("TRANSACTION_SUB_TOTAL", "TRANSACTION_SUB_TOTAL");
            tableMapping.ColumnMappings.Add("TRANSACTION_DISC", "TRANSACTION_DISC");
            tableMapping.ColumnMappings.Add("TRANSACTION_USE_PPN", "TRANSACTION_USE_PPN");
            tableMapping.ColumnMappings.Add("TRANSACTION_PPN", "TRANSACTION_PPN");
            tableMapping.ColumnMappings.Add("TRANSACTION_GRAND_TOTAL", "TRANSACTION_GRAND_TOTAL");
            tableMapping.ColumnMappings.Add("TRANSACTION_PAID", "TRANSACTION_PAID");
            tableMapping.ColumnMappings.Add("TRANSACTION_SISA", "TRANSACTION_SISA");
            tableMapping.ColumnMappings.Add("TRANSACTION_STATUS", "TRANSACTION_STATUS");
            tableMapping.ColumnMappings.Add("TRANSACTION_DESK", "TRANSACTION_DESK");
            tableMapping.ColumnMappings.Add("TRANSACTION_DESC", "TRANSACTION_DESC");
            tableMapping.ColumnMappings.Add("TRANSACTION_DESC2", "TRANSACTION_DESC2");
            tableMapping.ColumnMappings.Add("EMPLOYEE_ID", "EMPLOYEE_ID");
            tableMapping.ColumnMappings.Add("EMPLOYEE_ID2", "EMPLOYEE_ID2");
            tableMapping.ColumnMappings.Add("TRANSACTION_PAYMENT", "TRANSACTION_PAYMENT");
            tableMapping.ColumnMappings.Add("TRANSACTION_COMMISION", "TRANSACTION_COMMISION");
            tableMapping.ColumnMappings.Add("TRANSACTION_POTONGAN", "TRANSACTION_POTONGAN");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T_TRANSACTION] WHERE (([TRANSACTION_ID] = @Original_TRANSACTIO" +
                "N_ID) AND ((@IsNull_CURRENCY_ID = 1 AND [CURRENCY_ID] IS NULL) OR ([CURRENCY_ID]" +
                " = @Original_CURRENCY_ID)) AND ((@IsNull_GUDANG_ID = 1 AND [GUDANG_ID] IS NULL) " +
                "OR ([GUDANG_ID] = @Original_GUDANG_ID)) AND ((@IsNull_TRANSACTION_REFERENCE_ID =" +
                " 1 AND [TRANSACTION_REFERENCE_ID] IS NULL) OR ([TRANSACTION_REFERENCE_ID] = @Ori" +
                "ginal_TRANSACTION_REFERENCE_ID)) AND ((@IsNull_TRANSACTION_FACTUR = 1 AND [TRANS" +
                "ACTION_FACTUR] IS NULL) OR ([TRANSACTION_FACTUR] = @Original_TRANSACTION_FACTUR)" +
                ") AND ((@IsNull_TRANSACTION_BY = 1 AND [TRANSACTION_BY] IS NULL) OR ([TRANSACTIO" +
                "N_BY] = @Original_TRANSACTION_BY)) AND ((@IsNull_TRANSACTION_BY_ADDRESS = 1 AND " +
                "[TRANSACTION_BY_ADDRESS] IS NULL) OR ([TRANSACTION_BY_ADDRESS] = @Original_TRANS" +
                "ACTION_BY_ADDRESS)) AND ((@IsNull_TRANSACTION_BY_PHONE = 1 AND [TRANSACTION_BY_P" +
                "HONE] IS NULL) OR ([TRANSACTION_BY_PHONE] = @Original_TRANSACTION_BY_PHONE)) AND" +
                " ((@IsNull_TRANSACTION_BY_NAME = 1 AND [TRANSACTION_BY_NAME] IS NULL) OR ([TRANS" +
                "ACTION_BY_NAME] = @Original_TRANSACTION_BY_NAME)) AND ((@IsNull_TRANSACTION_DATE" +
                " = 1 AND [TRANSACTION_DATE] IS NULL) OR ([TRANSACTION_DATE] = @Original_TRANSACT" +
                "ION_DATE)) AND ((@IsNull_TRANSACTION_SUB_TOTAL = 1 AND [TRANSACTION_SUB_TOTAL] I" +
                "S NULL) OR ([TRANSACTION_SUB_TOTAL] = @Original_TRANSACTION_SUB_TOTAL)) AND ((@I" +
                "sNull_TRANSACTION_DISC = 1 AND [TRANSACTION_DISC] IS NULL) OR ([TRANSACTION_DISC" +
                "] = @Original_TRANSACTION_DISC)) AND ((@IsNull_TRANSACTION_USE_PPN = 1 AND [TRAN" +
                "SACTION_USE_PPN] IS NULL) OR ([TRANSACTION_USE_PPN] = @Original_TRANSACTION_USE_" +
                "PPN)) AND ((@IsNull_TRANSACTION_PPN = 1 AND [TRANSACTION_PPN] IS NULL) OR ([TRAN" +
                "SACTION_PPN] = @Original_TRANSACTION_PPN)) AND ((@IsNull_TRANSACTION_GRAND_TOTAL" +
                " = 1 AND [TRANSACTION_GRAND_TOTAL] IS NULL) OR ([TRANSACTION_GRAND_TOTAL] = @Ori" +
                "ginal_TRANSACTION_GRAND_TOTAL)) AND ((@IsNull_TRANSACTION_PAID = 1 AND [TRANSACT" +
                "ION_PAID] IS NULL) OR ([TRANSACTION_PAID] = @Original_TRANSACTION_PAID)) AND ((@" +
                "IsNull_TRANSACTION_SISA = 1 AND [TRANSACTION_SISA] IS NULL) OR ([TRANSACTION_SIS" +
                "A] = @Original_TRANSACTION_SISA)) AND ((@IsNull_TRANSACTION_STATUS = 1 AND [TRAN" +
                "SACTION_STATUS] IS NULL) OR ([TRANSACTION_STATUS] = @Original_TRANSACTION_STATUS" +
                ")) AND ((@IsNull_TRANSACTION_DESK = 1 AND [TRANSACTION_DESK] IS NULL) OR ([TRANS" +
                "ACTION_DESK] = @Original_TRANSACTION_DESK)) AND ((@IsNull_TRANSACTION_DESC = 1 A" +
                "ND [TRANSACTION_DESC] IS NULL) OR ([TRANSACTION_DESC] = @Original_TRANSACTION_DE" +
                "SC)) AND ((@IsNull_TRANSACTION_DESC2 = 1 AND [TRANSACTION_DESC2] IS NULL) OR ([T" +
                "RANSACTION_DESC2] = @Original_TRANSACTION_DESC2)) AND ((@IsNull_EMPLOYEE_ID = 1 " +
                "AND [EMPLOYEE_ID] IS NULL) OR ([EMPLOYEE_ID] = @Original_EMPLOYEE_ID)) AND ((@Is" +
                "Null_EMPLOYEE_ID2 = 1 AND [EMPLOYEE_ID2] IS NULL) OR ([EMPLOYEE_ID2] = @Original" +
                "_EMPLOYEE_ID2)) AND ((@IsNull_TRANSACTION_PAYMENT = 1 AND [TRANSACTION_PAYMENT] " +
                "IS NULL) OR ([TRANSACTION_PAYMENT] = @Original_TRANSACTION_PAYMENT)) AND ((@IsNu" +
                "ll_TRANSACTION_COMMISION = 1 AND [TRANSACTION_COMMISION] IS NULL) OR ([TRANSACTI" +
                "ON_COMMISION] = @Original_TRANSACTION_COMMISION)) AND ((@IsNull_TRANSACTION_POTO" +
                "NGAN = 1 AND [TRANSACTION_POTONGAN] IS NULL) OR ([TRANSACTION_POTONGAN] = @Origi" +
                "nal_TRANSACTION_POTONGAN)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NU" +
                "LL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 " +
                "AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CURRENCY_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CURRENCY_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_REFERENCE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_REFERENCE_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_REFERENCE_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_REFERENCE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_FACTUR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_FACTUR", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_BY_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_BY_ADDRESS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_BY_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_BY_PHONE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_BY_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_BY_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_SUB_TOTAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_SUB_TOTAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_SUB_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_SUB_TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DISC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DISC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_DISC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_USE_PPN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_USE_PPN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_USE_PPN", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_USE_PPN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_PPN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PPN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_PPN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_PPN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_GRAND_TOTAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_GRAND_TOTAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_GRAND_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_GRAND_TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_PAID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_PAID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_PAID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_SISA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_SISA", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_SISA", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_SISA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DESK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DESK", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DESC2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DESC2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ID2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_PAYMENT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_PAYMENT", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_COMMISION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_COMMISION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_COMMISION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_COMMISION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_POTONGAN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_POTONGAN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_POTONGAN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_POTONGAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T_TRANSACTION] ([TRANSACTION_ID], [CURRENCY_ID], [GUDANG_ID], " +
                "[TRANSACTION_REFERENCE_ID], [TRANSACTION_FACTUR], [TRANSACTION_BY], [TRANSACTION" +
                "_BY_ADDRESS], [TRANSACTION_BY_PHONE], [TRANSACTION_BY_NAME], [TRANSACTION_DATE]," +
                " [TRANSACTION_SUB_TOTAL], [TRANSACTION_DISC], [TRANSACTION_USE_PPN], [TRANSACTIO" +
                "N_PPN], [TRANSACTION_GRAND_TOTAL], [TRANSACTION_PAID], [TRANSACTION_SISA], [TRAN" +
                "SACTION_STATUS], [TRANSACTION_DESK], [TRANSACTION_DESC], [TRANSACTION_DESC2], [E" +
                "MPLOYEE_ID], [EMPLOYEE_ID2], [TRANSACTION_PAYMENT], [TRANSACTION_COMMISION], [TR" +
                "ANSACTION_POTONGAN], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@TRANSACTION_ID, @C" +
                "URRENCY_ID, @GUDANG_ID, @TRANSACTION_REFERENCE_ID, @TRANSACTION_FACTUR, @TRANSAC" +
                "TION_BY, @TRANSACTION_BY_ADDRESS, @TRANSACTION_BY_PHONE, @TRANSACTION_BY_NAME, @" +
                "TRANSACTION_DATE, @TRANSACTION_SUB_TOTAL, @TRANSACTION_DISC, @TRANSACTION_USE_PP" +
                "N, @TRANSACTION_PPN, @TRANSACTION_GRAND_TOTAL, @TRANSACTION_PAID, @TRANSACTION_S" +
                "ISA, @TRANSACTION_STATUS, @TRANSACTION_DESK, @TRANSACTION_DESC, @TRANSACTION_DES" +
                "C2, @EMPLOYEE_ID, @EMPLOYEE_ID2, @TRANSACTION_PAYMENT, @TRANSACTION_COMMISION, @" +
                "TRANSACTION_POTONGAN, @MODIFIED_BY, @MODIFIED_DATE);\r\nSELECT TRANSACTION_ID, CUR" +
                "RENCY_ID, GUDANG_ID, TRANSACTION_REFERENCE_ID, TRANSACTION_FACTUR, TRANSACTION_B" +
                "Y, TRANSACTION_BY_ADDRESS, TRANSACTION_BY_PHONE, TRANSACTION_BY_NAME, TRANSACTIO" +
                "N_DATE, TRANSACTION_SUB_TOTAL, TRANSACTION_DISC, TRANSACTION_USE_PPN, TRANSACTIO" +
                "N_PPN, TRANSACTION_GRAND_TOTAL, TRANSACTION_PAID, TRANSACTION_SISA, TRANSACTION_" +
                "STATUS, TRANSACTION_DESK, TRANSACTION_DESC, TRANSACTION_DESC2, EMPLOYEE_ID, EMPL" +
                "OYEE_ID2, TRANSACTION_PAYMENT, TRANSACTION_COMMISION, TRANSACTION_POTONGAN, MODI" +
                "FIED_BY, MODIFIED_DATE FROM T_TRANSACTION WHERE (TRANSACTION_ID = @TRANSACTION_I" +
                "D)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CURRENCY_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_REFERENCE_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_REFERENCE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_FACTUR", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_BY_ADDRESS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_BY_PHONE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_BY_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_SUB_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_SUB_TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_DISC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_USE_PPN", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_USE_PPN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_PPN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_PPN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_GRAND_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_GRAND_TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_PAID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_PAID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_SISA", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_SISA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DESK", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DESC2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_PAYMENT", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_COMMISION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_COMMISION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_POTONGAN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_POTONGAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_TRANSACTION] SET [TRANSACTION_ID] = @TRANSACTION_ID, [CURRENCY_ID" +
                "] = @CURRENCY_ID, [GUDANG_ID] = @GUDANG_ID, [TRANSACTION_REFERENCE_ID] = @TRANSA" +
                "CTION_REFERENCE_ID, [TRANSACTION_FACTUR] = @TRANSACTION_FACTUR, [TRANSACTION_BY]" +
                " = @TRANSACTION_BY, [TRANSACTION_BY_ADDRESS] = @TRANSACTION_BY_ADDRESS, [TRANSAC" +
                "TION_BY_PHONE] = @TRANSACTION_BY_PHONE, [TRANSACTION_BY_NAME] = @TRANSACTION_BY_" +
                "NAME, [TRANSACTION_DATE] = @TRANSACTION_DATE, [TRANSACTION_SUB_TOTAL] = @TRANSAC" +
                "TION_SUB_TOTAL, [TRANSACTION_DISC] = @TRANSACTION_DISC, [TRANSACTION_USE_PPN] = " +
                "@TRANSACTION_USE_PPN, [TRANSACTION_PPN] = @TRANSACTION_PPN, [TRANSACTION_GRAND_T" +
                "OTAL] = @TRANSACTION_GRAND_TOTAL, [TRANSACTION_PAID] = @TRANSACTION_PAID, [TRANS" +
                "ACTION_SISA] = @TRANSACTION_SISA, [TRANSACTION_STATUS] = @TRANSACTION_STATUS, [T" +
                "RANSACTION_DESK] = @TRANSACTION_DESK, [TRANSACTION_DESC] = @TRANSACTION_DESC, [T" +
                "RANSACTION_DESC2] = @TRANSACTION_DESC2, [EMPLOYEE_ID] = @EMPLOYEE_ID, [EMPLOYEE_" +
                "ID2] = @EMPLOYEE_ID2, [TRANSACTION_PAYMENT] = @TRANSACTION_PAYMENT, [TRANSACTION" +
                "_COMMISION] = @TRANSACTION_COMMISION, [TRANSACTION_POTONGAN] = @TRANSACTION_POTO" +
                "NGAN, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @MODIFIED_DATE WHERE (([TR" +
                "ANSACTION_ID] = @Original_TRANSACTION_ID) AND ((@IsNull_CURRENCY_ID = 1 AND [CUR" +
                "RENCY_ID] IS NULL) OR ([CURRENCY_ID] = @Original_CURRENCY_ID)) AND ((@IsNull_GUD" +
                "ANG_ID = 1 AND [GUDANG_ID] IS NULL) OR ([GUDANG_ID] = @Original_GUDANG_ID)) AND " +
                "((@IsNull_TRANSACTION_REFERENCE_ID = 1 AND [TRANSACTION_REFERENCE_ID] IS NULL) O" +
                "R ([TRANSACTION_REFERENCE_ID] = @Original_TRANSACTION_REFERENCE_ID)) AND ((@IsNu" +
                "ll_TRANSACTION_FACTUR = 1 AND [TRANSACTION_FACTUR] IS NULL) OR ([TRANSACTION_FAC" +
                "TUR] = @Original_TRANSACTION_FACTUR)) AND ((@IsNull_TRANSACTION_BY = 1 AND [TRAN" +
                "SACTION_BY] IS NULL) OR ([TRANSACTION_BY] = @Original_TRANSACTION_BY)) AND ((@Is" +
                "Null_TRANSACTION_BY_ADDRESS = 1 AND [TRANSACTION_BY_ADDRESS] IS NULL) OR ([TRANS" +
                "ACTION_BY_ADDRESS] = @Original_TRANSACTION_BY_ADDRESS)) AND ((@IsNull_TRANSACTIO" +
                "N_BY_PHONE = 1 AND [TRANSACTION_BY_PHONE] IS NULL) OR ([TRANSACTION_BY_PHONE] = " +
                "@Original_TRANSACTION_BY_PHONE)) AND ((@IsNull_TRANSACTION_BY_NAME = 1 AND [TRAN" +
                "SACTION_BY_NAME] IS NULL) OR ([TRANSACTION_BY_NAME] = @Original_TRANSACTION_BY_N" +
                "AME)) AND ((@IsNull_TRANSACTION_DATE = 1 AND [TRANSACTION_DATE] IS NULL) OR ([TR" +
                "ANSACTION_DATE] = @Original_TRANSACTION_DATE)) AND ((@IsNull_TRANSACTION_SUB_TOT" +
                "AL = 1 AND [TRANSACTION_SUB_TOTAL] IS NULL) OR ([TRANSACTION_SUB_TOTAL] = @Origi" +
                "nal_TRANSACTION_SUB_TOTAL)) AND ((@IsNull_TRANSACTION_DISC = 1 AND [TRANSACTION_" +
                "DISC] IS NULL) OR ([TRANSACTION_DISC] = @Original_TRANSACTION_DISC)) AND ((@IsNu" +
                "ll_TRANSACTION_USE_PPN = 1 AND [TRANSACTION_USE_PPN] IS NULL) OR ([TRANSACTION_U" +
                "SE_PPN] = @Original_TRANSACTION_USE_PPN)) AND ((@IsNull_TRANSACTION_PPN = 1 AND " +
                "[TRANSACTION_PPN] IS NULL) OR ([TRANSACTION_PPN] = @Original_TRANSACTION_PPN)) A" +
                "ND ((@IsNull_TRANSACTION_GRAND_TOTAL = 1 AND [TRANSACTION_GRAND_TOTAL] IS NULL) " +
                "OR ([TRANSACTION_GRAND_TOTAL] = @Original_TRANSACTION_GRAND_TOTAL)) AND ((@IsNul" +
                "l_TRANSACTION_PAID = 1 AND [TRANSACTION_PAID] IS NULL) OR ([TRANSACTION_PAID] = " +
                "@Original_TRANSACTION_PAID)) AND ((@IsNull_TRANSACTION_SISA = 1 AND [TRANSACTION" +
                "_SISA] IS NULL) OR ([TRANSACTION_SISA] = @Original_TRANSACTION_SISA)) AND ((@IsN" +
                "ull_TRANSACTION_STATUS = 1 AND [TRANSACTION_STATUS] IS NULL) OR ([TRANSACTION_ST" +
                "ATUS] = @Original_TRANSACTION_STATUS)) AND ((@IsNull_TRANSACTION_DESK = 1 AND [T" +
                "RANSACTION_DESK] IS NULL) OR ([TRANSACTION_DESK] = @Original_TRANSACTION_DESK)) " +
                "AND ((@IsNull_TRANSACTION_DESC = 1 AND [TRANSACTION_DESC] IS NULL) OR ([TRANSACT" +
                "ION_DESC] = @Original_TRANSACTION_DESC)) AND ((@IsNull_TRANSACTION_DESC2 = 1 AND" +
                " [TRANSACTION_DESC2] IS NULL) OR ([TRANSACTION_DESC2] = @Original_TRANSACTION_DE" +
                "SC2)) AND ((@IsNull_EMPLOYEE_ID = 1 AND [EMPLOYEE_ID] IS NULL) OR ([EMPLOYEE_ID]" +
                " = @Original_EMPLOYEE_ID)) AND ((@IsNull_EMPLOYEE_ID2 = 1 AND [EMPLOYEE_ID2] IS " +
                "NULL) OR ([EMPLOYEE_ID2] = @Original_EMPLOYEE_ID2)) AND ((@IsNull_TRANSACTION_PA" +
                "YMENT = 1 AND [TRANSACTION_PAYMENT] IS NULL) OR ([TRANSACTION_PAYMENT] = @Origin" +
                "al_TRANSACTION_PAYMENT)) AND ((@IsNull_TRANSACTION_COMMISION = 1 AND [TRANSACTIO" +
                "N_COMMISION] IS NULL) OR ([TRANSACTION_COMMISION] = @Original_TRANSACTION_COMMIS" +
                "ION)) AND ((@IsNull_TRANSACTION_POTONGAN = 1 AND [TRANSACTION_POTONGAN] IS NULL)" +
                " OR ([TRANSACTION_POTONGAN] = @Original_TRANSACTION_POTONGAN)) AND ((@IsNull_MOD" +
                "IFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_B" +
                "Y)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_D" +
                "ATE] = @Original_MODIFIED_DATE)));\r\nSELECT TRANSACTION_ID, CURRENCY_ID, GUDANG_I" +
                "D, TRANSACTION_REFERENCE_ID, TRANSACTION_FACTUR, TRANSACTION_BY, TRANSACTION_BY_" +
                "ADDRESS, TRANSACTION_BY_PHONE, TRANSACTION_BY_NAME, TRANSACTION_DATE, TRANSACTIO" +
                "N_SUB_TOTAL, TRANSACTION_DISC, TRANSACTION_USE_PPN, TRANSACTION_PPN, TRANSACTION" +
                "_GRAND_TOTAL, TRANSACTION_PAID, TRANSACTION_SISA, TRANSACTION_STATUS, TRANSACTIO" +
                "N_DESK, TRANSACTION_DESC, TRANSACTION_DESC2, EMPLOYEE_ID, EMPLOYEE_ID2, TRANSACT" +
                "ION_PAYMENT, TRANSACTION_COMMISION, TRANSACTION_POTONGAN, MODIFIED_BY, MODIFIED_" +
                "DATE FROM T_TRANSACTION WHERE (TRANSACTION_ID = @TRANSACTION_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CURRENCY_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_REFERENCE_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_REFERENCE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_FACTUR", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_BY_ADDRESS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_ADDRESS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_BY_PHONE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_PHONE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_BY_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_NAME", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_SUB_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_SUB_TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_DISC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_USE_PPN", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_USE_PPN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_PPN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_PPN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_GRAND_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_GRAND_TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_PAID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_PAID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_SISA", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_SISA", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_STATUS", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DESK", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DESC2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EMPLOYEE_ID2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_PAYMENT", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_COMMISION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_COMMISION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_POTONGAN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_POTONGAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CURRENCY_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CURRENCY_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CURRENCY_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_GUDANG_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "GUDANG_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_REFERENCE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_REFERENCE_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_REFERENCE_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_REFERENCE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_FACTUR", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_FACTUR", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_FACTUR", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_BY_ADDRESS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_ADDRESS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_BY_ADDRESS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_ADDRESS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_BY_PHONE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_PHONE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_BY_PHONE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_PHONE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_BY_NAME", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_NAME", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_BY_NAME", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_BY_NAME", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_SUB_TOTAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_SUB_TOTAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_SUB_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_SUB_TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DISC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DISC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_DISC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_USE_PPN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_USE_PPN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_USE_PPN", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_USE_PPN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_PPN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PPN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_PPN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_PPN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_GRAND_TOTAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_GRAND_TOTAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_GRAND_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_GRAND_TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_PAID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_PAID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_PAID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_SISA", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_SISA", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_SISA", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_SISA", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_STATUS", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_STATUS", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_STATUS", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_STATUS", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DESK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DESK", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_DESC2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DESC2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_DESC2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EMPLOYEE_ID2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EMPLOYEE_ID2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "EMPLOYEE_ID2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_PAYMENT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_PAYMENT", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_PAYMENT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_COMMISION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_COMMISION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_COMMISION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_COMMISION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_POTONGAN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_POTONGAN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_POTONGAN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TRANSACTION_POTONGAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT TRANSACTION_ID, CURRENCY_ID, GUDANG_ID, TRANSACTION_REFERENCE_ID, TRANSACTION_FACTUR, TRANSACTION_BY, TRANSACTION_BY_ADDRESS, TRANSACTION_BY_PHONE, TRANSACTION_BY_NAME, TRANSACTION_DATE, TRANSACTION_SUB_TOTAL, TRANSACTION_DISC, TRANSACTION_USE_PPN, TRANSACTION_PPN, TRANSACTION_GRAND_TOTAL, TRANSACTION_PAID, TRANSACTION_SISA, TRANSACTION_STATUS, TRANSACTION_DESK, TRANSACTION_DESC, TRANSACTION_DESC2, EMPLOYEE_ID, EMPLOYEE_ID2, TRANSACTION_PAYMENT, TRANSACTION_COMMISION, TRANSACTION_POTONGAN, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_TRANSACTION";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_TRANSACTIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_TRANSACTIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_TRANSACTIONDataTable dataTable = new DataSet1.T_TRANSACTIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_TRANSACTIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_TRANSACTION");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_TRANSACTION_ID, 
                    string Original_CURRENCY_ID, 
                    System.Nullable<int> Original_GUDANG_ID, 
                    System.Nullable<decimal> Original_TRANSACTION_REFERENCE_ID, 
                    string Original_TRANSACTION_FACTUR, 
                    string Original_TRANSACTION_BY, 
                    string Original_TRANSACTION_BY_ADDRESS, 
                    string Original_TRANSACTION_BY_PHONE, 
                    string Original_TRANSACTION_BY_NAME, 
                    System.Nullable<System.DateTime> Original_TRANSACTION_DATE, 
                    System.Nullable<decimal> Original_TRANSACTION_SUB_TOTAL, 
                    System.Nullable<decimal> Original_TRANSACTION_DISC, 
                    System.Nullable<bool> Original_TRANSACTION_USE_PPN, 
                    System.Nullable<decimal> Original_TRANSACTION_PPN, 
                    System.Nullable<decimal> Original_TRANSACTION_GRAND_TOTAL, 
                    System.Nullable<decimal> Original_TRANSACTION_PAID, 
                    System.Nullable<decimal> Original_TRANSACTION_SISA, 
                    string Original_TRANSACTION_STATUS, 
                    string Original_TRANSACTION_DESK, 
                    string Original_TRANSACTION_DESC, 
                    string Original_TRANSACTION_DESC2, 
                    string Original_EMPLOYEE_ID, 
                    string Original_EMPLOYEE_ID2, 
                    string Original_TRANSACTION_PAYMENT, 
                    System.Nullable<decimal> Original_TRANSACTION_COMMISION, 
                    System.Nullable<decimal> Original_TRANSACTION_POTONGAN, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TRANSACTION_ID));
            if ((Original_CURRENCY_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CURRENCY_ID));
            }
            if ((Original_GUDANG_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_GUDANG_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_REFERENCE_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_TRANSACTION_REFERENCE_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_FACTUR == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_TRANSACTION_FACTUR));
            }
            if ((Original_TRANSACTION_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_TRANSACTION_BY));
            }
            if ((Original_TRANSACTION_BY_ADDRESS == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_TRANSACTION_BY_ADDRESS));
            }
            if ((Original_TRANSACTION_BY_PHONE == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_TRANSACTION_BY_PHONE));
            }
            if ((Original_TRANSACTION_BY_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TRANSACTION_BY_NAME));
            }
            if ((Original_TRANSACTION_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_TRANSACTION_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_SUB_TOTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_TRANSACTION_SUB_TOTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_DISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_TRANSACTION_DISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_USE_PPN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_TRANSACTION_USE_PPN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_PPN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_TRANSACTION_PPN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_GRAND_TOTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_TRANSACTION_GRAND_TOTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_PAID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_TRANSACTION_PAID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_SISA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_TRANSACTION_SISA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_TRANSACTION_STATUS));
            }
            if ((Original_TRANSACTION_DESK == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_TRANSACTION_DESK));
            }
            if ((Original_TRANSACTION_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_TRANSACTION_DESC));
            }
            if ((Original_TRANSACTION_DESC2 == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_TRANSACTION_DESC2));
            }
            if ((Original_EMPLOYEE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_EMPLOYEE_ID));
            }
            if ((Original_EMPLOYEE_ID2 == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_EMPLOYEE_ID2));
            }
            if ((Original_TRANSACTION_PAYMENT == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_TRANSACTION_PAYMENT));
            }
            if ((Original_TRANSACTION_COMMISION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_TRANSACTION_COMMISION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_POTONGAN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_TRANSACTION_POTONGAN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal TRANSACTION_ID, 
                    string CURRENCY_ID, 
                    System.Nullable<int> GUDANG_ID, 
                    System.Nullable<decimal> TRANSACTION_REFERENCE_ID, 
                    string TRANSACTION_FACTUR, 
                    string TRANSACTION_BY, 
                    string TRANSACTION_BY_ADDRESS, 
                    string TRANSACTION_BY_PHONE, 
                    string TRANSACTION_BY_NAME, 
                    System.Nullable<System.DateTime> TRANSACTION_DATE, 
                    System.Nullable<decimal> TRANSACTION_SUB_TOTAL, 
                    System.Nullable<decimal> TRANSACTION_DISC, 
                    System.Nullable<bool> TRANSACTION_USE_PPN, 
                    System.Nullable<decimal> TRANSACTION_PPN, 
                    System.Nullable<decimal> TRANSACTION_GRAND_TOTAL, 
                    System.Nullable<decimal> TRANSACTION_PAID, 
                    System.Nullable<decimal> TRANSACTION_SISA, 
                    string TRANSACTION_STATUS, 
                    string TRANSACTION_DESK, 
                    string TRANSACTION_DESC, 
                    string TRANSACTION_DESC2, 
                    string EMPLOYEE_ID, 
                    string EMPLOYEE_ID2, 
                    string TRANSACTION_PAYMENT, 
                    System.Nullable<decimal> TRANSACTION_COMMISION, 
                    System.Nullable<decimal> TRANSACTION_POTONGAN, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TRANSACTION_ID));
            if ((CURRENCY_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CURRENCY_ID));
            }
            if ((GUDANG_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(GUDANG_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_REFERENCE_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TRANSACTION_REFERENCE_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_FACTUR == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TRANSACTION_FACTUR));
            }
            if ((TRANSACTION_BY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TRANSACTION_BY));
            }
            if ((TRANSACTION_BY_ADDRESS == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(TRANSACTION_BY_ADDRESS));
            }
            if ((TRANSACTION_BY_PHONE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(TRANSACTION_BY_PHONE));
            }
            if ((TRANSACTION_BY_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(TRANSACTION_BY_NAME));
            }
            if ((TRANSACTION_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(TRANSACTION_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_SUB_TOTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(TRANSACTION_SUB_TOTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_DISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(TRANSACTION_DISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_USE_PPN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(TRANSACTION_USE_PPN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_PPN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(TRANSACTION_PPN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_GRAND_TOTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(TRANSACTION_GRAND_TOTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_PAID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(TRANSACTION_PAID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_SISA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(TRANSACTION_SISA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(TRANSACTION_STATUS));
            }
            if ((TRANSACTION_DESK == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(TRANSACTION_DESK));
            }
            if ((TRANSACTION_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(TRANSACTION_DESC));
            }
            if ((TRANSACTION_DESC2 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(TRANSACTION_DESC2));
            }
            if ((EMPLOYEE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(EMPLOYEE_ID));
            }
            if ((EMPLOYEE_ID2 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(EMPLOYEE_ID2));
            }
            if ((TRANSACTION_PAYMENT == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(TRANSACTION_PAYMENT));
            }
            if ((TRANSACTION_COMMISION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(TRANSACTION_COMMISION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_POTONGAN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(TRANSACTION_POTONGAN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal TRANSACTION_ID, 
                    string CURRENCY_ID, 
                    System.Nullable<int> GUDANG_ID, 
                    System.Nullable<decimal> TRANSACTION_REFERENCE_ID, 
                    string TRANSACTION_FACTUR, 
                    string TRANSACTION_BY, 
                    string TRANSACTION_BY_ADDRESS, 
                    string TRANSACTION_BY_PHONE, 
                    string TRANSACTION_BY_NAME, 
                    System.Nullable<System.DateTime> TRANSACTION_DATE, 
                    System.Nullable<decimal> TRANSACTION_SUB_TOTAL, 
                    System.Nullable<decimal> TRANSACTION_DISC, 
                    System.Nullable<bool> TRANSACTION_USE_PPN, 
                    System.Nullable<decimal> TRANSACTION_PPN, 
                    System.Nullable<decimal> TRANSACTION_GRAND_TOTAL, 
                    System.Nullable<decimal> TRANSACTION_PAID, 
                    System.Nullable<decimal> TRANSACTION_SISA, 
                    string TRANSACTION_STATUS, 
                    string TRANSACTION_DESK, 
                    string TRANSACTION_DESC, 
                    string TRANSACTION_DESC2, 
                    string EMPLOYEE_ID, 
                    string EMPLOYEE_ID2, 
                    string TRANSACTION_PAYMENT, 
                    System.Nullable<decimal> TRANSACTION_COMMISION, 
                    System.Nullable<decimal> TRANSACTION_POTONGAN, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_TRANSACTION_ID, 
                    string Original_CURRENCY_ID, 
                    System.Nullable<int> Original_GUDANG_ID, 
                    System.Nullable<decimal> Original_TRANSACTION_REFERENCE_ID, 
                    string Original_TRANSACTION_FACTUR, 
                    string Original_TRANSACTION_BY, 
                    string Original_TRANSACTION_BY_ADDRESS, 
                    string Original_TRANSACTION_BY_PHONE, 
                    string Original_TRANSACTION_BY_NAME, 
                    System.Nullable<System.DateTime> Original_TRANSACTION_DATE, 
                    System.Nullable<decimal> Original_TRANSACTION_SUB_TOTAL, 
                    System.Nullable<decimal> Original_TRANSACTION_DISC, 
                    System.Nullable<bool> Original_TRANSACTION_USE_PPN, 
                    System.Nullable<decimal> Original_TRANSACTION_PPN, 
                    System.Nullable<decimal> Original_TRANSACTION_GRAND_TOTAL, 
                    System.Nullable<decimal> Original_TRANSACTION_PAID, 
                    System.Nullable<decimal> Original_TRANSACTION_SISA, 
                    string Original_TRANSACTION_STATUS, 
                    string Original_TRANSACTION_DESK, 
                    string Original_TRANSACTION_DESC, 
                    string Original_TRANSACTION_DESC2, 
                    string Original_EMPLOYEE_ID, 
                    string Original_EMPLOYEE_ID2, 
                    string Original_TRANSACTION_PAYMENT, 
                    System.Nullable<decimal> Original_TRANSACTION_COMMISION, 
                    System.Nullable<decimal> Original_TRANSACTION_POTONGAN, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TRANSACTION_ID));
            if ((CURRENCY_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CURRENCY_ID));
            }
            if ((GUDANG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(GUDANG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_REFERENCE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TRANSACTION_REFERENCE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_FACTUR == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TRANSACTION_FACTUR));
            }
            if ((TRANSACTION_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(TRANSACTION_BY));
            }
            if ((TRANSACTION_BY_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(TRANSACTION_BY_ADDRESS));
            }
            if ((TRANSACTION_BY_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(TRANSACTION_BY_PHONE));
            }
            if ((TRANSACTION_BY_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(TRANSACTION_BY_NAME));
            }
            if ((TRANSACTION_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(TRANSACTION_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_SUB_TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(TRANSACTION_SUB_TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_DISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(TRANSACTION_DISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_USE_PPN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(TRANSACTION_USE_PPN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_PPN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(TRANSACTION_PPN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_GRAND_TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(TRANSACTION_GRAND_TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_PAID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(TRANSACTION_PAID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_SISA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(TRANSACTION_SISA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(TRANSACTION_STATUS));
            }
            if ((TRANSACTION_DESK == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(TRANSACTION_DESK));
            }
            if ((TRANSACTION_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(TRANSACTION_DESC));
            }
            if ((TRANSACTION_DESC2 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(TRANSACTION_DESC2));
            }
            if ((EMPLOYEE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(EMPLOYEE_ID));
            }
            if ((EMPLOYEE_ID2 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(EMPLOYEE_ID2));
            }
            if ((TRANSACTION_PAYMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(TRANSACTION_PAYMENT));
            }
            if ((TRANSACTION_COMMISION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(TRANSACTION_COMMISION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((TRANSACTION_POTONGAN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(TRANSACTION_POTONGAN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_TRANSACTION_ID));
            if ((Original_CURRENCY_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_CURRENCY_ID));
            }
            if ((Original_GUDANG_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_GUDANG_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_REFERENCE_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_TRANSACTION_REFERENCE_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_FACTUR == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_TRANSACTION_FACTUR));
            }
            if ((Original_TRANSACTION_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_TRANSACTION_BY));
            }
            if ((Original_TRANSACTION_BY_ADDRESS == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_TRANSACTION_BY_ADDRESS));
            }
            if ((Original_TRANSACTION_BY_PHONE == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_TRANSACTION_BY_PHONE));
            }
            if ((Original_TRANSACTION_BY_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_TRANSACTION_BY_NAME));
            }
            if ((Original_TRANSACTION_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_TRANSACTION_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_SUB_TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_TRANSACTION_SUB_TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_DISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(Original_TRANSACTION_DISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_USE_PPN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(Original_TRANSACTION_USE_PPN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_PPN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_TRANSACTION_PPN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_GRAND_TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(Original_TRANSACTION_GRAND_TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_PAID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(Original_TRANSACTION_PAID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_SISA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Original_TRANSACTION_SISA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_TRANSACTION_STATUS));
            }
            if ((Original_TRANSACTION_DESK == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_TRANSACTION_DESK));
            }
            if ((Original_TRANSACTION_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_TRANSACTION_DESC));
            }
            if ((Original_TRANSACTION_DESC2 == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_TRANSACTION_DESC2));
            }
            if ((Original_EMPLOYEE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_EMPLOYEE_ID));
            }
            if ((Original_EMPLOYEE_ID2 == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_EMPLOYEE_ID2));
            }
            if ((Original_TRANSACTION_PAYMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_TRANSACTION_PAYMENT));
            }
            if ((Original_TRANSACTION_COMMISION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((decimal)(Original_TRANSACTION_COMMISION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = System.DBNull.Value;
            }
            if ((Original_TRANSACTION_POTONGAN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(Original_TRANSACTION_POTONGAN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_TRANSACTION_SERVICETableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_TRANSACTION_SERVICETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_TRANSACTION_SERVICE";
            tableMapping.ColumnMappings.Add("TRANSACTION_ID", "TRANSACTION_ID");
            tableMapping.ColumnMappings.Add("SERVICE_FIRST_CONDITION", "SERVICE_FIRST_CONDITION");
            tableMapping.ColumnMappings.Add("SERVICE_REQUEST_DATE", "SERVICE_REQUEST_DATE");
            tableMapping.ColumnMappings.Add("SERVICE_START_WORK", "SERVICE_START_WORK");
            tableMapping.ColumnMappings.Add("SERVICE_END_WORK", "SERVICE_END_WORK");
            tableMapping.ColumnMappings.Add("SERVICE_PIC", "SERVICE_PIC");
            tableMapping.ColumnMappings.Add("SERVICE_TYPE", "SERVICE_TYPE");
            tableMapping.ColumnMappings.Add("SERVICE_COMPLAIN", "SERVICE_COMPLAIN");
            tableMapping.ColumnMappings.Add("SERVICE_DESC", "SERVICE_DESC");
            tableMapping.ColumnMappings.Add("SERVICE_CHARGE", "SERVICE_CHARGE");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_TRANSACTION_SERVICE] WHERE (([TRANSACTION_ID] = @Original_TRANSACTION_ID) AND ((@IsNull_SERVICE_FIRST_CONDITION = 1 AND [SERVICE_FIRST_CONDITION] IS NULL) OR ([SERVICE_FIRST_CONDITION] = @Original_SERVICE_FIRST_CONDITION)) AND ((@IsNull_SERVICE_REQUEST_DATE = 1 AND [SERVICE_REQUEST_DATE] IS NULL) OR ([SERVICE_REQUEST_DATE] = @Original_SERVICE_REQUEST_DATE)) AND ((@IsNull_SERVICE_START_WORK = 1 AND [SERVICE_START_WORK] IS NULL) OR ([SERVICE_START_WORK] = @Original_SERVICE_START_WORK)) AND ((@IsNull_SERVICE_END_WORK = 1 AND [SERVICE_END_WORK] IS NULL) OR ([SERVICE_END_WORK] = @Original_SERVICE_END_WORK)) AND ((@IsNull_SERVICE_PIC = 1 AND [SERVICE_PIC] IS NULL) OR ([SERVICE_PIC] = @Original_SERVICE_PIC)) AND ((@IsNull_SERVICE_TYPE = 1 AND [SERVICE_TYPE] IS NULL) OR ([SERVICE_TYPE] = @Original_SERVICE_TYPE)) AND ((@IsNull_SERVICE_COMPLAIN = 1 AND [SERVICE_COMPLAIN] IS NULL) OR ([SERVICE_COMPLAIN] = @Original_SERVICE_COMPLAIN)) AND ((@IsNull_SERVICE_DESC = 1 AND [SERVICE_DESC] IS NULL) OR ([SERVICE_DESC] = @Original_SERVICE_DESC)) AND ((@IsNull_SERVICE_CHARGE = 1 AND [SERVICE_CHARGE] IS NULL) OR ([SERVICE_CHARGE] = @Original_SERVICE_CHARGE)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_FIRST_CONDITION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_FIRST_CONDITION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_FIRST_CONDITION", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_FIRST_CONDITION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_REQUEST_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_REQUEST_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_REQUEST_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_REQUEST_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_START_WORK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_START_WORK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_START_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_START_WORK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_END_WORK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_END_WORK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_END_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_END_WORK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_TYPE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_TYPE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_TYPE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_TYPE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_COMPLAIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_COMPLAIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_COMPLAIN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_COMPLAIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_CHARGE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_CHARGE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_CHARGE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SERVICE_CHARGE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_TRANSACTION_SERVICE] ([TRANSACTION_ID], [SERVICE_FIRST_CONDITION], [SERVICE_REQUEST_DATE], [SERVICE_START_WORK], [SERVICE_END_WORK], [SERVICE_PIC], [SERVICE_TYPE], [SERVICE_COMPLAIN], [SERVICE_DESC], [SERVICE_CHARGE], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@TRANSACTION_ID, @SERVICE_FIRST_CONDITION, @SERVICE_REQUEST_DATE, @SERVICE_START_WORK, @SERVICE_END_WORK, @SERVICE_PIC, @SERVICE_TYPE, @SERVICE_COMPLAIN, @SERVICE_DESC, @SERVICE_CHARGE, @MODIFIED_BY, @MODIFIED_DATE);
SELECT TRANSACTION_ID, SERVICE_FIRST_CONDITION, SERVICE_REQUEST_DATE, SERVICE_START_WORK, SERVICE_END_WORK, SERVICE_PIC, SERVICE_TYPE, SERVICE_COMPLAIN, SERVICE_DESC, SERVICE_CHARGE, MODIFIED_BY, MODIFIED_DATE FROM T_TRANSACTION_SERVICE WHERE (TRANSACTION_ID = @TRANSACTION_ID)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_FIRST_CONDITION", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_FIRST_CONDITION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_REQUEST_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_REQUEST_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_START_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_START_WORK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_END_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_END_WORK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_TYPE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_TYPE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_COMPLAIN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_COMPLAIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_CHARGE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SERVICE_CHARGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_TRANSACTION_SERVICE] SET [TRANSACTION_ID] = @TRANSACTION_ID, [SER" +
                "VICE_FIRST_CONDITION] = @SERVICE_FIRST_CONDITION, [SERVICE_REQUEST_DATE] = @SERV" +
                "ICE_REQUEST_DATE, [SERVICE_START_WORK] = @SERVICE_START_WORK, [SERVICE_END_WORK]" +
                " = @SERVICE_END_WORK, [SERVICE_PIC] = @SERVICE_PIC, [SERVICE_TYPE] = @SERVICE_TY" +
                "PE, [SERVICE_COMPLAIN] = @SERVICE_COMPLAIN, [SERVICE_DESC] = @SERVICE_DESC, [SER" +
                "VICE_CHARGE] = @SERVICE_CHARGE, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = " +
                "@MODIFIED_DATE WHERE (([TRANSACTION_ID] = @Original_TRANSACTION_ID) AND ((@IsNul" +
                "l_SERVICE_FIRST_CONDITION = 1 AND [SERVICE_FIRST_CONDITION] IS NULL) OR ([SERVIC" +
                "E_FIRST_CONDITION] = @Original_SERVICE_FIRST_CONDITION)) AND ((@IsNull_SERVICE_R" +
                "EQUEST_DATE = 1 AND [SERVICE_REQUEST_DATE] IS NULL) OR ([SERVICE_REQUEST_DATE] =" +
                " @Original_SERVICE_REQUEST_DATE)) AND ((@IsNull_SERVICE_START_WORK = 1 AND [SERV" +
                "ICE_START_WORK] IS NULL) OR ([SERVICE_START_WORK] = @Original_SERVICE_START_WORK" +
                ")) AND ((@IsNull_SERVICE_END_WORK = 1 AND [SERVICE_END_WORK] IS NULL) OR ([SERVI" +
                "CE_END_WORK] = @Original_SERVICE_END_WORK)) AND ((@IsNull_SERVICE_PIC = 1 AND [S" +
                "ERVICE_PIC] IS NULL) OR ([SERVICE_PIC] = @Original_SERVICE_PIC)) AND ((@IsNull_S" +
                "ERVICE_TYPE = 1 AND [SERVICE_TYPE] IS NULL) OR ([SERVICE_TYPE] = @Original_SERVI" +
                "CE_TYPE)) AND ((@IsNull_SERVICE_COMPLAIN = 1 AND [SERVICE_COMPLAIN] IS NULL) OR " +
                "([SERVICE_COMPLAIN] = @Original_SERVICE_COMPLAIN)) AND ((@IsNull_SERVICE_DESC = " +
                "1 AND [SERVICE_DESC] IS NULL) OR ([SERVICE_DESC] = @Original_SERVICE_DESC)) AND " +
                "((@IsNull_SERVICE_CHARGE = 1 AND [SERVICE_CHARGE] IS NULL) OR ([SERVICE_CHARGE] " +
                "= @Original_SERVICE_CHARGE)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS " +
                "NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = " +
                "1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)));" +
                "\r\nSELECT TRANSACTION_ID, SERVICE_FIRST_CONDITION, SERVICE_REQUEST_DATE, SERVICE_" +
                "START_WORK, SERVICE_END_WORK, SERVICE_PIC, SERVICE_TYPE, SERVICE_COMPLAIN, SERVI" +
                "CE_DESC, SERVICE_CHARGE, MODIFIED_BY, MODIFIED_DATE FROM T_TRANSACTION_SERVICE W" +
                "HERE (TRANSACTION_ID = @TRANSACTION_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_FIRST_CONDITION", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_FIRST_CONDITION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_REQUEST_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_REQUEST_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_START_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_START_WORK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_END_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_END_WORK", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_PIC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_TYPE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_TYPE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_COMPLAIN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_COMPLAIN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_DESC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SERVICE_CHARGE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SERVICE_CHARGE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_FIRST_CONDITION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_FIRST_CONDITION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_FIRST_CONDITION", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_FIRST_CONDITION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_REQUEST_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_REQUEST_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_REQUEST_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_REQUEST_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_START_WORK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_START_WORK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_START_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_START_WORK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_END_WORK", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_END_WORK", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_END_WORK", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_END_WORK", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_PIC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_PIC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_PIC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_PIC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_TYPE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_TYPE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_TYPE", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_TYPE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_COMPLAIN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_COMPLAIN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_COMPLAIN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_COMPLAIN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_DESC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_DESC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_DESC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_DESC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SERVICE_CHARGE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SERVICE_CHARGE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SERVICE_CHARGE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "SERVICE_CHARGE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TRANSACTION_ID, SERVICE_FIRST_CONDITION, SERVICE_REQUEST_DATE, SERVICE_STA" +
                "RT_WORK, SERVICE_END_WORK, SERVICE_PIC, SERVICE_TYPE, SERVICE_COMPLAIN, SERVICE_" +
                "DESC, SERVICE_CHARGE, MODIFIED_BY, MODIFIED_DATE FROM dbo.T_TRANSACTION_SERVICE";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_TRANSACTION_SERVICEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_TRANSACTION_SERVICEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_TRANSACTION_SERVICEDataTable dataTable = new DataSet1.T_TRANSACTION_SERVICEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_TRANSACTION_SERVICEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_TRANSACTION_SERVICE");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_TRANSACTION_ID, string Original_SERVICE_FIRST_CONDITION, System.Nullable<System.DateTime> Original_SERVICE_REQUEST_DATE, System.Nullable<System.DateTime> Original_SERVICE_START_WORK, System.Nullable<System.DateTime> Original_SERVICE_END_WORK, string Original_SERVICE_PIC, string Original_SERVICE_TYPE, string Original_SERVICE_COMPLAIN, string Original_SERVICE_DESC, System.Nullable<decimal> Original_SERVICE_CHARGE, string Original_MODIFIED_BY, System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TRANSACTION_ID));
            if ((Original_SERVICE_FIRST_CONDITION == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SERVICE_FIRST_CONDITION));
            }
            if ((Original_SERVICE_REQUEST_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_SERVICE_REQUEST_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_SERVICE_START_WORK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_SERVICE_START_WORK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_SERVICE_END_WORK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_SERVICE_END_WORK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_SERVICE_PIC == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SERVICE_PIC));
            }
            if ((Original_SERVICE_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_SERVICE_TYPE));
            }
            if ((Original_SERVICE_COMPLAIN == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_SERVICE_COMPLAIN));
            }
            if ((Original_SERVICE_DESC == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_SERVICE_DESC));
            }
            if ((Original_SERVICE_CHARGE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_SERVICE_CHARGE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal TRANSACTION_ID, string SERVICE_FIRST_CONDITION, System.Nullable<System.DateTime> SERVICE_REQUEST_DATE, System.Nullable<System.DateTime> SERVICE_START_WORK, System.Nullable<System.DateTime> SERVICE_END_WORK, string SERVICE_PIC, string SERVICE_TYPE, string SERVICE_COMPLAIN, string SERVICE_DESC, System.Nullable<decimal> SERVICE_CHARGE, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TRANSACTION_ID));
            if ((SERVICE_FIRST_CONDITION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SERVICE_FIRST_CONDITION));
            }
            if ((SERVICE_REQUEST_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(SERVICE_REQUEST_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SERVICE_START_WORK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(SERVICE_START_WORK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SERVICE_END_WORK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(SERVICE_END_WORK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((SERVICE_PIC == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SERVICE_PIC));
            }
            if ((SERVICE_TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SERVICE_TYPE));
            }
            if ((SERVICE_COMPLAIN == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SERVICE_COMPLAIN));
            }
            if ((SERVICE_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SERVICE_DESC));
            }
            if ((SERVICE_CHARGE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(SERVICE_CHARGE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal TRANSACTION_ID, 
                    string SERVICE_FIRST_CONDITION, 
                    System.Nullable<System.DateTime> SERVICE_REQUEST_DATE, 
                    System.Nullable<System.DateTime> SERVICE_START_WORK, 
                    System.Nullable<System.DateTime> SERVICE_END_WORK, 
                    string SERVICE_PIC, 
                    string SERVICE_TYPE, 
                    string SERVICE_COMPLAIN, 
                    string SERVICE_DESC, 
                    System.Nullable<decimal> SERVICE_CHARGE, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_TRANSACTION_ID, 
                    string Original_SERVICE_FIRST_CONDITION, 
                    System.Nullable<System.DateTime> Original_SERVICE_REQUEST_DATE, 
                    System.Nullable<System.DateTime> Original_SERVICE_START_WORK, 
                    System.Nullable<System.DateTime> Original_SERVICE_END_WORK, 
                    string Original_SERVICE_PIC, 
                    string Original_SERVICE_TYPE, 
                    string Original_SERVICE_COMPLAIN, 
                    string Original_SERVICE_DESC, 
                    System.Nullable<decimal> Original_SERVICE_CHARGE, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TRANSACTION_ID));
            if ((SERVICE_FIRST_CONDITION == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SERVICE_FIRST_CONDITION));
            }
            if ((SERVICE_REQUEST_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(SERVICE_REQUEST_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SERVICE_START_WORK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(SERVICE_START_WORK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SERVICE_END_WORK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(SERVICE_END_WORK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((SERVICE_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SERVICE_PIC));
            }
            if ((SERVICE_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SERVICE_TYPE));
            }
            if ((SERVICE_COMPLAIN == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SERVICE_COMPLAIN));
            }
            if ((SERVICE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SERVICE_DESC));
            }
            if ((SERVICE_CHARGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(SERVICE_CHARGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_TRANSACTION_ID));
            if ((Original_SERVICE_FIRST_CONDITION == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_SERVICE_FIRST_CONDITION));
            }
            if ((Original_SERVICE_REQUEST_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_SERVICE_REQUEST_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_SERVICE_START_WORK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_SERVICE_START_WORK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_SERVICE_END_WORK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_SERVICE_END_WORK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_SERVICE_PIC == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_SERVICE_PIC));
            }
            if ((Original_SERVICE_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_SERVICE_TYPE));
            }
            if ((Original_SERVICE_COMPLAIN == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_SERVICE_COMPLAIN));
            }
            if ((Original_SERVICE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_SERVICE_DESC));
            }
            if ((Original_SERVICE_CHARGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_SERVICE_CHARGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T_TRANSACTION_DETAILTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public T_TRANSACTION_DETAILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T_TRANSACTION_DETAIL";
            tableMapping.ColumnMappings.Add("TRANSACTION_DETAIL_ID", "TRANSACTION_DETAIL_ID");
            tableMapping.ColumnMappings.Add("TRANSACTION_ID", "TRANSACTION_ID");
            tableMapping.ColumnMappings.Add("IS_PACKET", "IS_PACKET");
            tableMapping.ColumnMappings.Add("ITEM_ID", "ITEM_ID");
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY");
            tableMapping.ColumnMappings.Add("PRICE", "PRICE");
            tableMapping.ColumnMappings.Add("JUMLAH", "JUMLAH");
            tableMapping.ColumnMappings.Add("DISC", "DISC");
            tableMapping.ColumnMappings.Add("PPN", "PPN");
            tableMapping.ColumnMappings.Add("TOTAL", "TOTAL");
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION");
            tableMapping.ColumnMappings.Add("EXPIRED_DATE", "EXPIRED_DATE");
            tableMapping.ColumnMappings.Add("COMMISSION", "COMMISSION");
            tableMapping.ColumnMappings.Add("COST_PRICE", "COST_PRICE");
            tableMapping.ColumnMappings.Add("MODIFIED_BY", "MODIFIED_BY");
            tableMapping.ColumnMappings.Add("MODIFIED_DATE", "MODIFIED_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[T_TRANSACTION_DETAIL] WHERE (([TRANSACTION_DETAIL_ID] = @Original_TRANSACTION_DETAIL_ID) AND ((@IsNull_TRANSACTION_ID = 1 AND [TRANSACTION_ID] IS NULL) OR ([TRANSACTION_ID] = @Original_TRANSACTION_ID)) AND ((@IsNull_IS_PACKET = 1 AND [IS_PACKET] IS NULL) OR ([IS_PACKET] = @Original_IS_PACKET)) AND ((@IsNull_ITEM_ID = 1 AND [ITEM_ID] IS NULL) OR ([ITEM_ID] = @Original_ITEM_ID)) AND ((@IsNull_QUANTITY = 1 AND [QUANTITY] IS NULL) OR ([QUANTITY] = @Original_QUANTITY)) AND ((@IsNull_PRICE = 1 AND [PRICE] IS NULL) OR ([PRICE] = @Original_PRICE)) AND ((@IsNull_JUMLAH = 1 AND [JUMLAH] IS NULL) OR ([JUMLAH] = @Original_JUMLAH)) AND ((@IsNull_DISC = 1 AND [DISC] IS NULL) OR ([DISC] = @Original_DISC)) AND ((@IsNull_PPN = 1 AND [PPN] IS NULL) OR ([PPN] = @Original_PPN)) AND ((@IsNull_TOTAL = 1 AND [TOTAL] IS NULL) OR ([TOTAL] = @Original_TOTAL)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @Original_DESCRIPTION)) AND ((@IsNull_EXPIRED_DATE = 1 AND [EXPIRED_DATE] IS NULL) OR ([EXPIRED_DATE] = @Original_EXPIRED_DATE)) AND ((@IsNull_COMMISSION = 1 AND [COMMISSION] IS NULL) OR ([COMMISSION] = @Original_COMMISSION)) AND ((@IsNull_COST_PRICE = 1 AND [COST_PRICE] IS NULL) OR ([COST_PRICE] = @Original_COST_PRICE)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIED_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIED_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED_DATE)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DETAIL_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_DETAIL_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IS_PACKET", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IS_PACKET", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IS_PACKET", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IS_PACKET", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_QUANTITY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "QUANTITY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "QUANTITY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JUMLAH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JUMLAH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "JUMLAH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DISC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PPN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PPN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PPN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PPN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EXPIRED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPIRED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EXPIRED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPIRED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COST_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COST_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COST_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COST_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T_TRANSACTION_DETAIL] ([TRANSACTION_ID], [IS_PACKET], [ITEM_ID], [QUANTITY], [PRICE], [JUMLAH], [DISC], [PPN], [TOTAL], [DESCRIPTION], [EXPIRED_DATE], [COMMISSION], [COST_PRICE], [MODIFIED_BY], [MODIFIED_DATE]) VALUES (@TRANSACTION_ID, @IS_PACKET, @ITEM_ID, @QUANTITY, @PRICE, @JUMLAH, @DISC, @PPN, @TOTAL, @DESCRIPTION, @EXPIRED_DATE, @COMMISSION, @COST_PRICE, @MODIFIED_BY, @MODIFIED_DATE);
SELECT TRANSACTION_DETAIL_ID, TRANSACTION_ID, IS_PACKET, ITEM_ID, QUANTITY, PRICE, JUMLAH, DISC, PPN, TOTAL, DESCRIPTION, EXPIRED_DATE, COMMISSION, COST_PRICE, MODIFIED_BY, MODIFIED_DATE FROM T_TRANSACTION_DETAIL WHERE (TRANSACTION_DETAIL_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IS_PACKET", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IS_PACKET", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "QUANTITY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "JUMLAH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DISC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PPN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PPN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESCRIPTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EXPIRED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPIRED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COST_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COST_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T_TRANSACTION_DETAIL] SET [TRANSACTION_ID] = @TRANSACTION_ID, [IS_P" +
                "ACKET] = @IS_PACKET, [ITEM_ID] = @ITEM_ID, [QUANTITY] = @QUANTITY, [PRICE] = @PR" +
                "ICE, [JUMLAH] = @JUMLAH, [DISC] = @DISC, [PPN] = @PPN, [TOTAL] = @TOTAL, [DESCRI" +
                "PTION] = @DESCRIPTION, [EXPIRED_DATE] = @EXPIRED_DATE, [COMMISSION] = @COMMISSIO" +
                "N, [COST_PRICE] = @COST_PRICE, [MODIFIED_BY] = @MODIFIED_BY, [MODIFIED_DATE] = @" +
                "MODIFIED_DATE WHERE (([TRANSACTION_DETAIL_ID] = @Original_TRANSACTION_DETAIL_ID)" +
                " AND ((@IsNull_TRANSACTION_ID = 1 AND [TRANSACTION_ID] IS NULL) OR ([TRANSACTION" +
                "_ID] = @Original_TRANSACTION_ID)) AND ((@IsNull_IS_PACKET = 1 AND [IS_PACKET] IS" +
                " NULL) OR ([IS_PACKET] = @Original_IS_PACKET)) AND ((@IsNull_ITEM_ID = 1 AND [IT" +
                "EM_ID] IS NULL) OR ([ITEM_ID] = @Original_ITEM_ID)) AND ((@IsNull_QUANTITY = 1 A" +
                "ND [QUANTITY] IS NULL) OR ([QUANTITY] = @Original_QUANTITY)) AND ((@IsNull_PRICE" +
                " = 1 AND [PRICE] IS NULL) OR ([PRICE] = @Original_PRICE)) AND ((@IsNull_JUMLAH =" +
                " 1 AND [JUMLAH] IS NULL) OR ([JUMLAH] = @Original_JUMLAH)) AND ((@IsNull_DISC = " +
                "1 AND [DISC] IS NULL) OR ([DISC] = @Original_DISC)) AND ((@IsNull_PPN = 1 AND [P" +
                "PN] IS NULL) OR ([PPN] = @Original_PPN)) AND ((@IsNull_TOTAL = 1 AND [TOTAL] IS " +
                "NULL) OR ([TOTAL] = @Original_TOTAL)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIP" +
                "TION] IS NULL) OR ([DESCRIPTION] = @Original_DESCRIPTION)) AND ((@IsNull_EXPIRED" +
                "_DATE = 1 AND [EXPIRED_DATE] IS NULL) OR ([EXPIRED_DATE] = @Original_EXPIRED_DAT" +
                "E)) AND ((@IsNull_COMMISSION = 1 AND [COMMISSION] IS NULL) OR ([COMMISSION] = @O" +
                "riginal_COMMISSION)) AND ((@IsNull_COST_PRICE = 1 AND [COST_PRICE] IS NULL) OR (" +
                "[COST_PRICE] = @Original_COST_PRICE)) AND ((@IsNull_MODIFIED_BY = 1 AND [MODIFIE" +
                "D_BY] IS NULL) OR ([MODIFIED_BY] = @Original_MODIFIED_BY)) AND ((@IsNull_MODIFIE" +
                "D_DATE = 1 AND [MODIFIED_DATE] IS NULL) OR ([MODIFIED_DATE] = @Original_MODIFIED" +
                "_DATE)));\r\nSELECT TRANSACTION_DETAIL_ID, TRANSACTION_ID, IS_PACKET, ITEM_ID, QUA" +
                "NTITY, PRICE, JUMLAH, DISC, PPN, TOTAL, DESCRIPTION, EXPIRED_DATE, COMMISSION, C" +
                "OST_PRICE, MODIFIED_BY, MODIFIED_DATE FROM T_TRANSACTION_DETAIL WHERE (TRANSACTI" +
                "ON_DETAIL_ID = @TRANSACTION_DETAIL_ID)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IS_PACKET", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IS_PACKET", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "QUANTITY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "JUMLAH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DISC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PPN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PPN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TOTAL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DESCRIPTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EXPIRED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPIRED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COMMISSION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@COST_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COST_PRICE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_DETAIL_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_DETAIL_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTION_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANSACTION_ID", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_IS_PACKET", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "IS_PACKET", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_IS_PACKET", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "IS_PACKET", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ITEM_ID", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ITEM_ID", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ITEM_ID", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_QUANTITY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "QUANTITY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_QUANTITY", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 4, "QUANTITY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_JUMLAH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "JUMLAH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_JUMLAH", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "JUMLAH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DISC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DISC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DISC", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "DISC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PPN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PPN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PPN", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "PPN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TOTAL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TOTAL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TOTAL", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "TOTAL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_EXPIRED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPIRED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_EXPIRED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "EXPIRED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COMMISSION", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COMMISSION", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COMMISSION", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COMMISSION", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_COST_PRICE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "COST_PRICE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_COST_PRICE", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 18, 2, "COST_PRICE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_BY", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_BY", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_BY", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MODIFIED_DATE", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MODIFIED_DATE", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "MODIFIED_DATE", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANSACTION_DETAIL_ID", System.Data.SqlDbType.Decimal, 9, System.Data.ParameterDirection.Input, 18, 0, "TRANSACTION_DETAIL_ID", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Inventori.Contractor.Forms.Properties.Settings.Default.inventoriConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TRANSACTION_DETAIL_ID, TRANSACTION_ID, IS_PACKET, ITEM_ID, QUANTITY, PRICE" +
                ", JUMLAH, DISC, PPN, TOTAL, DESCRIPTION, EXPIRED_DATE, COMMISSION, COST_PRICE, M" +
                "ODIFIED_BY, MODIFIED_DATE FROM dbo.T_TRANSACTION_DETAIL";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.T_TRANSACTION_DETAILDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.T_TRANSACTION_DETAILDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.T_TRANSACTION_DETAILDataTable dataTable = new DataSet1.T_TRANSACTION_DETAILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.T_TRANSACTION_DETAILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "T_TRANSACTION_DETAIL");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_TRANSACTION_DETAIL_ID, 
                    System.Nullable<decimal> Original_TRANSACTION_ID, 
                    System.Nullable<bool> Original_IS_PACKET, 
                    string Original_ITEM_ID, 
                    System.Nullable<decimal> Original_QUANTITY, 
                    System.Nullable<decimal> Original_PRICE, 
                    System.Nullable<decimal> Original_JUMLAH, 
                    System.Nullable<decimal> Original_DISC, 
                    System.Nullable<decimal> Original_PPN, 
                    System.Nullable<decimal> Original_TOTAL, 
                    string Original_DESCRIPTION, 
                    System.Nullable<System.DateTime> Original_EXPIRED_DATE, 
                    System.Nullable<decimal> Original_COMMISSION, 
                    System.Nullable<decimal> Original_COST_PRICE, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_TRANSACTION_DETAIL_ID));
            if ((Original_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_IS_PACKET.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_IS_PACKET.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ITEM_ID));
            }
            if ((Original_QUANTITY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_QUANTITY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_PRICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_PRICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_JUMLAH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_JUMLAH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_DISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_DISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_PPN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_PPN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_TOTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_DESCRIPTION == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_DESCRIPTION));
            }
            if ((Original_EXPIRED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_EXPIRED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_COMMISSION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_COMMISSION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_COST_PRICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_COST_PRICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<decimal> TRANSACTION_ID, System.Nullable<bool> IS_PACKET, string ITEM_ID, System.Nullable<decimal> QUANTITY, System.Nullable<decimal> PRICE, System.Nullable<decimal> JUMLAH, System.Nullable<decimal> DISC, System.Nullable<decimal> PPN, System.Nullable<decimal> TOTAL, string DESCRIPTION, System.Nullable<System.DateTime> EXPIRED_DATE, System.Nullable<decimal> COMMISSION, System.Nullable<decimal> COST_PRICE, string MODIFIED_BY, System.Nullable<System.DateTime> MODIFIED_DATE) {
            if ((TRANSACTION_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((IS_PACKET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(IS_PACKET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ITEM_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ITEM_ID));
            }
            if ((QUANTITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(QUANTITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((JUMLAH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(JUMLAH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((DISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(DISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((PPN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(PPN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((TOTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(TOTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DESCRIPTION));
            }
            if ((EXPIRED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(EXPIRED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((COMMISSION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(COMMISSION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((COST_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(COST_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<decimal> TRANSACTION_ID, 
                    System.Nullable<bool> IS_PACKET, 
                    string ITEM_ID, 
                    System.Nullable<decimal> QUANTITY, 
                    System.Nullable<decimal> PRICE, 
                    System.Nullable<decimal> JUMLAH, 
                    System.Nullable<decimal> DISC, 
                    System.Nullable<decimal> PPN, 
                    System.Nullable<decimal> TOTAL, 
                    string DESCRIPTION, 
                    System.Nullable<System.DateTime> EXPIRED_DATE, 
                    System.Nullable<decimal> COMMISSION, 
                    System.Nullable<decimal> COST_PRICE, 
                    string MODIFIED_BY, 
                    System.Nullable<System.DateTime> MODIFIED_DATE, 
                    decimal Original_TRANSACTION_DETAIL_ID, 
                    System.Nullable<decimal> Original_TRANSACTION_ID, 
                    System.Nullable<bool> Original_IS_PACKET, 
                    string Original_ITEM_ID, 
                    System.Nullable<decimal> Original_QUANTITY, 
                    System.Nullable<decimal> Original_PRICE, 
                    System.Nullable<decimal> Original_JUMLAH, 
                    System.Nullable<decimal> Original_DISC, 
                    System.Nullable<decimal> Original_PPN, 
                    System.Nullable<decimal> Original_TOTAL, 
                    string Original_DESCRIPTION, 
                    System.Nullable<System.DateTime> Original_EXPIRED_DATE, 
                    System.Nullable<decimal> Original_COMMISSION, 
                    System.Nullable<decimal> Original_COST_PRICE, 
                    string Original_MODIFIED_BY, 
                    System.Nullable<System.DateTime> Original_MODIFIED_DATE, 
                    decimal TRANSACTION_DETAIL_ID) {
            if ((TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((IS_PACKET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(IS_PACKET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((ITEM_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ITEM_ID));
            }
            if ((QUANTITY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(QUANTITY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((JUMLAH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(JUMLAH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((DISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(DISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((PPN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PPN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DESCRIPTION));
            }
            if ((EXPIRED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(EXPIRED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((COMMISSION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(COMMISSION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((COST_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(COST_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MODIFIED_BY));
            }
            if ((MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_TRANSACTION_DETAIL_ID));
            if ((Original_TRANSACTION_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_TRANSACTION_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_IS_PACKET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(Original_IS_PACKET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((Original_ITEM_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ITEM_ID));
            }
            if ((Original_QUANTITY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_QUANTITY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            if ((Original_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            if ((Original_JUMLAH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_JUMLAH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            if ((Original_DISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_DISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            if ((Original_PPN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_PPN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            if ((Original_TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            if ((Original_DESCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_DESCRIPTION));
            }
            if ((Original_EXPIRED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_EXPIRED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_COMMISSION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_COMMISSION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((Original_COST_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_COST_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            if ((Original_MODIFIED_BY == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_MODIFIED_BY));
            }
            if ((Original_MODIFIED_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(Original_MODIFIED_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(TRANSACTION_DETAIL_ID));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591